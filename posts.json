{"posts": [{"id": 0, "text": "\ndate: 2014-01-20 10:50:17+00:00\nlayout: post\ntitle: Jekyll @ GitHub - 免费安全的博客\ncategories: 随笔\ntags: 分享 \n\n最近逛Yonsm的博客，仔细一看才发现是建立在github上的，便也试着在自己的帐号上建立个博客。\nYonsm用的就是Jekyll，它是用ruby写的，支持用markdown语法写博客。我直接下了Yonsm的博客进行修改，不用安装Jekyll，上传后就可直接使用了。\n感谢Yonsm。\n", "filename": "2014-01-20-hello.md"}, {"id": 1, "text": "\ndate: 2014-01-21 20:50:17+00:00\nlayout: post\ntitle: 试玩iOS开发\ncategories: 技术随笔\ntags: 分享 iOS Mac\n\n千辛万苦装了黑苹果，最初目的就是用Xcode。看到itercast网站上的视频教程，感觉ios开发也没有想象中那么难，小软件不需要很多objectc的知识，便试着零基础+搜索来写ios上的图书扫码软件，结果遇到各种险阻。\n界面布局还是挺顺利的。遇到storyboard和xib新旧两种格式，没管它们的区别，自动生成的是storyboard。\n扫码用第三方的zbar，这里遇到问题。一个是想照搬例子发现错误。半天才知道例子里用了release，而ios5之后采用ARC，自用释放内存，不用release，谁说ios没有碎片化。还有就是模拟器不支持模拟摄像头，测试不了。。于是改用TextEdit手输。\n获取json用NSURLRequest，解析json直接用ios sdk自带的NSJSONSerialization。\nPOST用NSMutableURLRequest。Run一下测试，Android上的功能基本都实现了。\n但想装到真的iPhone里还要做很多事。现在打包ipa还不会，上传到appstore要每年99刀的开发者证书，即使是越狱版也要做个假证书。不想再搞了。\n\n", "filename": "2014-01-21-ios.md"}, {"id": 2, "text": "\ndate: 2014-01-25 18:56:17+00:00\nlayout: post\ntitle: 国际娜，中国娜！祝贺娜姐夺得2014年澳网女单冠军！\ncategories: 生活随笔\ntags: 感悟 分享 \n\n在今天的澳大利亚网球公开赛上，李娜终于获得了胜利，首次在墨尔本球场捧杯！娜姐，好样的！\n第一次看李娜的比赛应该是在2010年澳网娜姐对阵小威的那场，可惜双抢七失利，当时我对小威的印象相对李娜更深刻。2011年毋庸置疑是娜姐的一个事业高峰。澳网打进半决赛加上央视的大力宣传，让李娜广为人知。法网的夺冠更让娜姐成为全国人民的焦点。此后电视上常见娜姐的广告。而法网之后，娜姐需要降温，商业价值突增后，似乎训练懈怠了，技术上也陷入瓶颈。于是李娜请来新教练，并获得辛辛那提站冠军，摆脱了低谷，反而迎来了职业生涯的第二春。这样的状态，李娜保持住了，并不断在进步。网球这样的对抗性运动，李娜在30岁的年纪还能如此vigorous，的确不简单，值得尊敬。\n李娜是个很有个性的球员，一个湘妹子。她离开体制，选择单飞。可能有人会说是为了更多的钱。的确，钱是一个因素，但我认为李娜更多地是在保持个性。在赛场下，我们常听见李娜用英文流利地回答记者提问。在比赛转播中，下面打着的是Li，没有China和Five-stars redflag。网球公开赛的制度充分显示了个人的重要性。但李娜始终代表着中国。李娜是在中国长大，与我们全体华人有着共同的文化背景。她表现出我们熟悉的行为。看到一个中国人在网球赛场上赢得荣誉，那是多么骄傲的一件事。而娜姐的成功，同时又推动了我国网球事业的发展，不知有多少人被李娜感染，打起了网球。想到这里我感到娜姐比赛的压力真是不小。一个国家的人的期待，既可说是支持，也可说是压力。\n这里不得不讲下爱国情。在中国走在复兴之路上时，爱国是希望中国更加强大，中国受到各国尊重。每个中国人有着很多相似之处，当中国人在外国遇到中国人，会因这些相似点产生强烈的亲切感。当中国强大，中国人取得成就时，同为中国人，便也会产生自豪感。李娜是中国人，并在网球赛场上取得成绩，受国人瞩目，同时也有人会提出批评，比如李娜很少代表国家队出战，批评她不用汉语，不爱国。而在李娜走向成熟的过程中，她的心里素质也备受批评。其实娜姐也是普通的中国人，在收到采访时，她会经常提到钱。打网球是他们一家richer。而李娜成名后，even 姜山 gets famous，商业价值激增。正是这样的话，让我感到一个真实而亲切的李娜。\n希望娜姐继续实现自己的目标！\n\n", "filename": "2014-01-25-LiNa.md"}, {"id": 3, "text": "\ndate: 2014-01-28 16:50:17+00:00\nlayout: post\ntitle: 用Intel XDK使用web技术开发应用\ncategories: 技术随笔\ntags: Web App\n\n逛makeuseof时看到的xdk，本来只知道国内的AppCan。看到是Intel出品，感觉支持上会给力点，就下来体验下。\nIntel XDK前身是appmobi，Intel收购了这家公司。但现在用的人还是很少，毕竟native app要好使多了。Intel XDK开发的手机应用叫Hybrid app，说是类似于native app，可以调用硬件。其实这是需要在平台上写好运行环境的，因此是不是跨全平台还得看Intel的支持。\n开发使用HTML+CSS+JavaScript，移动开发加上Jquery Mobile界面效果就有点像手机应用了。基本上了解网页前端开发的用这个应该还是很顺手的，运行效率肯定不高。\nIntel不错的是提供了Appview的软件，可在ios，android上测试软件。关键是ios不用开发者帐号就可以体验自己的应用了。\n官方文档\n\n", "filename": "2014-01-28-xdk.md"}, {"id": 4, "text": "\ndate: 2014-01-31 21:37:17+00:00\nlayout: post\ntitle: 也玩云计算\ncategories: 技术随笔\ntags: Cloud   \n\n知道SAE不能读写本地文件，不支持sqlite后就一直在找一个替代的云平台。GAE被墙了，BAE需要抢号，而且以后可能会收费。国内其它平台：ACE不支持python。CAE，JAE注册后一直无法使用。于是把目光转向国外。heroku同样不支持sqlite，而且操作并不容易，放弃。openshift是红帽公司搞的，提供极大的自由度，而且免费，可惜只有用https或绑定域名的方式访问，一度放弃。接着找吧，搜到NAE，它已经不再提供支持了，但相关页面中提到了nitrous，试试吧。\nnitrous是一个云端的开发环境，提供用户一个原生linux虚拟机环境，有在线编辑器和终端支持，相当给力，可惜国内访问速度不佳，而且不能用作应用引擎。但是这个可访问的linux虚拟机环境提供了科学上网的跳板。openshift还能用https访问，但ssh不上，终端使用代理的方式失败，因此放弃的，现在nitrous的这个环境就可以搞定了。\n\n最近一段时间都在试用云平台，终于可以安心享用一个了。这个过程也让我知道了更多博客，了解了诸如Iaas，Paas，Saas这样的概念，了解了云的构建成分。说实话，这是我第一次离云这么近。\n大年初一，大家新年快乐！！\n参考链接：\nNAE停止服务\nRedhat OpenShift 云计算平台试用小记\n在NITROUS.IO免费架设GHOST并绑定你自己的域名", "filename": "2014-01-31-cloud.md"}, {"id": 5, "text": "\ndate: 2014-02-10 21:22:17+00:00\nlayout: post\ntitle: 感冒了\ncategories: 生活随笔\ntags: 经验 感悟    \n\n天气一冷，再加上用电脑身体僵直，又不注意保暖，就病了。\n临睡觉才感到发热了，不想打扰妈就自己找药吃，结果感冒药都拿去学校了，只好自己泡了点姜水吃。平时有看健康节目，但掌握得半吊子，自己也不想信能有效果。结果感到滚烫也不出汗，一下子就吓急了，索性去掉层被子直接睡觉。但觉头昏脑胀，天昏地暗。\n于是乎很多负面的情绪会出来，瞬间觉得人生没有意义，自己前途黑暗等等。。\n第二天起来还烧着。中午妈妈买来药后就躺下休息。终于出汗了。这时备感精神，积极的想法也出来了。\n想着想着突然又有了遗憾。如果叫她来照顾我就好了，顺便。。。呵呵，空想（yy）是没有意义的。\n吃了几天药后感觉好得差不多了，又生龙活虎了。\n或许是好久没感冒再加上H7N9卷土重来，这一次生病的难受感让我产生恐慌。我想再了解点健康知识，有时间学学中医。其实关键的是在平时多锻炼，少坐着弄电脑，这个世界还有很多有意义的事儿可做。", "filename": "2014-02-10-being-ill.md"}, {"id": 6, "text": "\ndate: 2014-02-18 12:22:17+00:00\nlayout: post\ntitle: Autoit实现HTTP GET与POST方法\ncategories: 技术随笔\ntags: 经验 分享 Au3    \n\n想用AU3写使用HTTP协议发送POST，google后在autoit的论坛找到了不错的方法。\n有人说用xmlhttp，调用ie，用winhttp等等，还是这个obj操作com的方法简单实用。autoit上的大神写了个库，他命名为WinHttp.au3。但有一个UDF也叫WinHttp，使用时把名字改成WinHttp2之类的比较好。\n库：\n{% highlight autoit linenos %}\ninclude-once\nGlobal Const $HTTP_STATUS_OK = 200\nFunc HttpPost($sURL, $sData = \"\")\nLocal $oHTTP = ObjCreate(\"WinHttp.WinHttpRequest.5.1\")\n$oHTTP.Open(\"POST\", $sURL, False)\nIf (@error) Then Return SetError(1, 0, 0)\n$oHTTP.SetRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\")\n$oHTTP.Send($sData)\nIf (@error) Then Return SetError(2, 0, 0)\nIf ($oHTTP.Status <> $HTTP_STATUS_OK) Then Return SetError(3, 0, 0)\nReturn SetError(0, 0, $oHTTP.ResponseText)\nEndFunc\nFunc HttpGet($sURL, $sData = \"\")\nLocal $oHTTP = ObjCreate(\"WinHttp.WinHttpRequest.5.1\")\n$oHTTP.Open(\"GET\", $sURL & \"?\" & $sData, False)\nIf (@error) Then Return SetError(1, 0, 0)\n$oHTTP.Send()\nIf (@error) Then Return SetError(2, 0, 0)\nIf ($oHTTP.Status <> $HTTP_STATUS_OK) Then Return SetError(3, 0, 0)\nReturn SetError(0, 0, $oHTTP.ResponseText)\nEndFunc\n{% endhighlight %}\nPOST方法：\n{% highlight autoit linenos %}\ninclude \"WinHttp.au3\"\nGlobal $MD5 = HttpPost(\"http://www.afk-manager.ir/test/post.php\", \"password=WeWantThisAsMd5\")\nMsgBox(64, \"MD5\", $MD5)\n{% endhighlight %}\nGET方法：\n{% highlight autoit linenos %}\ninclude \"WinHttp.au3\"\nGlobal $sGet = HttpGet(\"http://www.google.com/\")\nFileWrite(\"Google.txt\", $sGet)\n{% endhighlight %}\n参考链接", "filename": "2014-02-18-au3-post.md"}, {"id": 7, "text": "\ndate: 2014-02-18 22:22:17+00:00\nlayout: post\ntitle: 生活杂记，技术手册与有思想的博客（本博客定位）\ncategories: 随笔\ntags: 讨论    \n\n最近看了很多博客，自己也写了几篇，不由思考自己博客的定位。\n这样定位吧，适合自己：\n随性而写，有什么想法就写下来。\n生活中有发现，有新意就写。\n业余技术文章，深度不会很深，主要是记录怎么做和做的经历。同时还想翻译英语文章锻炼。\n有思考的博文看我能想到多深了，受限于个人水平。\n先就这样了。", "filename": "2014-02-18-definition.md"}, {"id": 8, "text": "\ndate: 2014-02-20 21:48:17+00:00\nlayout: post\ntitle: Autoit 读取 Json\ncategories: 技术随笔\ntags: 经验 分享 Au3    \n\n最近用Au3写windows下的程序，想知道使用这个程序的人所在的地点，想到根据IP地址解析。目标是利用openshift上这个网站的接口，用AU3解析JSON来获取。\nGoogle后到autoit论坛找到这个UDF结合帖子里Seeker大侠的补充实现了。\n最终的代码：\n{% highlight autoit %}\n;~ #noTrayIcon\nopt('mustDeclareVars',1)\nopt('trayIconDebug',1)\ninclude \"WinHttp2.au3\"\ninclude \"JSON.au3\"\ninclude \"JSON_Translate.au3\" ; examples of translator functions, includes JSON_pack and JSON_unpack\nFunc _JSONGet($json, $path, $seperator = \".\")\n    Local $seperatorPos,$current,$next,$l\n    $seperatorPos = StringInStr($path, $seperator)\nIf $seperatorPos > 0 Then\n     $current = StringLeft($path, $seperatorPos - 1)\n     $next = StringTrimLeft($path, $seperatorPos + StringLen($seperator) - 1)\nElse\n     $current = $path\n     $next = \"\"\nEndIf\n\nIf _JSONIsObject($json) Then\n     $l = UBound($json, 1)\n     For $i = 0 To $l - 1\n         If $json[$i][0] == $current Then\n             If $next == \"\" Then\n                 return $json[$i][1]\n             Else\n                 return _JSONGet($json[$i][1], $next, $seperator)\n             EndIf\n          EndIf\n     Next\nElseIf IsArray($json) And UBound($json, 0) == 1 And UBound($json, 1) > $current Then\n    If $next == \"\" Then\n        return $json[$current]\n    Else\n        return _JSONGet($json[$current], $next, $seperator)\n    EndIf\nEndIf\n\nreturn $_JSONNull\n\nEndFunc\nGlobal $sGet = HttpGet(\"https://ip-json.rhcloud.com/json\")\n;FileWrite(\"ip.json\", $sGet)\n;Local $data = FileRead(@ScriptDir & \"\\ip.json\")\nMsgBox(0,\"\",$sGet)\n;Local $s3='{\"site\": \"http://ip-json.rhcloud.com\", \"city\": \"Wuxi\", \"region_name\": \"Jiangsu\", \"region\": \"04\", \"area_code\": 0, \"time_zone\": \"Asia/Shanghai\", \"longitude\": 120.28859710693359, \"metro_code\": 0, \"country_code3\": \"CHN\", \"latitude\": 31.568899154663086, \"postal_code\": null, \"dma_code\": 0, \"country_code\": \"CN\", \"country_name\": \"China\", \"q\": \"122.193.143.35\"}'\nLocal $json=_JSONDecode($sGet)\n;Local $json2=_JSONDecode($s3)\n;query this object\nLocal $city = _JSONGet($json, \"city\")\nLocal $province = _JSONGet($json, \"region_name\")\nLocal $timezone = _JSONGet($json2, \"time_zone\")\nmsgbox(0,default,$city&$province&$timezone)\n{% endhighlight %}\nCSDN上的大侠说到多一个逗号的问题：见此", "filename": "2014-02-20-au3-json.md"}, {"id": 9, "text": "\ndate: 2014-02-22 13:30:17+00:00\nlayout: post\ntitle: '[GUIDE]How to port roms simply'\ncategories: 技术随笔\ntags: 经验 分享 移植 Android     \n\n这本来是我用中文写的教程，现在用英语来写。中文版见我的百度空间\nThis guide is written in Chinese at first , and now, I try to write it in English. Here is the Chinese Version\nThanks to Suifeng(随风)'s guide, I can port LEWA, MIUI and other MT6589 Chips' ROMs to my ZTE U956. I just add some specific changes to his guide. \nThis guide may suit andoird 4.x 's porting , especially MTK based devices' roms.\nSome roms' download links:\nLewa:ZTE V987's rom\nMIUI: RedMi's rom\nPreparation\nDownload target rom,such as ZTE V987's Lewa ROM.\nDownload your device's rom,which can be flashed using recovery.\nExtract these two zips.Target rom to LEWA directory, and your device's to U956, for example.\nSome tools for windows: UltraEdit, Beyond Compare, android kitchen.\nEdit script\nOpen LEWA/META-IND/com/google/android/updater-script and do these:\n1.\nDelete something like this,which makes sure that the rom can not be flashed to other device(If this does not exist,then go to the next):\nassert(getprop(\"ro.product.device\") == \"v987_jb2\" || getprop(\"ro.build.product\") == \"v987_jb2\" || \n       getprop(\"ro.product.device\") == \"ztenj89_we_jb2\" || getprop(\"ro.build.product\") == \"ztenj89_we_jb2\" || \n       getprop(\"ro.product.device\") == \"v987\" || getprop(\"ro.build.product\") == \"v987\" || \n       getprop(\"ro.product.device\") == \"V987\" || getprop(\"ro.build.product\") == \"V987\" || \n       getprop(\"ro.product.device\") == \"P188F04\" || getprop(\"ro.build.product\") == \"P188F04\");\n2.\nDelete something like this,which will flash recovery(If this does not exist,then go to the next):\nassert(package_extract_file(\"recovery.img\", \"/tmp/recovery.img\"),\nwrite_raw_image(\"/tmp/recovery.img\", \"recovery\"),\ndelete(\"/tmp/recovery.img\"))\n3.\nSometimes,the partition table is different.It's more often if the two roms' devices are produced by diffenent companies.\nThe target rom's:\nformat(\"ext4\", \"EMMC\", \"/dev/block/mmcblk0p4\", \"0\", \"/system\");\nmount(\"ext4\", \"EMMC\", \"/dev/block/mmcblk0p4\", \"/system\");\nMy device's rom's:\nformat(\"ext4\", \"EMMC\", \"/dev/block/mmcblk0p5\", \"0\", \"/system\");\nmount(\"ext4\", \"EMMC\", \"/dev/block/mmcblk0p5\", \"/system\");\nHow to know your device's file system table? I know it by unpacking my device's recovery.img,and know it through etc/recovery.fstab.You can unpack it with bootimg.py or android kitchen.\n4.\nDelete something like this,which will flash uboot(If this does not exist,then go to the next):\nassert(package_extract_file(\"uboot.img\", \"/tmp/uboot.img\"),\n       write_raw_image(\"/tmp/uboot.img\", \"uboot\"),\n       delete(\"/tmp/uboot.img\"));\nReplace and add some files\n1.Replace\nReplace these (I think you can know these files' functions by their names. ):\nDirectories:\n/system/lib/modules , /system/lib/hw, /system/lib/soundfx, /system/etc/firmware, /system/usr/keychars, /system/usr/keylayout\nFiles:\n/system/lib/libcameracustom.so, /system/lib/libaudio*.so\nUpdate 2014-7-24: If the signal is weak or no signal, you may also replace every file with ril in /system/lib.\n2. Add\nAdd the files your device rom has while the target rom doesn't using Beycond Compare.\nModify /system/build.prop\nYou can change the device's name , the rom version and so on.\nIn my case , I found I must change ril.telephony.mode=1 to ril.telephony.mode=2, or the radio doesn't work.\nPort boot.img\nIt is a key step and maybe is the most difficult step. Sometimes you just unpack the two boot.img and replace the target rom's kernel with your device rom's kernel. But sometimes you need to do something with ramdisk. Then, it's recommended that you should do these in linux.\n Update 2014-07-24:\nThe guide in lewaos's bbs says that you need to extract your device rom's ramdisk, edit the init.rc and add  :/system/framework/lewa-framework.jar to the end of BOOTCLASSPATH. You can know what you should add for porting other roms by comparing the init.rc file. I recommend you do the operation using android-kitchen in linux.\nThe guide's link\nFinal\nZip LEWA and flash it. If you port well, then it should boot.\nSome advice:\nBeycond Compare is a excellent tool in windows. Use it properly and found the differences. There must be some diffences that cause your rom not bootable. My guide is not universal,but you are flexible and smart.", "filename": "2014-02-22-android-port-rom.md"}, {"id": 10, "text": "\ndate: 2014-02-25 15:36:17+00:00\nlayout: post\ntitle: Windows 98 & XP for VPC\ncategories: 收集\ntags: 分享 资源\n\n2012年整的98和xp的vpc镜像，现在放这里分享。\n98是我第一个接触的操作系统，代表着儿时的回忆。这个98虚拟机的意义一在怀旧，二在真的可以运行一些古老的程序。选择的是Saga98。\nXP是给98添引导是顺便装的，为ltm xp sp2精简版，安装盘才130MB大。\n现提供虚拟磁盘及配置文件给大家，驱动我都装好了～～：\n\n文件: D:\\win98.rar\n\n大小: 476072172 字节\n\n修改时间: 2012年3月2日, 21:18:34\n\nMD5: 67C5512E1DCC863758F77D1E49322946\n\nSHA1: 8052BA6DBABC2A7BD00822FC085FCA5E32644F57\n\nCRC32: E52057B5\n下载地址\n\n\n", "filename": "2014-02-25-win98-vpc.md"}, {"id": 11, "text": "\ndate: 2014-02-26 17:07:17+00:00\nlayout: post\ntitle: 给手机加装望远镜，瞬间变单反\ncategories: 电子数码\ntags: DIY \n\n起因是上课用U956拍投影，字体过小无法拍清。遂淘宝了手机望远镜。还记得雷军晒的红米拍月亮的照片吗？那个要高级多了。淘宝上买的是8倍变焦的望远镜，当然还要了三脚架。\n夹上手机，架上三角架就可以开拍了。拿在手上也可以，但很抖，一般用连拍才能获得较满意的图片。\n\n\n\n\n上测试样张\n原来的样子：\n\n装上望远镜后：\n", "filename": "2014-02-26-telescope.md"}, {"id": 12, "text": "\ndate: 2014-02-4 21:37:17+00:00\nlayout: post\ntitle: 过年在农村\ncategories: 生活随笔\ntags: 感悟   \n\n除夕后便开始走亲戚，去了很多户人家，吃了很多顿年饭。长辈们多在乡下，于是我对农村又多了一点了解。\n现在过年，年味已远不如从前，便是走亲戚也被看作了麻烦事儿。不过，到后听长辈交谈倒也是乐事。聊的大抵是家事，诸如子女的工作，婚姻，自己平时的生活、工作以及他人的情况。我一直佩服长辈怎么有这许多话讲，心想自己长大后不知有何可说。\n也有冷清的酒席的。因为彼此不熟悉，甚至都不认识，却坐在一起吃饭。于是听到最多的话是“吃，大家吃”。\n一次吃酒听到一位大伯说平时闲着没事，就打打麻将。我便想到农村人娱乐方式的缺少和农村富余劳动力的事。其实学习也是很好的消遣方式，我现在写博客也是如此。\n在农村看到老房子很是感念。随着新农村建设的深入，这样的灰墙乌瓦和木结构的农村房屋就难再见了。\n", "filename": "2014-02-4-countryside.md"}, {"id": 13, "text": "\ndate: 2014-02-6 21:22:17+00:00\nlayout: post\ntitle: '［译文］值得学习的十二种编程语言'\ncategories: 译文\ntags: 经验    \n\n原文：Programming Languages Worth Learning\n为什么翻译：\n锻炼英语能力，同时了解众多编程语言的特点。\n前奏\n编程语言一直是我的一个爱好对象。经过这些年，我已经对它们有了不少的了解。学习的第一个编程语言是Pascal，大概13年之前，而最近一个是Scala，学了只有几个月。\n尽管许多语言的作者宣称他们在困境之后创造的语言是最伟大的，但事情很少如他们所说。大部分“独特”的特点并不很独特，而真正独特的东西经常是没有什么用的。我不相信有一种伟大无双的语言，但我相信有一些语言在理论（在它们专注的方面）和实践（更有机会得到工作或更轻松完成任务）方面都很有价值。\n在这篇博文中，我会评论约十种我发现在这几年对我而言最有趣/有用的语言。我认为每一位专业的软件工程师应该都至少对它们知道点。\nC\n到现在，C语言已经存在了大约40年（它出现在1973年）。但它经常被看作一种高级汇编语言，在现在一个Java，.Net和 Python 流行的时代。C仍是做严谨的系统编写（写驱动，各种服务器和虚拟机）的唯一选择。\n学习C也给你对计算机内部工作的了解，比如内存管理和原始数据类型（基于CPU的registries）。\n最好的开始学习C语言的方法在过去的20年没有改变——只要买一本“The C Programming Language” by K&R。\nLisp\nLisp is worth learning for the profound enlightenment\nexperience you will have when you finally get it; that experience will\nmake you a better programmer for the rest of your days, even if you\nnever actually use Lisp itself a lot.\n\n——Eric S. Raymond - How to Become a Hacker\n现今最古老的语言之，创造于1958年并且在今天仍然有重要意义。重要在它独特的代码是数据方法（data approach），高级的代码工具产生(generation)工具（宏）和以增量（incremental）和交互的方式开发的能力。\n虽然它诞生是独特的许多特性（比如垃圾回收，if表达式，函数对象）现在能在许多现在语言中找到，Lisp仍然为感兴趣探索的人提供了不错的选择。\n这几天Common Lisp被认为是典型的Lisp方言—— 一种对命令式，函数式和面向对象式编程都有极好支持的多重编程范式语言。另一个流行的份额方言是Scheme，它是一种更简单的语言，主要关注函数式编程。它到现在仍是很多美国大学的编程入门课程的受欢迎的选择。（最近逐渐被Python替代）。\n学习Common Lisp，没有比 Peter Seibel 的“Practical Common Lisp”更好的了。\n如果你更喜欢Scheme，可以看看经典的“Structure and Interpretation of Computer Programs”。“Lisp Problems”对有抱负的Lisp程序员来说是一本不错的练习书。\nJava\n让我们面对这点-如果你去人才市场，三分之一的人是有关Java EE或Android开发的（另2/3也许是PHP和.NET）。这种语言不是很优雅，但这个平台真的很有吸引力。虽然有很多其它语言针对JVM（Scala，Groovy，Clojure，JRuby，Jython-只列出一些）。Java任稳稳地占据主导地位，这点不太可能马上改变。它的确是直接上最流行的编程语言。\n我已经教授过一些介绍JAVA编程的课程（在保加利亚），但我推荐“Core Java”这本书，基于我的教授经验。\nHaskell\n函数式编程在近几年随着并行计算机和和主流最接近的纯函数式编程语言Haskell的升起而不断变得流行。它的特点包含如type inference, lazy evaluation, monads, pattern matching这样的伟大想法。正如Lisp一样，许多Haskell的特性能在更多不纯包（比如Scala和Clojure）中找到，但在我愚见，Haskell仍是纯函数式语言中的顶尖。\n有许多在线的不错的免费Haskell学习资源。比如“Learn you a Haskell for great good” 和“Real world Haskell”\nPerl\n曾经不可争议的Internet之王Perl已经在和新生代动态语言如PHP，Ruby和Python的战斗中从恩典（grace）中跌下。尽管我不会建议任何人用Perl开始写Web或企业应用，它仍是些管理或帮助脚本的最好语言，有着最少的忙乱和最大的开发效力。它的特点是最强大的文字处理功能和非常灵活的语法（尽管有点混乱）。\nPerl CPAN也许是最大的为一种语言汇集的第三方库的集合。\n翻翻“Learning Perl”或就去浏览超赞的perldoc来马上开始Perl编写。\nClojure\nClojure是一种Lisp方言，有着对并行（parallel）和并发（concurrent）编程独特的支持。它运行在令人尊敬的的JVM之上。如果你打算做一些严肃的并行计算，并不需要别的。你会发现Clojure是一个集函数式数据结构，普遍的laziness，高阶函数和尾调用优化的功能和其它关于状态和身份方面新颖想法的一项的极好的集合。Clojure也清理了一些传统的Lisp语法（Ciojure比Common Lisp有更少的括弧）\n我推荐看免费的Clojure屏幕录像课程：blip.tv\nProlog\n逻辑编程家族最有名的语言。想解决数独问题一样解决一个问题会打开每个开发者的视野。\n推荐： “Learn Prolog Now”，一本问题集合 “Prolog problems”。\nRuby\n一个纯面向对象的动态脚本语言，对元编程有着很好的支持。它有用Java编写的版本（JRuby）和用.Net编写的版本（IronRuby），这使的用Ruby和任何流行平台上的软件进行交互很轻松。这款语言随着Ruby On Rails Web框架的流行变得越来越受欢迎，但它有很多有潜力的应用不包括RoR或web开发。\n推荐“Programming Ruby”和“The Ruby Programming Language”。\nPython\n一种纯面向对象的动态脚本语言，关注简单性，可读性和可维护性。因web开发，GUI程序和系统管理流行。哲言是“只有一种方式去做”和“它带着电池出现”。Python受Google的宠爱并被IT巨头广泛使用。\n一本好书：“Dive into Python 3”。\nC#\n.NET平台的标志语言。于Java在很多方面相似。C#不像Java那样有创新，介绍如泛型和属性这样的概念给主流程序员。它的特点是在Java之上在属性，灵活的命名空间和有限的type inference方面有改进。\n它被包含在着发额列表里的主要原因只是为C#开发者提供的大量工作岗位。在我的家乡保加利亚，大约三分之一的编程岗位与C#有关。\n我最喜欢的C#书是“C# in Depth”。\nScala\n一个有趣的纯面向对象语言和函数式语言的混合，带有一些并发计算支持。它的特点是advanced static type system (比Haskell更高级), state of the art Java integration, support for pattern matching, extractors and other functional goodness。如果有一种语言有机会代替Java，那它一定是Scala。。甚至Java之父 James Gosling 都这样说。\n推荐：“Programming in Scala”\nJavaScript\n我们不能结束这次关于值得注意的编程语言的混乱之旅且不提Web之王，促使Web2.0革命的JavaScript。尽管它有一个可怕的名字（JavaScript于Java不相干）。任何web开发者都可以做得不错，在学了一些Javascript之后。\n尾声\n我们不能在十几二十种语言方面都成为专家-我确定。但我相信所有我们在不同编程语言发现的想法和技术会丰富我们的思想，是我们成为更好的软件工程师。\n译者：\n作为一个计算机业余爱好者翻译一位IT大神写的文章真心觉得很吃力。一来是计算机术语的匮乏，二来是原作者的写作水平也不乍的。这次翻译全当训练了。\n另外本文只是作者自己的观点，你可能觉得Basic是最好的语言，却不在罗列中。", "filename": "2014-02-6-programming-languages.md"}, {"id": 14, "text": "\ndate: 2014-03-19 15:39:17+00:00\nlayout: post\ntitle: 得阑尾炎后的经历\ncategories: 生活随笔\ntags: 经历\n\n发病\n3.12日晚开始感到腹痛，不以为意。结果疼了一晚上，到第二天早上腹疼剧烈，并恶心呕吐。由于主要是上腹部疼，以为是胃病，自己一个人去校医院看病。医生诊断为普通胃病，并开了点胃药。回去后吃了药躺床上休息，结果醒来又吐了，仍伴有剧烈腹痛。再去校医院，医生给我按压了右下腹部，我才感到右下腹更疼，抽血后初步判断为阑尾炎。于是在室友的帮助下转院到无锡市人民医院。\n住院做手术\n挂急诊，等医生来后又做了B超，没有发现。但根据验血单的高血象，而临床症状，判断为阑尾炎。我同意手术，前往住院部。\n住院部的护士姐姐领我到床位，她轻松俏皮的话语让我感到轻松。接下来就是准备做手术了。\n由于在13点吃了点八宝粥，手术不得不在7点进行，期间禁食。我躺在床上休息，发着39度的烧。室友帮我办理了一切手续，还垫了钱，并带我去做术前检查。另一位护士来了，我也忘了她是来做什么的，我朦胧地感觉她很漂亮（其实是我没戴眼镜）。我又来了精神。医生又来问我病情了，我依前回答。我选择做微创手术，并签了字。父母还要从海宁赶来。\n时间很快到了接近7点，一位大伯推着手术车来接我了.我睁开朦胧的眼睛，拖着虚弱的身体上了车。由于高中同学做过阑尾炎微创手术，疼也不是很疼，又有同学医生护士在旁，也不紧张。推出去时一位好心的老伯还让我祷告，相信医生的技术，很感谢他。\n到了三楼，一扇扇门被打开，我被推进了一个明亮的手术室。几个年轻的医生在做着准备，说说笑笑的，看起来并不紧张。我被抬上手术台，医生给我打上盐水，接好心电，然后询问我病情。接下来他们就晾着我说笑了。过了几分钟，医生说开始了，然后我就什么都不知道了。\n手术后\n醒来后同学和指导员走了，是爸爸妈妈在照顾我。我问了他们一些事后就休息了。爸爸一直给我看着盐水。\n接下来的一天，我继续是禁食的。盐水一直挂着，倒也不觉得难受。斜对床是一位老爷爷，边上一张床上的看上去是一个大龄宅男。对面的床是一位虽然头发花白，但十分精神的无锡老爷爷，手术前他住在家里。我在床上无聊，便玩妈妈的iPhone5c，自己的手机出门没带，看看新闻，上上网，上上QQ，微信，看看订阅号。上QQ时向高中和大学同学讲了我的病情。然后医生建议我多走动，网上查询下是预防肠粘连。过一天后好了一点，开始吃流质食物。斜对面来了新病友，大约40多岁的叔叔。\n此后一直到3月18号，我的生活大抵如此度过。每天从iPhone上获取信息，也在住院过程中了解了一些东西。\n特殊的事\n16号同学们来看我，挺高兴，跟她们讲了几十分钟话。因为是“小病”，大家显得轻松。\n……\n医院的人们\n……\n出院\n18号停止挂盐水观察，19号也就是今天我出院了。离开住了6天的医院，跟病友和医生护士分别还真有点不舍。8：00我们离开人民医院。在江大带好东西，请好假后就回来了。12：00到家了。休息下后我有开始活动了，便趁着记忆清晰，写下此文。", "filename": "2014-03-19-experience-of-having-appendicitis.md"}, {"id": 15, "text": "\ndate: 2014-03-20 15:56:17+00:00\nlayout: post\ntitle: 患阑尾炎期间了解的东西和感悟\ncategories: 生活随笔\ntags: 经历 感悟\n\n塞翁失马，焉知非福。尽管得了阑尾炎，我从中还是获得了不少知识。我发病的经历可见此流水账。\n看病与医学方面\n就诊流程\n在校医院自己走了一个流程，挂号-看病-结算-领药。才知道交药钱是要在挂号处交的，以前都是父母帮办的。之后去无锡人民医院。挂号还要选科室，阑尾炎是外科的。\n医院设施和医院大楼类型\n医院的设施感觉比较高级复杂，有光照、供水、空调、检查、治疗等一系列，一天的费用肯定很高，所以收点费也是应该的。住院部的设备也很不错，对患者还是医务人员都很方便。大楼类型一般有普通门诊部、急诊部、住院部。其它还有一些治疗大楼。发现住院部楼最高，患者休养舒服吧。\n医学方面的常识\n当然对阑尾炎有了清楚的认识，网上有详细介绍，但平时没关注，以后应该多了解点医学。还了解了点静脉注射的东西。打针的分类、流程什么的有了了解。第一次看到静脉留置针，了解了压脉带，找脉，看回血判断是否打入静脉等等。\n\n医生与护士\n在门诊有医生接待，他刚在抢救病人就急忙赶回来了。住院部有住院医师和护士，科室就分得很细了。我在腔镜甲乳外科。看了墙上的医务人员介绍才知道医生护士都是要考职称的。在治病过程中，感觉医生护士不仅需要医疗的技术，还需要医疗的艺术。护士姐姐的照顾让我感到温暖，实在而可爱的声音让我感到亲近。医生的认真而不失轻松让我放心。\n对中国医生和护士的看法\n医生护士都是救死扶伤的善良的人，我们应该尊重他们。在中国当一个医务人员往往要经过严格的训练，通过严格的考试。但最近报考医学护理的人减少了，而社会对医务人员的需求是不断增加的，这就有了一个供求矛盾。往往一个护士要管十几个甚至几十个病人。她们的工作看似只是送药、打针等简单的活，其实也是很辛苦的。医务人员每天面对的不是病人就是家属，有些实行三班倒，与家人在一起的时间很少。同时还出现很多剩男剩女，因为医务人员在人们心中的地位在下降，他们不再是神圣的了，便显得不那么受人欢迎。医务人员付出这么大，因此他们的工资高一点是应该的。\n这是病号的分配：\n\n对中国医患关系的看法\n最近中国医患矛盾紧张，出现很多事件，比如医学博士刚想报答社会就被刺伤身亡，南京公务员打护士事件等。原因有很多，我认为有这么几点：\n1.患者花费的治疗费用高，觉得享受医生治疗天经地义。而保险报销比不高，有些人是看不起病的。如果服务差而价高，更会不满。\n2.医务人员有时忙于工作，语速较快，语气不太好，甚至有颐指气使的行为。让患者不舒服。\n3.舆论报导领导矛盾升级。对一些不良的医务人员的报导，让人民对医生不再信任，医务人员社会地位下降。\n4.中国经济发展，人们过于注重物质，缺少人文修养的培养。\n因此医患问题是与医患双方和中国大环境息息相关的。随着经济的发展和改革的深化，估计医患问题可得到改善。\n信息技术在医院\n接下来来到我平时感兴趣的的话题了。信息技术在医院得到广泛的运用，大大地提高了工作效率。以前我关注的信息管理与信息系统与此关联挺大。\n1.医生得知患者信息，给患者开单，生成报单什么都是通过计算机软件来实现的。我看那个软件在提高操作效率方面做了工作，能根据首字母拼音快速搜索定位，按钮多而不乱。\n2.医院有无线覆盖，且信号不错，更重要的是免费。其实这是在无锡市范围内的公共服务，但在医院保持信号，还要靠这个无线路由器吧。NETGEAR，以前没听过。\n\n3.我一开始听到以前在PPC上常听见的提示音，还以为谁还在用这么过时的手机。结果给我一个惊喜。护士拿着搭载了Windows Mobile 6.5的手持PDA，运行一个叫移动护士工作站的软件，通过无线与总台连接。它还具备条码扫描功能，能扫描病人手上的腕带，实现快速管理信息的功能，护士不再需要手写记录了。采用wm而不是android估计是因为开发较早，且与PC交互、软件移植方便什么的有关吧。\n发张图，是MOTO MC55AO型号的：\n\n\n腕带\n\n最后\n安于休养的我：\n\n宽敞的病房（这其实是示教室，别的病房还有电视）：\n", "filename": "2014-03-20-someting-known-during-my-appendicitis.md"}, {"id": 16, "text": "\ndate: 2014-03-21 10:15:17+00:00\nlayout: post\ntitle: Windows CE (Windows Mobile) 相对于Android的优势劣势\ncategories: 电子数码\ntags: 讨论\n\n最近因患阑尾炎，在医院住了几天，观察到护士在使用基于Windows Mobile 6.5系统的手持PDA工作，称作移动护士工作站。以前从来没注意这么一个市场。目前，Windows Mobile已被微软抛弃，Windows \nphone 8采用了NT内核。而智能手机市场已被Android和iOS这样的后起之秀占领。但wince系统还在使用，见于很多公共设备，民用GPS车载导航仪等等。\n医院采用基于windows mobile的手持PDA，而不采取基于免费开源的Android的手持PDA是为什么呢？我想试着讲下它们各自的优势。\nWindows的优势\n\n\nWinCE支持架构广，ARM，X86，MIPS等。\n\n\nWinCE占用系统资源小，省电。\n\n\nWinCE是硬实时操作系统，而Android基于Linux，最多是软实时。\n\n\nWinCE与桌面Windows的API大致相同，开发移植方便。学习，开发成本低。因为大多数企业采用Windows系统，开发者熟悉Windows的开发。\n\n\n沿用桌面Windows的用户体验，有出色的文件管理功能。\n\n\n历史悠久，厂家开发经验丰富。\n\n\nWindows的劣势\n\n\nWM系统不再受支持，平台软件少。Android火热。\n\n\n若设备研发成本高，厂家少，价格高。许多手持PDA都增加了很多功能，大多在硬件层面实现。\n\n\n对比免费的Android没有价格优势。WinCE便宜，像魅族M8当初采用wince就是这个原因。但WM系统貌似收费要高的。\n\n\n没有Android那样在技术上与时俱进。\n\n\n两者皆有的优势\n\n\n系统开源，WinCE开放100%内核源代码，Android自称开源系统（Linux内核），定制性强。\n\n\n有不错的开发文档支持。\n\n\n我不清楚的方面\n\n驱动开发\n\n……\nAndroid主要还是针对手机和平板的系统，WindowsCE则关注广大嵌入式设备，或许不应太过纠结，可比的是WindowsCE和嵌入式Linux。现在微软的移动系统是Windows Phone。\n另外对比也要考虑很多因素，视具体目的会有不同。要考虑使用年限，生产成本，销售，开发难度等一系列问题。\n\n\n可参考网页：\n嵌入式中linux+android与wince的区别\nWince、Android谁会是PDA主流操作系统\nAndroid 之后，是否依旧坚持WINCE？\nWindows CE vs Embedded Linux\nwince6.0 实时性分析\nR.I.P, WINDOWS CE\n相关公司：\n中联软件、上海方联信息科技、浩瀚技术、东软、摩托罗拉、惠普。\n相关专业：\n信息管理、物联网...\n相关人士：\n无锡市人民医院刘喻", "filename": "2014-03-21-wince-vs-android.md"}, {"id": 17, "text": "\ndate: 2014-03-07 19:40:17+00:00\nlayout: post\ntitle: 观电影《红河谷》有感\ncategories: 生活随笔\ntags: 感悟 影评\n\n\n怎么给十八年前的老电影写观后感？今天的近代史课老师给我们看了《红河谷》，我这个当代青年受到感触，不由想写下这次观影感受。\n现讲下影片内容吧，还很新鲜：\n影片以1904年的英国侵藏战争为背景，开头却是黄河边汉族百姓因大旱以一对童女献祭的场景，最后时刻，少女的哥哥就了她，但最终在追击下砍断吊桥，跌入河中。镜头一转，便到了西藏。原来少女叫雪儿，被藏族人所救，改叫雪儿达娃。健壮的藏族小伙格桑在和雪儿的相处中，产生感情。\n这时，英文声突然传入耳中，一对外国人来了。一个显得比较温和，会说汉语。另一个显得蛮横无礼。结果因他鲁莽的开枪，引来雪崩。格桑救了他们。之后头儿认为他们是恶魔，要炸死他们。但拉萨来信，说要放了他们。格桑展现高超的乌朵技术，再次救了这两个外国人。那个鲁莽的英国人罗克曼倒也感恩，临走送给格桑一枚打火机。\n会说汉语的琼斯留了下来，因为受伤。头儿的女儿丹珠出现了，她对格桑显得很在意。格桑回去了，发现雪儿赤身下了河，赶紧拉她上来，因为这样会冒犯神灵。头儿的女儿看了琼斯，对望远镜感到很惊奇。阿妈带雪儿去市场，回来说起了珠穆朗玛女神的故事。英国人琼斯和藏族同胞度过了快乐的一段时光。藏族人民表现出对新事物的无限好奇。琼斯被藏族人民的纯真善良打动，尤其是对美丽而高傲的丹珠。琼斯还是回去了，他给罗克曼看了给丹珠拍的照片。\n丹珠对雪儿说，她是头儿的女儿，她喜欢的人，别人是没有机会的。雪儿的哥哥发现了雪儿，想带她回去。格桑十分生气，喝了一晚上的酒。\n罗德曼带着英军入侵西藏了，西藏军队一个个倒在英国军队先进的枪炮口下。雪儿的哥哥也回来和英军对抗，但最终还是牺牲了。英军抓住了丹珠，想通过侮辱她来逼躲在城堡的藏族人出来。头儿忍不住冲了出来，很快救倒了。丹珠唱起了藏歌，引起了藏族人民的回应。丹珠骑的牛引起了混乱。丹珠拿起炮弹，坦然地引爆了弹药箱。英军继续进攻。雪儿中枪了，格桑与雪儿抱在一起。英军登上城头，罗克曼看到格桑，想放过他。格桑点燃了城头上的油箱，与英军同归于尽。琼斯带着丹珠的照片，终于看到了圣山。然后就只是奔腾的牦牛。\n这部电影很有教育意义，体现在展示民族团结，宗教信仰，藏族文化，是爱情故事与爱国传奇。\n全片的音乐充满了藏族风情。尤其在丹珠就义前唱的歌极具感染力。这激发了我的爱国情，可惜我不会唱藏歌。于是我在下课后唱了《义勇军进行曲》。\n头儿说，藏族，汉族，回族，蒙族，满族组成了中国，藏族与别的民族的事是自己的事。藏族人民个个不顾生死，冲向英军，保卫家园。这都体现了民族情、爱国情。\n本片重头到尾都显现了中国人的宗教信仰。开头的汉族人信河神。藏族人信佛，喇嘛众多。朝圣者的虔诚度更是极致。\n再讲讲演员与角色吧。我之前知晓的就是宁静。这个贵州女孩，很好地展示了一个美丽高傲而又任性的藏族女子形象。她的笑容是那么美丽，迷倒了琼斯。结果宁静还就和演琼斯的保罗·克塞结婚了，不过他们在2011年就离婚了。好了，我只想讲宁静。\n老师给我们放这部影片，目的还是想让我们了解近代中国屈辱的历史。西藏士兵们义无反顾地压向英军，却迅速地倒在英军的枪林弹雨下。几千个人，在十几分钟内失去生命。我不由想到第二次鸦片战争，僧格林沁的精锐满族部队的覆灭。接下来是军事理论课了，老师又要强调了国防的重要了。\n看片过程中，同学们有嬉笑，让我感觉很不舒服，我们应该以稍微严肃认真的态度欣赏影片。也有同学说演得很假，的确，电影有时被了表现主题，用了很多夸张的手法，有时甚至不合情理，但我感觉《红河谷》表现得还是很真实的。\n当代青年，不仅要学会技术，更要有高尚的情操，深厚的人文素养，深沉的爱国热情。", "filename": "2014-03-7-Red-River-Valley.md"}, {"id": 18, "text": "\ndate: 2014-03-07 22:54:17+00:00\nlayout: post\ntitle: 技术团队的协作与团结\ncategories: 随笔\ntags: 感悟 合作\n\n我只是一个在校大一学生，根据在社团的经历，写下此文。\n假设你在一个技术团队，比如说一个IT团队。肯定有比你技术高的人，也有还刚刚学习的人。既然别人比你强，你就应该欣赏他们，肯定他们。而对于新手，也应该耐心的回答他们的问题，不显得自己十分高大上。永远做一个乐队里最烂的吉他手。\n一个技术团队，它的技术是关键。一个团队的技术水平，不是以一个人的水平为标准的。因此，水平高的成员应该乐于分享知识，在帮助别人的同时还能提高自己。而互相的帮助能使团队更团结。\n一个团队是有分工的，它应该根据实际的需求和成员的能力分配。合适、到位的分配能极大地提升效率。\n作为团队的成员，应该得到尊重和肯定。即使他人没有表现出来，你自己也要相信，你很重要，你很棒！而赞美者也不应该过度赞美或只赞美某个技术很好的人，这可能会伤害别人，赞美也是要适度的。\n成员的个性也很重要，能给团队带来很多新的东西。当然，个性也要服从团队大局。虽然不像士兵无条件服从命令，也要小心地提出意见。\n最后，大家一起朝着目标奋斗，一起获得快乐，感觉很美好啊～～\n先就写这么点吧，快11点了。", "filename": "2014-03-7-collaboration.md"}, {"id": 19, "text": "\ndate: 2014-03-09 11:20:17+00:00\nlayout: post\ntitle: 龙芯逸珑8089D笔记本使用心得\ncategories: 技术随笔\ntags: 龙芯 经验 Linux\n\n\n\nI am using a Lemote Yeelong, a netbook with a Loongson chip and a 9-inch display. This is my only computer, and I use it all the time. I chose it because I can run it with 100% free software even at the BIOS level.\n                                                         Richard Stallman\n\n\n去年十二月份279RMB入手的逸珑8089D,我在百度空间发过报告文。\n时不时地用了几个星期，也总结下经历。\n硬件方面\n逸珑笔记本采用龙芯2f处理器，使用MIPSIII指令集，低功耗。8.9寸屏幕够看，键盘也还可以。无线网卡是rtl8187芯片的，信号不错，可惜不支持ap功能。\n系统方面\n引导\n逸珑默认使用PMON引导，PMON是可定制，这也是为什么说逸珑本是全开源笔记本。还可以用grub，专门为MIPS写的。\n可选系统\n逸珑本出来很多年了，有众多版本可选。根据不同的编译（ABI不同），还分为O32,N32,N64的系统，这是跟mips架构有关系的。\n1.随机自带的是共创Linux，内核是64位的，基于debian5，运行流畅，尤其是图形方面，有最新的显卡驱动，但不可更新，软件包比较旧了。\n2.Debian,o32,官方支持活跃，软件新而全，适合日常使用，推荐。\n3.Gentoo，n32，有做好的带X的系统，可以不用从stage3开始。官方也有支持文档。上手比较困难，适合有经验和追求性能的linux用户。\n4.Fedora 13，n32，就是坑。\n5.Magic Linux,n64,linuxfans的同胞搞的，rpm系。\n6.Parabola，发展自arch，有mips支持，有arch的特点，包管理系统什么的。我不会用。\n…………更多见官方wiki。可以自己编译内核，官方有提供源码包\nDebian\n再讲讲Debian吧。有龙芯论坛官方支持，提供了一系列软件，有安装工具和安装包。下载地址\n安装方法有在线与离线两种。装好的系统没有什么本质区别。接下来日常使用和x86上的linux没什么区别了。\nliushiwei做的离线恢复用vmlinux很不错，我也做了一个离线恢复包，用qemu-debootstrap制作在打包即可，很方便。\n注意点是debian的X显卡驱动和内核。默认的显卡驱动不适合8089d，需要删除才能进X，将来的Debian8可能可以解决这个问题。内核没有针对8089d优化，比如电量不显示。龙芯吧有大侠编译了精简的内核，专门适配的8089D。还有debian7自带3.2的内核下，如果没有插sd卡，字符界面下会出现sdb错误的提示，这是要么rmmod ums_realtek，要么换内核，要么插张sd卡。\n最后说说我可以用龙芯干嘛：\n1.当个人服务器或做无线热点（加装USB无线网卡）。\n2.开vim写代码。\n3.进图形界面，上网，玩游戏。我移植了仙剑奇侠传和主题医院，不过玩得更多的是supertux。上网速度不是很给力，推荐浏览移动页面。命令行下fbterm+w3m也可以。\n4.研究mips，linux就比较高深了。", "filename": "2014-03-9-yeelong.md"}, {"id": 20, "text": "\ndate: 2014-05-16 21:56:17+00:00\nlayout: post\ntitle: 陈伟鸿做客江大\ncategories: 生活随笔\ntags: 社会 名人 大学\n\n得悉《对话》栏目组要来江大。\n其实我之前对《对话》并不十分熟悉，以前看过这个节目，但印象不是很深刻。主持人看着面熟，但就是不知道他名字（汗）。查了一下，原来叫陈伟鸿。再看他的资料，竟然是福建师范大学英语系毕业的，当过老师后，选择了当主持人，并且成功了。我认为他的经历对我很有借鉴意义。之后又看了主题为在线教育的一集《对话》，感觉不错，便更期待了。\n于是，我在听雨上抢到了票，并准备了几个问题。比较自私的，我想了跟英语专业和自主学习有关的问题。\n5.16号，星期五，期待一睹陈老师的风采。\n有点流水帐了。但这样放电影，可能更显真实吧，也方便我回忆。\n早早坐着等待了。其实我是想了解下幕后，最终还是当了纯粹的观众。\n7点钟，节目正式开始了。首先是江大学生的才艺表演。不得不吐槽的是某十佳歌手大出风头，最后还说有请俞敏洪做客。。\n终于，陈老师上场了。与《对话》中不同的是，陈老师成了嘉宾，江大的学生担当主持人。原来本次活动的内容是又我们江大来安排的。\n于是，本次活动围绕着陈老师展开了。\n其实设计的内容还是不错的，既显示了江大和无锡的特色，又让我们学生了解《对话》的背后。而且这次节目对话的意味断断续续的还是有的。\n但我觉得我并没有从中学到很多。\n面对陈伟鸿这样的名主持，我们的活动没有充分发掘他的资源，主要是在考验他、不断的提一些问题。但这些问题范围太广，没有深度，陈老师大都即兴回答。也是陈老师经验丰富，能力强，回答得还是很自如的，也频有妙语。我还是听到了挺多有意义的内容。最主要的是做真实的自己（在讲如何面试时提到）。这是我爱一些央视名嘴的原因。但在后来，主持人请陈老师辨别白酒，台下就有人起哄要干了、meng了。看得出，陈老师平时不大喝酒，也不喜欢因应酬什么的喝酒。但在这样的氛围下，他也还是喝了。\n在转轮盘讲述经历环节中，陈老师做了次主持人，请7岁的guzhengyang小朋友来转动轮盘。陈老师还是做主持人最本色、自如啊！我明白我之前期待的是作为主持人的陈伟鸿。他来与学生对话，为大学生提供建议。\n有一点我一直很反感。就是主持人不停奉承说陈老师是男神。虽然可能会有很多陈老师的粉丝，你一直强调总不好吧。还有在猜人事物环节中，让陈老师和上台的学生拥抱、合照，过于频繁。可能是我们见名人见得少吧，容易激动。其实这就是种名人光环。见过某某名人，甚至与某某名人有亲密的举动，都会成为夸耀的资本。当然，这是一次难忘的记忆。陈老师的确有很多值得我们尊敬与学习的地方，所以他能成为名人，可以这么受欢迎，肖像权这么值钱。\n大学生毕竟还是年轻，喜欢展现自己。开头有十佳歌手，中间又有走秀节目。这次节目是真实反映了江大大学生的，其实江大学生才是舞台的主角。但他们容易冲动，想展示个性，有时却又有从众心理。\n主持人的表现还是说得过去的，虽然有几次比较突然的提问或回答让陈老师感到莫名其妙，有时也显得对陈老师不够尊重。几个粉丝去问问题，也看得出是做了点准备的。但我不认为问了很好的问题。另外，过度微笑也让我感到不舒服。尽管我自己有时也会是笑眯眯的好好先生。\n最后，再讲讲结尾时对微博提问的抽取环节。没有做到随机性啊！只是照着屏幕上有的选，没有随机抽选的动作，显得不够公平。可笑的是主持人用微博出了小问题这样的话来掩盖内容突然被翻页时自己的尴尬。\n不多说了，讲这么两个小时的活动，也只是泛泛而谈了。\n\n", "filename": "2014-05-16-meet-Chen-Weihong.md"}, {"id": 21, "text": "\ndate: 2014-05-27 10:56:17+00:00\nlayout: post\ntitle: 使用Porteus 3.0\ncategories: 技术随笔\ntags: slax porteus\n\n以前做启动光盘、U盘，常折腾Slax。硬盘启动Slax，保存changes，也可当本地系统使。个人感觉这样的系统一是小巧，不用安装，启动方便，二是定制性很强，因为模块化。用Slax的livecd制作脚本还可以基于其它系统做livecd，比如我做的红旗linux6的Livecd。三是方便研究linux，因为你每次操作的改动都可通过查看changes得知。\nPorteus原名slax-remix，后来做得好了，有了很多自己的技术，就改名了，同样基于slackware。优点什么的见官网\n昨天启动U盘里的Porteus2.1，可惜pppoe拨号莫名地失败，去官网看到3.0出来了，索性更新下。\nsyslinux引导U盘启动，基本5秒内见桌面。选择的Kde4环境果然很爽，界面靓丽细致，功能强大。习惯了Win7的Aerosnap，kde4的窗口吸附（是这样叫吧）更加强大，移到边上可操作缩到上方、下方还是整个半边屏。别跟我说这种功能在别的桌面环境装个软件配置下也可以，我很懒的。另外kde4比gnome3在笔记本的小屏幕上能显示更多内容。\n默认没有中文字体和输入法，可参考我之前的汉化方法,Porteus也提供了语言选择工具。其实就是装个中文字体，装个输入法，装若干中文包的事。\n制作xzm模块还是很容易的，用继承自slax的txz2xzm,tgz2xzm,deb2xzm,rpm2xzm,dir2xzm等等脚本转换很轻松。源码包用src2pkg也比较方便，自己编译也可以。Porteus提供保存session或changes到模块或单个文件或文件夹的功能，使做包更容易了。当然依赖关系还得自己搞定。\n\n个人很喜欢slax或porteus的模块化，显得比较清爽，没有不干净的感觉。启动选always flesh进系统就是全新的系统，copy2ram大大提高运行速度，保存changes就可以当本地linux用了。\n以上就是我作为使用者的一点感受。\n", "filename": "2014-05-27-try-porteus.md"}, {"id": 22, "text": "\ndate: 2014-05-04 20:36:17+00:00\nlayout: post\ntitle: 变通\ncategories: 随笔\ntags: 讨论 心得 \n\n好久没写博客，今天想写了，就写了两篇。\n变通是什么意思，字面看，变变就通达了。新华字典的解释是根据情况变动，不拘泥成规。\n为什么我会想到这个词？今天去食堂吃饭，顺便给饭卡充钱。我看到一楼的充值机前大约排了7、8个人。而往往这时二楼的充值机是没有一个人的。我便上二楼，不用等待就充上了。每次，我都会因自己知道变通（小聪明）而得意。哼，这群不知变通的大学生。\n或许这种变通只是我自己感觉的。可能别人知道二楼人少，但就是懒得跑到二楼。他们宁可等一会，看看手机，很快也就轮到自己了。而对于我来说，能减少等待时间是最好的，我不想等待。另外，从众心理也有影响。\n我们学校四个食堂。我经常换着去就餐。若是出了新的菜品，我便想去尝一下。不得不说，他们的改变与进步会吸引消费。\n五一节，大家都出去玩了吧。景点人山人海，公路拥堵，再加上天气变热了，我本来的看看无锡计划就打消了。交通拥堵时，最好能绕开拥堵路段。导航软件在规划时会给出多条路线，什么最短路线、经济路线、高速优先和避开拥堵等。这应该也是一种变通吧。这次针对京藏高速拥堵，有关部门就给出了五条绕行路线。当然，如果你只有一条路可走，那也只有走了。\n我一直会有要不守成规的想法，有要变通，走自己的路的想法。其实，高考上大学这条路就是成规。其实是我安于现在，对未来没有什么看法，对自己没有清晰的定位。所以高考上大学可能是最适合我的路了。大家都这样走的，而且成功例子也很多，我也这样走吧。\n最近感觉接触到的都是零散的信息，学习效率不高。最近专注的是应该是Android应用的开发及配套开发。在我尽可能周全的构思并幸苦地去实现的过程中，我感到了快乐。但现在随着开发接近尾声，新想法的枯竭，也没有那么大的激情了。结果是我最近过得比较无聊。于是我想变通。我发现了新的兴趣点，语言研究和无线通讯。语言研究可以用理科的知识，而理科的研究，应该有点人文底蕴。\n国内教育其实一直没有本质变化，虽有不断的变动，任受到人们的指责。这是或许需要的是彻底的改革。但我认为，目前教育体制总体还是成功的，它完成了人才培养与选拔的功能。而且职业学院与普通高中的区别，体现了应用型和研究性的分类，但随着互联网的发展，人们的思想越来越开放，学生的素质也有所下降。开放的舆论也加重了人们的不满。这是对学生道德素养教育的缺失，说到底是信仰的缺失。\n大学教育被认为是通识教育，它不像职业学校这样直接教授技能。我认为如果是适应市场需求，培养应用人才，可以增加具体的技能教育。而搞研究，则应该提供一个浓厚的研究氛围。但应用与研究不是分裂的。比如说医生。一个医生往往要在临床工作，又要搞科研，带学生。实践是理论的基础，理论有提高实践的水平。所以，你搞应用的，应该了解点最近研究成果。搞研究的，应该经常应用。这里也有一个变通之理。\n再讲讲敏感的东西吧。自从翻出墙后，感觉三观改变了很多。对历史人物的评价应该是客观的。2006年的cly案网上都说是政治斗争下的冤案。它压制了地方创新能力，削弱了地方特色，为的是加强集权统治。人家想变通啊，变通得很好啊（参见那些年的上海经济发展状况）。小孩子表示不懂。", "filename": "2014-05-4-flexibility.md"}, {"id": 23, "text": "\ndate: 2014-05-04 19:56:17+00:00\nlayout: post\ntitle: 入手德生PL380-小测感受\ncategories: 电子数码\ntags: 无线 广播\n\n最近对无线广播情有独钟，可惜手机只有FM功能，频率有限，信号也不是很好。我们学校的校园广播都是87Mhz以下的。于是便想买一台专业的收音机。记得以前家里有一台德生 R-909。\n\n对收音机不是很了解，主要看它的频率范围。想听听外国的广播，专门搜索可听bbs、voa的收音机。收到的是德劲和德生的几款。我看中了PL380。网上看看评论也还不错，ETM和ATS功能挺方便，二次变频ms很强大。虽然要248RMB，还是入手了，想高端一点。\n\n在某猫的德生旗舰店买的，第三天就送到了。黑色主机+USB线+电源+三枚充电电池+天线，感觉挺周到。\n操作还是很方便的，按FM、MW/LW切换波段，再ETM，再用TUNING换频道。想直接存储就ATS，也可以手动按M键存储。VF手动输入频率，VM使用本地存储的频道。还有步进调整。其它的闹钟\\定时关机和温度功能也不错。了解更多去看官网看吧。\n下面说说关键的收听吧：\nFM方面在室外能搜到二三十个台，但在寝室信号不太好。我甚至发现我的U956的音质更好。\nAM方面。长波，中波测的不多。短波能搜到五六十个，但噪音都比较大。测试当天下雨可能也会影响信号。短波搜到的大多是其他地方台，有搜到一个朝鲜台、英语台和日语台，对广播电台还不了解，叫不出名字。因为噪音比较大，我没耐心去听，不过英语台虽然有噪音，还是听得懂的。\n先就这样吧，晚上听收音机睡觉。\n", "filename": "2014-05-4-radio-tescun-pl380.md"}, {"id": 24, "text": "\ndate: 2014-07-12 10:46:17+00:00\nlayout: post\ntitle: 暑假计划\ncategories: 随笔\ntags: 假期\n\n好久不更博了，期间有很多想法，但有没有写出来并发上来。\n两个月的暑假，安排安排吧。\n1、学开车，考驾照。\n不知道能不能在暑假学完，现在开车是基本技能了。\n2、看书。\n买了乔布斯传的英文原版和乔布斯演讲集。用了osx，看了乔布斯的相关资料后一直很崇拜乔布斯。内容有点多，一要坚持，二是可以有选择性的看吧。\n3、学习iOS开发\n黑苹果加越狱的s版5c，开发的硬件条件已具备。iOS平台的吸引力的确很大，但开发有难度。我这样的业余爱好者打算看o'relly的书加上网上的中文教程加实战一步步摸索。\n先就这么点吧，还有其它的小事，打游戏什么的就不列了。出去社会实践、兼职工作什么的暂不考虑（我不24小时宅在家里就不错了）。\nHave a meaningful summer holiday!", "filename": "2014-07-12-2014-summer-holiday-plan.md"}, {"id": 25, "text": "\ndate: 2014-07-12 21:21:17+00:00\nlayout: post\ntitle: Sprint版有锁iPhone5c\ncategories: 电子数码\ntags: iphone\n\n还在学校的时候逛bbs，看到新的itouch 16GB带后置摄像头版出来了，售价1498元。跟帖中有人提到还不如买s版5c。于是，有锁的iPhone进入我的脑海，并占据了位置。\ns版5c真心便宜，最低时红色有磕碰版卖999元。现在卡贴有了，iOS7.1.x越狱了，它又涨价了。这s版5c为什么这么便宜？主要是美国sprint公司限定只能使用自己公司的号码，sim卡只有用sprint特殊的卡，即便在美国，也是有锁的。双模卡的解锁方法也不适用（我还买了写卡器，没什么大用，手边的卡还都解不了）。而中国黑客搞出卡贴，实现了解锁，真心赞！\n在贴吧和论坛逛了几天后，1350找的tom商家在淘宝的店下单了，蓝色16GB，9新单机。\n收获后感觉还是很新的，做工的确不错。到手后就越狱，装rsim的卡贴。这次我网购没经验，没向老板咨询，自己用力插卡，把卡贴折坏了。郁闷。。先当touch用吧。第二天，在Yosemite下配置xcode，实现越狱真机调试，感觉不错！\n忍不住还是重新买了超雪黑卡，这次操作小心翼翼，准备充分，把sim卡也磨薄了一点，插入没有阻力。很快，按教程实现电话、短信和E网功能。fieldtest看信号强度，居然达到-48，不是我的剁手兴平时-80能比。呵呵，1500元用上iPhone5c，感觉很超值了。\n买iPhone，一是享受硬件，二是享受完善的软件。iOS的生态环境的确比Android好多了，起码苹果的服务能用。google在中国要是不被墙，可能也会好很多。越狱后的iPhone其实很自由开放。用cydia装deb，搭建自己的源，都很爽。\n以上是我享受国内解锁与越狱研究成果，完美使用s版5c的经历。", "filename": "2014-07-12-sprint-iphone-5c.md"}, {"id": 26, "text": "\ndate: 2014-08-16 13:53:17+00:00\nlayout: post\ntitle: 我的PPC玩机生涯\ncategories: 随笔\ntags: 经历 PPC\n\n\n2007年暑假，父亲买回来一只手机。这只手机很特别，有一块很大的屏幕，下面简单的几个按键，右上方一个奇怪的logo，从没见过的牌子。\n我便开始把玩。居然是触摸屏，可以用触控笔操作。里面有音乐播放器和视频播放器，还预置了一些音视频。此外还有很多游戏。一个游戏模拟器，可以玩超级玛丽这样的游戏。可以拍照、摄像，还可以上网。我顿时被这样功能强大，体验新鲜的手机震撼了。此后，我从包装上知道了这个手机的牌子叫多普达。我再在网上搜索相关内容，这便开始了我的PPC玩机生涯。\n知道这部手机叫多普达818，是一台智能手机，我便搜到了相关论坛，里面有各式各样的资源，一个全新的世界。我点进了一个论坛叫52dopod，进818版块查看。后来才知道，爸爸买的是818pro，也就是830，与818并不一样。于是我注册，发贴，下载资源到手机上捣鼓。之后我又喜欢上发帖，看到有人会我帖，总是很兴奋。但我能发的东西毕竟有限，我又开始了转帖。\n记得当时主要有这几个论坛：口袋数码、手机之家、惠州PDA、我爱多普达、592PPC、wmpol…… 后来又兴起了如uc论坛、塞班论坛这样的网站涉及到wm。而我主要的阵地是52.我当上了斑竹，因发帖（主要是转帖）活跃，管理积极而被选为优秀版主。而现在52随着PPC的落寞已不复存在。当年龙哥创办这个论坛可能也只是一时兴起吧，他个人主要还是以经营水货为生。\n好了，大体的经历就是这样。我再挑点东西细讲一下。\n当时发帖，主要是发软件帖、游戏帖、主题美化帖。PPC上软件不多，有的都是精品。虽然不多，但种类齐全（在当时看来）。我在发帖回帖中知道了很多软件。而在美化上，主要用到各种软件，比如wa2+wad、ppx能把状态栏都美化。我自己用wad做出模拟的xp界面。还有各种今日插件，掌心万年历的、htc home、manila、chome、无限今日、timepanel表盘、天气秀等等。皮肤都可以定制，有模仿iPhone的、也有移植自其它手机的、也有很多个人独创的皮肤。\n当时我对GPS导航特别感兴趣。记得第一个进的论坛是100gps，知道了如凯立德、灵图天行者、route 66等一系列导航软件，并试用了凯立德。可惜830没有gps模块，一直没有用于实际导航。但我一直关注着，并转了大量的软件帖。此后又知道了熊坛和虎坛。在虎坛时还玩起了开心农场，笑～～\n当时基本每一个PPC软件都值得把玩。830带红外模块，有一个遥控器软件，可以学习并用于遥控。这个功能只有现在的Android旗舰机才有。有一个PocketDos的软件，可以模拟dos、linux等等。当时我费大量时间装了windows3.2，启动是启动了，运行很缓慢，我还不知道怎么装触摸控制驱动。但从此开始了我对操作系统的发现之旅。系统从win3.2玩到Vista，再到linux，再自己做启动盘，这是后话了。\n我后来接触了刷机，当时不敢乱刷，只把IPL、SPL、OS、Radio、三色屏、硬启等等概念了解了。等我开刷第一个rom时，刷机方法已革新到使用HardSPL了。当时记得刷的第一个rom是fly_2000的19209的6.1，从wm5升级到wm6.1，感觉到不仅是外表的变化，还有功能的完善和速度的提升。当时rom追求的是速度\n、省电。也有很多美化版的rom，但我更喜欢纯净版的，甚至字体都没有，称为口口版，在启动后可选择字体安装，用到的yonsm的celecmd。\n刷了rom后，我便也想自己做rom。当时不错的rom论坛有xbeta、掌上帝国以及后来兴起的DFT。拿别人的模板定制，选择自己喜欢的软件。当新的核心出来时，不想等大大们发布，自己下小桥的cht9000的模板来移植定制。可我对此真心一窍不通。直到后来DFT出分类分好的纯净的资源、有了xip自动移植工具和一些定制kitchen后才做出了一个rom。\n到了2010年，830的白屏死机问题越来越严重，到后来就被弃置了。我还尝试拆机检查，结果搞得屏幕抖动，开不了机的问题依旧。\n在830上，可以运行linux和android，有个项目叫wing-linux，给omap850的cpu的ppc做android。我试用后感觉android更适合手机使用。于是在2010年，我买了htc G1，又开始了我安卓的玩机生涯。但我的PPC玩机生涯没有结束。我又以90元的价格分别淘了当年5000+的P860和钻石来留念。\n本来还想多配点图的，以后再说吧。", "filename": "2014-08-16-ppc-life.md"}, {"id": 27, "text": "\ndate: 2014-09-15 18:58:17+00:00\nlayout: post\ntitle: Android修改屏幕亮度\ncategories: 技术随笔\ntags: 系统优化 framework 反编译\n\n习惯苹果的屏幕亮度后再用我的U956，感觉即使是最低亮度也要闪瞎眼睛了。于是想到修改屏幕亮度。\n以前看别人做的rom，提到自动亮度调节优化，调低最低亮度什么的，我也网上搜索了一下，是通过反编译framework-res.apk，改亮度数据来实现。\n网上教程很多，我就讲下自己的经验吧。\n用apktool进行反编译与打包操作。数据只需修改/res/values/integers.xml内最低亮度的数值。改成10就可以了，因为步进值我不改了，还是10。我解开后发现我的乐蛙rom的最低亮度是30。。\n```\n10  最低亮度\n255 最高亮度\n102 开机默认亮度\n10      步进值\n```\n在windows下打包成品也有点讲究。用winrar把生成的apk和原版的apk打开，把生成的apk里的resources.arsc替换到原版apk，压缩方式选择存储。\n接下来把apk放到系统里。\n我这里讲下命令行的操作方法，用root explorer感觉一不小心就会死机，而且要是重启开不了机也可以进recovery用命令操作。\n简单点直接上命令吧：\n```\nC:\\adb push framework-res.apk /system/framework-res.apk \nchmod 644 /system/framework-res.apk\ncp /system/framework-res.apk /system/framework\nreboot\n```\n操作正确的话基本能进系统了，而且亮度降低了。\n接下来再讲一个修改亮度的方法，直接引用下原文：\n\n手机的最低亮度是多少？是0，也就是完全黑屏。调整为1晚上看书刚刚好调整方法如下/sys/class/leds/lcd-\nbacklight/brightness。brightness就是存储亮度值的文件，我们用文本编辑器打开，修改数值为1，晚上看书不刺眼\n，修改后将这个文件改为只读模式，防止锁屏后系统重新修改。只要不重启，他就一直是1。为了方便修改，我们可\n以用re创建快捷方式到桌面，方便下次修改！\n\nroot后使用adb shell命令行修改：\n```\ncd /sys/class/leds/lcd-backlight\necho \"25\" > brightness\n```\n相关链接：\n反编译+回编译教程，DIY美化你的手机【反编译framework-res.apk为例】\n安卓反编译framework-res.apk修改配置文件解决最低自动屏幕亮度太亮  \n教你如何手动修改安卓手机的最低亮度值，很实用，很简单！", "filename": "2014-09-15-android-mininum-brightness.md"}, {"id": 28, "text": "\ndate: 2014-09-07 9:43:17+00:00\nlayout: post\ntitle: iPhone安装python运行本地搜狗代理\ncategories: 技术随笔\ntags: 越狱 ios\n\n开学了，学校的无线信号增强了，可惜500MB的流量不够用啊。还好可以用搜狗代理，不仅减少流量使用，还提高了网速，虽然有些网站访问不了，但基本能满足需求。\n以前玩Android时也这样做过，不过我是chroot到debian系统里运行的，比较麻烦。没尝试过安装python到本地系统。\n而ios本身是osx，基于unix，越狱后用cydia安装软件，采用deb包管理系统，很方便。\n具体怎么用搜狗代理呢:\n1、cydia安装python及依赖包。我这边的网连不上源，出现500或hash not match错误，用vpn才连上的。\n2、把小虾写的搜狗代理的py脚本放到iphone上。\n3、安装mobile terminal在iphone上运行命令。因为不支持真后台，还要安装mobileterm backgrounder，不然再登进terminal时原来的东西就都没有了。\n4、terminal下进root帐户，运行python sougou.py。\n5、wifi设置里设置代理，服务器127.0.0.1，端口1998。如果连不上，在终端里^C关闭代理，再python sougou.py开启代理试试，一直到能连上为止。\n好了，现在就可以享受优质的校园网络生活了。\n\n", "filename": "2014-09-7-ios-proxy.md"}, {"id": 29, "text": "\ndate: 2014-10-10 20:23:17+00:00\nlayout: post\ntitle: 从玩帝国时代II中学到什么？\ncategories: 生活随笔\ntags: 游戏 感悟\n\n最近一时兴起，重新玩起了帝国时代II。为了在玩游戏时提高英语，我还把界面设为英文的。\n作为一款游戏，我在放松的同时，又能学到什么的？\n首先，我能了解历史。帝国时代的故事基本基于历史史实改编。帝国时代II征服者里有13个文明，覆盖亚洲、欧洲、美洲、北非各区域，在玩游戏时了解罗马帝国到中世纪的各大文明的历史。\n其次，我一定程度上提高了英语水平。主要是对各种单位、建筑、文明、习语有一定的了解。而且因为在玩游戏中经常会看到，文字与图片相结合，一起记入我的脑中。\n接下来，从如何玩好这款即时战略游戏的角度谈。讲下我玩帝国的一点经验。\n1、一开始生产较多的农民，发展经济。有能力可对对方进行骚扰。\n2、如果敌人来进攻又没有攻城武器，利用建筑抵挡，减少部队伤亡。\n3、抓住优势时期，及早消灭对方。\n4、利用兵种相克，能有以弱胜强的奇效。\n5、集中兵力，避免分散，以致被逐个击破。\n6、善用地形，灵活操作，让每个单位能攻击到对方而又减少伤害。远程兵可采取点杀、放风筝的方法。\n7、做好后勤工作，防备偷袭，也要有强大的爆兵能力，及时为前线送上生力军，不给对手喘息的机会。\n我最想说的是不要因惧怕单位的牺牲，而不敢出击，怠误时机。特别是地形对自己不利的时候，我总会犹豫。而当我的部队冲上去时，因为会分散追击，我又怕损失过大。我总要带两个僧侣，把血量低的部队治好再进击。当一波部队全军覆没时，我才发现资源还剩很多，而人口已经很少了。其实对方的情况和我一样，所以只要能迅速补充，我就能打得起消耗战。当然实战的技巧也很重要，能用较少的伤亡换取胜利最好，优势是一点点累积的，可能就是不断的小便宜拉开的差距。以上其实在星际争霸中反映得更加明显。\n\nRemembering that you are going to die is the best way I know to avoid the trap of thinking you have something to lose.\n                                                                                                     ————Steve Jobs\n\n既然相信自己能胜利，就义无反顾地上吧，不要因小的损失而影响对全局的把控，特别不要使自己浮躁。\n好了，其实我这样说主要是因为我小时玩帝国时代，一个战役总能玩很久，拖到最后憋一波兵赢得胜利。游戏的节奏很慢，电脑的水平也很菜，但我很享受游戏的过程，这是现在的我感受不到的。现在的我一心是想用最小的损失、最快的速度解决战斗。而竞技游戏，一定要有输赢，或许是争胜之心是游戏更加刺激有趣。是我想使自己差异化的表现。\n不管怎样，游戏毕竟是虚拟的，还是要好好在现实世界拼搏。", "filename": "2014-10-10-play-age-of-empires.md"}, {"id": 30, "text": "\ndate: 2014-10-11 19:50:17+00:00\nlayout: post\ntitle: 那些音乐、影像和记忆\ncategories: 生活随笔\ntags: 感悟\n\n音乐和影像伴随着人的一生，也串起了人的记忆。当初我听着某首乐曲，正好在做着某件事情，它们碰巧结合在一起，形成深深的记忆。现在，我想把一些音乐、影像与相应的记忆做一个整理。\n这些记忆不是随时能想起的，我先把能想到的写下来。\n1、Lemon Tree与Mac OS X\n当时我正在折腾安装黑苹果，初次尝黑苹果，一种全新的感受。同时同学电脑扬声器循环播放的之前未听过的一首lemon tree，伴随着我初尝黑苹果。\n\n2、苹果、乔布斯、音乐、影像\n苹果每次发布会都会选择主题乐曲。苹果最经典的发布会当然是MacWorld2007，乔布斯出色地向世人介绍iPhone，改变了整个手机产业。而macworld2007的主题曲是I feel good。乔布斯在发布会上演示了很多影音，其中印象最深的是Like A Rolling Stone。这也是乔布斯出席D5时放过的入场曲。\n\n3、电视剧、电影与音乐\n每部电影电视剧都会配上独特的音乐，听到这些音乐，就会想起当年看这些作品的心情。因为作品太多，就不列举了。\n4、游戏与影音\n且不说游戏的音效与背景音乐，因为一款游戏可能可以玩很久。记得小时候玩铁甲风暴，边上在放外国电影，记忆深刻。\n5、军训与影音\n军训真的是难以忘怀的经历,恰好神曲《小苹果》风靡。。同时还玩了supertuxkart，里面的配乐多样。\n6、你的样子与PPC\n电影《阿郎》的主题曲，正好被卖家放在新买的PPC里，初次体验PPC就听了这首歌。当然里面还有黄黄的视频。\n7、快乐老家等与妈妈\n小时候和母亲出去散步，她总会唱一些歌，记得最深的是《快乐老家》和《草帽歌》\n……\n我突然想放弃了，因为人的记忆有多少，这样的例子就能举多少。藏在心里，偶尔想起也挺好。", "filename": "2014-10-11-music-image-memory.md"}, {"id": 31, "text": "\ndate: 2014-10-20 15:50:17+00:00\nlayout: post\ntitle: 办了个VPS\ncategories: 网络\ntags: digitalocean vps 教育网\n\n在北邮人看到用教育网邮箱注册帐号，申请学生计划，digitalocean帐号可获得100美元。而digitalocean一直提供较廉价但质量不错的服务，最低每月5美元，就能使用有512MB内存，20GB ssd硬盘的主机，有1T流量。\n于是我开始关注免费和廉价的vps服务。注册了vps.me，选择美国地区，用网络电话textnow激活才用上免费服务。vps.me虽然提供免费服务，但质量不高。还是digitalocean比较给力，毕竟是付费的。\n于是注册digitalocean，我的推广链接：https://www.digitalocean.com/?refcode=56b23021298e，注册可得10美元，我可得25美元。需要填上银行卡信息或paypal支付5美元来激活帐号，之后还有等待审核(发ticket)。填上github给的promo可得100刀优惠。才知道把银行卡上的信息都填上，就能直接扣钱了，感觉真不安全，把卡背面的CVV刮掉吧。\n目前还只用于ssh代理科学上网，以后再想想做什么吧。\n更新：实际测试，vps.me用作ssh代理也够用了，使用ipv6地址和一个共享的ipv4地址，10GB流量足够。目前digitalocean上的droplet被我销了。\n\n", "filename": "2014-10-20-edu-vps-ssh.md"}, {"id": 32, "text": "\ndate: 2014-10-23 15:50:17+00:00\nlayout: post\ntitle: 在digitalocean vps上搭建pptp vpn\ncategories: 网络\ntags: digitalocean vps vpn\n\n接上一篇文章。\n我已经能用ssh代理了。但毕竟还要设置代理，不如直接用vpn方便。我喜欢pptp这样只需要用户名和密码，可直接在各电脑和手机操作系统上使用的vpn。\nvps.me的vps没有ppp模块，不支持iptables -t nat，各种功能不健全。所以还是要用digitalocean的vps。\n下面就讲下搭建过程，基于ubuntu的：\n安装PPTP\napt-get update\napt-get install pptpd\n配置PPTP\n编辑/etc/pptpd.conf\n把以下内容前的#去掉\n```\nlocalip 192.168.0.1\nremoteip 192.168.0.234-238,192.168.0.245\n```\n上面的两行为VPN服务器的IP和VPN客户端连接后获取到的IP范围。\n添加VPN帐户\n编辑/etc/ppp/chap-secrets 添加如下内容：\nusername pptpd password *\n其中username为你要添加的VPN帐号的用户名，password为你VPN帐号的密码。\n修改DNS服务器\n编辑/etc/ppp/options，添加如下内容：\nms-dns 8.8.8.8\nms-dns 8.8.4.4\n开启IPv4转发\n编辑/etc/sysctl.conf文件，去掉net.ipv4.ip_forward=1前的注释\n运行如下命令，使配置修改生效\nsysctl -p\n重启pptpd服务\n/etc/init.d/pptpd restart\n安装iptables\napt-get install iptables #如果已经安装可以跳过\n开启iptables转发\niptables -t nat -A POSTROUTING -s 192.168.0.0/24 -o eth0 -j MASQUERADE\niptables-save > /etc/iptables.pptp\n在/etc/network/if-up.d/目录下创建iptables文件，内容如下：\n```\n!/bin/sh\niptables-restore < /etc/iptables.pptp\n```\n给脚本添加执行权限：\nchmod +x /etc/network/if-up.d/iptables\n至此PPTP VPN服务器端的设置就完成了。然后设置下pptp的vpn，就可以连上了！\n参考链接：Linode VPS PPTP VPN 安装配置教程", "filename": "2014-10-23-vps-pptp-vpn.md"}, {"id": 33, "text": "\ndate: 2014-11-04 16:34:17+00:00\nlayout: post\ntitle: 给当今品牌机装Win7激活那点事儿\ncategories: 技术随笔\ntags: Windows 装机\n\n去年买新笔记本装win7就费了我不少劲。在远景写了这篇文章。\n时隔一年多，我再给同学装win7，又稍稍费了点劲。原因有下，其实主要是激活问题，安装与驱动都不是问题：\n1、原装Win8系统，UEFI+GPT组合，想保留win8，装双系统，只有装win7 64位版，并开启主板csm模式。\n2、联想M495默认没有启用slp，没有slic2.1的表。oem与kms激活都不行。\n3、gpt+efi，无法软破解激活。\n我用无约而来的win7 33in1版安装，装好后用slic toolkit查看有两张slic表，一张是slic2.1的能通过验证，但怎么也激活不了。于是再用kms激活。因为装win8习惯了kms激活。结果也失败了。起先估计是装的零售版的问题，于是下了江大的正版win7。结果也kms激活失败了。之后才知道因为slic表marker的问题。\n我突然想到我的电脑当初是在dos下用工具改bios才有slic2.1的表的。于是到远景搜索。果真找到了适用于m495的vbkem，运行enable slp的命令后再重启，查看slic。2.1了！\n然后导入证书和密钥就成功oem激活了。\n一切的一切，都为了看到这个：\n", "filename": "2014-11-4-install-win7-on-oem-devices.md"}, {"id": 34, "text": "\ndate: 2014-11-05 17:45:17+00:00\nlayout: post\ntitle: ssh内网穿透，实现校外访问校内网\ncategories: 网络\ntags: ssh nat 教育网\n\n寝室的网络都是经过NAT的，没有公网IP，无法从外部访问。而学校的反向VPN只对至善生、研究生和教师开放。\n那么在校外，想访问校内网或操作寝室的电脑，该怎么办呢？我得知了一种ssh的穿透方法。利用一台vps穿透内网。\n寝室的笔记本：\nssh -N -f -R 2222:127.0.0.1:22 root@vps的IP\nVPS上:\nssh -p 2222 username@localhost\n这样在VPS上就可以ssh到寝室电脑了。然后我想用ssh代理来浏览内网。\n在寝室电脑，通过远程端口映射，使得VPS：2222 映射到 寝室电脑：22\nssh -N -f -R 2222:127.0.0.1:22 root@vps的IP\n在校外电脑上，通过本地端口映射，使得校外电脑：2222 映射到VPS:2222\nssh -N -f -L 2222:127.0.0.1:2222 root@vps的IP\n现在可以ssh -p 2222 username@localhost登录寝室电脑了。\n然后运行代理：ssh -qTfnN -D 7070 username@localhost -p 2222。在浏览器上设置下socks代理后，就可以访问内网了。\n这样做就是万一VPS重启了，连接就丢失了，不过一般没什么问题。还有用VPS搭VPN，然后校内和校外的电脑都连上，也可以实现校外访问校内网。\n相关链接：\nSSH的内网穿透\nSSH隧道与端口转发及内网穿透", "filename": "2014-11-5-ssh-penetrate-nat.md"}, {"id": 35, "text": "\ndate: 2015-01-10 18:58:17+00:00\nlayout: post\ntitle: 外院十周年迎新晚会\ncategories: 随笔\ntags: 江南大学 外国语学院\n\n本来想写意(liu)识(shui)流(zhang)的感想的。现在就发几张图片吧。\n\n\n\n\n", "filename": "2015-01-10-new-year-party.md"}, {"id": 36, "text": "\ndate: 2015-01-10 18:21:17+00:00\nlayout: post\ntitle: 开年第一篇，上二专一周感想\ncategories: 随笔\ntags: 二专 学习\n\n大二下开始了，报了会计作为第二专业。\n高考报志愿填江大，第一志愿就是会计来着，而第二是英语。分数只超了5分，就进了英语专业。现在经过1年多的学习，倒也觉得能是英语专业的学生也挺不错的。英语这样的通识教育，既让我专心提高英语水平，也给我时间开拓了视野。幸福指数真的很高。\n选择第二专业为会计，因为会计这门活实用性很强，就业面广。可以弥补光学英语专业性不强、知识面不够广的问题。\n\n以上是这学期的课表。\n一个星期过后，课都上了一遍。我初步了解了学什么，但还远没有入门。\n感觉会计是教我算帐，对管理和决策提供依据，统计是做数据获取、分析、表述与解释,西方经济学研究如何配置有限资源满足无限的需求，而经济法是让我们了解法律，懂得创办公司、签合同之类的流程，利用规则维护利益。\n统计什么的让我想到了大数据，R语言和Python来着。不过不管是会计还是统计excel还是最常用的吧，当然还有专业的SPSS。\n不管怎样，希望能坚持下去。当然前提是第一专业要学好，学第二专业的同时也能帮助第一专业有突破就更好了。\n引用下乔布斯的话：\n\n......Of course it was impossible to connect the dots looking forward when I was in college. But it was very, very clear looking backwards ten years later.\nAgain, you can't connect the dots looking forward; you can only connect them looking backwards. So you have to trust that the dots will somehow connect in your future. \nYou have to trust in something - your gut, destiny, life, karma, whatever. This approach has never let me down, and it has made all the difference in my life.\n", "filename": "2015-01-10-second-major.md"}, {"id": 37, "text": "\ndate: 2015-01-11 21:43:50+00:00\nlayout: post\ntitle: 学习的过程亦是创造的过程\ncategories: 随笔\ntags: 感想 学习\n\n这句话不是我原创的，是听广播时听到的。南京广播台的《新闻评弹》节目，主题我居然忘了。因为我边听还边刷社交软件。\n但这句话我记得很深。\n的确，学习不是简单地获取知识。在学习的过程中还要有自己的体会，创造出一些东西。\n以今天我预习《跨文化交际》第二单元为例吧。\n例一：\n一女生演讲时用到了马丁路德金“我有一个梦想”的例子。这个例子家喻户晓，因此对观众没有多大的冲击力。\n然后我就想到了以前一个竞赛节目，选手以“狼来了”为例，详细的讲了“狼来了”的故事。结果被袁腾飞批评。\n例二：\n马丁路德金是几十年前的人了，对现在的人的影响要小得多。即使以海明威的作品为例，效果也不好。年轻的美国人可能知道海明威，但可能没读过他的作品。这时引用某商业广告或麦当娜的热门歌曲的歌词更好。\n于是我也写个评语，叫活在当下。\n例三：\n关于跨文化交际。\n我想为什么欧美日韩的流行歌曲近年在中国这么流行。而中国的歌曲很少走出国门。邓丽君的歌在日本风靡，在西方国家还能成功吗？\n外院迎新晚会上的Love the way you lie 很震撼。关于爱情和家庭暴力的话题则是跨越文化的。\n……\n就是这样。", "filename": "2015-01-11-learing-is-a-process-of-creating.md"}, {"id": 38, "text": "\ndate: 2015-01-31 15:45:50+00:00\nlayout: post\ntitle: 明天回家了\ncategories: 随笔\ntags: 感想\n\n四个星期的短学期终于结束了。从来没有这么晚放寒假，还要在春节前上下一学期的课。\n明天就要回家放假了，倒也没有那么激动。上课上久了也有点麻木，虽然每天都已无心好好学习。\n于是短学期每天花很多时间在论坛、微博、微信和QQ上。深感SNS太过占用时间。以后应该规定一个时间看一下，而不是无时无刻不检查下有什么新信息。当然在学习和社团方面也还是做了很多事的。另外，没有这个短学期，我也遇不到在无锡的第一场雪。\n本来今天就可以走的，虽然上午还有二专的课。我想准备充分再走。准备什么呢：\n1.搞好卫生，洗好衣服，等衣服干了收进来。趁晴天，晒晒被子。\n2.想想有什么作业，要带什么书回去。\n3.放空一下自己，做好寒假规划。\n4.外婆做的芝麻核桃还没吃掉。\n其实，用土话说，是我摸不出，动作慢啦。\n听说明天下雨，还好是下午2点后的事。\n这次在火车上能碰到什么人呢，还真没有大一时的好奇的感觉了。", "filename": "2015-01-31-will-go-back-home-tomorrow.md"}, {"id": 39, "text": "\ndate: 2015-02-03 19:31:50+00:00\nlayout: post\ntitle: 免开发者帐号使用b4i开发iOS应用\ncategories: 技术随笔\ntags: hack\n\n一直用b4a进行Android的开发，语言与界面简洁，开发高效。现在出了b4i，支持开发iOS的应用。\n可惜没有试用版。支持下Erel，买了b4i正式版。但苹果99美元/年的开发者帐号实在不想购买，毕竟没有上架app store的需求。但b4i偏偏要求开发者帐号。\n用b4i直接编译调试程序，需要按照苹果最新的要求，提供从官网处理下载得到的证书(.cer)和mobileprovision文件。这两个文件没有idp，我没有办法提供。也不懂仿冒的技术。于是只好曲线救国，换个方式使用b4i了。Attention! It is illegal!!\n其实很简单，在b4i里点运行，尽管不能通过编译服务器，但会生成xcode的project。用Xcode打开生成的project，按照Xcode 6.1 / iOS 8.1 使用越狱设备免开发者ID调试进行处理后就可以在实机运行调试了。\n需要注意的是，\n1、需要提供假冒的证书和mobileprovision文件，不然不能生成project。这里提供仿冒文件下载\n2、需要把macserver里的libs文件夹放到project文件夹里，里面有需要的库和运行文件。\n3、因为相关运行文件是arm架构的，不能用ios simulator来调试。simulator用的都是原生的x86的文件，不是模拟运行。只能实机运行。\n4、b4i-bridge不能用，但可用xcode调试。", "filename": "2015-02-03-use-b4i-without-idp.md"}, {"id": 40, "text": "\ndate: 2015-02-03 11:31:50+00:00\nlayout: post\ntitle: '[转载]Xcode6 iOS8越狱设备免IDP调试'\ncategories: 技术随笔\ntags: hack\n\n以前的方法不适用了，找到一个最新的可用的方案，感谢作者：\nXcode 6.1 / iOS 8.1 使用越狱设备免开发者ID调试", "filename": "2015-02-03-xcode6-jb-ios8-debug.md"}, {"id": 41, "text": "\ndate: 2015-02-11 15:11:50+00:00\nlayout: post\ntitle: 在Windows用录音机内录实现mid转wav\ncategories: 技术随笔\ntags: windows mid2wav\n\nb4i的mediaplayer似乎不支持mid文件。便想转换mid为wav或mp3。\n找了半天mid转mp3或wav工具都不好使。\n想想用录音机把合成的音乐录下来不就行了嘛！以下在XP下操作成功。\n1.双击右下的小喇叭\n2.菜单-选项-属性\n3.混音器里选择有input或输入的那一项，进入录音控制\n4.选中在立体声混音一栏下的勾，就把录音源切换到内部了。", "filename": "2015-02-11-mid-to-wav-using-recorder-in-windows.md"}, {"id": 42, "text": "\ndate: 2015-02-16 11:26:50+00:00\nlayout: post\ntitle: '[Linux记]Python安装PIL库处理图片'\ncategories: 技术随笔\ntags: linux python\n\n做了听雨的图片中转站。其实很简单的东西，把图片下下来后用PIL把分辨率改小下提供下载。\n中转站用的一个免费vps，还要自己配置环境。。\n安装Python，再pip install PIL结果报错。\n主要是一些头文件和库没有安装到位。\n参考以下网站解决：\nInstalling PIL with pip\n解决使用PIL “decoder jpeg not available”错误", "filename": "2015-02-16-debian-pil.md"}, {"id": 43, "text": "\ndate: 2015-03-01 11:45:50+00:00\nlayout: post\ntitle: 可访问的外国网站收藏\ncategories: 收集\ntags: 学习\n\n虽然有外国网站导航网站，但自己整理些常用的更适合。尽管是自己整理，还是显得有点多。平时好好浏览一两个就不易了。\n门户&新闻\nMSN\nYahoo!\nAOL\nBBC\nCNN\n读卖新闻\n社交\nreddit\npinterest\ntumblr\nquora\nlinkedin\n辞典\nwikipedia\n剑桥辞典\n下载\npiratebay\nkickass\n视频\nvimeo\nnetflix\nTED\n音乐\nSpotify\nlast.fm\n漫画与搞笑\n9gag\nxkcd\n搜索引擎\nbing\nyahoo search\n科技资讯\nCNET\ninfoworld\nmac rumors\nengadget\ngizmodo\n科技指导&问答\nmakeuseof\nstackoverflow\n科技博客\nmashable\nreadwrite\n科技播客\ntwit\n科技公司\nApple\nMicrosoft\nRedHat", "filename": "2015-03-01-collection-of-foreign-websites.md"}, {"id": 44, "text": "\ndate: 2015-03-07 15:55:50+00:00\nlayout: post\ntitle: 江南听雨BBS的iOS客户端已上架\ncategories: 技术随笔\ntags: 江南大学 江南听雨\n\n三月三日v1.0.1版上架，算是功能比较完全的版本。\n在论坛发了说明听雨iOS客户端v1.0.1正式上架发布\n下面来说说软件的构架\n使用Basic4ios开发，内嵌了一些objective-c的代码以弥补刚开发的b4i的功能上的不足，用到了AFnetworking。\n使用CustomListView来加载版块列表和帖子列表等，还没有使用TabelCell。\n浏览帖子使用Webview，用overrideURL来进行控制。因为后端传来的数据就是html。我对Web前端的东西不了解。\n上传和压缩图片都是用obj-c代码来实现的。摸黑使用obj-c真的挺痛苦。\n发帖界面很简单。我行我素，表情用picker来显示和插入，懒得做一个面板显示表情以供选择了。\n设置界面的选项也都是DIY的，都没用tabelcell。呵呵。彩蛋很简单，以后考虑增加几款游戏。\n后端方面，\nkbs不归我管，从没向站长要服务器登录帐号，也不会改c代码。我只管用json api。\n于是我都是用openshift来增加供移动设备使用的功能的。\n目前主要也就是图片中转站，之前的博文提到过，还是挺简单的。\n明天开学了，我还有心情写这个......", "filename": "2015-03-07-jnrainbbs-ios.md"}, {"id": 45, "text": "\ndate: 2015-06-01 22:44:50+00:00\nlayout: post\ntitle: 好久不写博了\ncategories: 随笔\ntags: 感想\n\n上次写博客还是大二下开学前一天呢。不知不觉，大二已经接近尾声，即将成为大三狗了。\n这期间我不写博客，而我微博的更新却很频繁，每天都有好几条。我这个人就是喜欢感慨。\n今天是六一儿童节，农历四月十五，月亮，圆圆亮亮的，挂在天上，是个好日子，就是天气有点热，听说明天要下暴雨，应该会凉快点。\n到6月9号考试结束之前，我应该还要学霸一段时间，身体和心理都受到考验。这期间没有课，要自己好好安排。同样要规律生活。一日一便是当然不变的。笑。\n即将到来的是期待中的暑假。希望能好好安排，过得充实一点。\n只是随性而写，这三个月发生了挺多事，萌生出很多想法，也不多讲了。", "filename": "2015-06-01-new-post.md"}, {"id": 46, "text": "\ndate: 2015-06-13 14:48:50+00:00\nlayout: post\ntitle: 用龙芯本当路由器之挂代理上网\ncategories: 技术随笔\ntags: linux loongson 龙芯\n\n我们江南大学提供校园网Drcom认证计流量的上网方式和运营商合作提供的拨号上网方式。\n平时我用校园网+搜狗代理，基本可以访问所需的网站，速度还可以，而且因为都在教育网，不走流量。我是文科生，没有实验室这种东西，没地方架搜狗代理，都是寝室电脑直接运行代理的。\n龙芯本开启热点之后，在运行代理即可使用。代理用的小虾的python脚本。其它goagent什么的代理都可以，我用搜狗代理就是省流量加教育网加速。\n为了自动化操作，我用curl实现了drcom的认证。修改/etc/rc.local，在开机时就设置好静态ip，开启热点，Drcom认证然后运行代理。\n以下是通过Drcom网页进行认证的代码，貌似各大高校都是通用的：\n登录：curl -d \"DDDDD=username&upass=password&0MKKey=%B5%C7%C2%BC+Login\" 接入网站IP\n注销：curl \"http://接入网站IP/F.htm\"", "filename": "2015-06-13-loongson-notebook-wifiap-proxy.md"}, {"id": 47, "text": "\ndate: 2015-06-13 15:06:50+00:00\nlayout: post\ntitle: 用龙芯本当路由器之远程查看摄像头\ncategories: 技术随笔\ntags: linux loongson 龙芯\n\n逸珑8089D自带摄像头。既然带了，就要充分利用。想想现在智能摄像头很流行，不如也让龙芯本提供远程查看摄像头的功能。\n搜索下有没有现成的项目，发现了mjpg-streamer。sourceforge上的项目已经比较老了，我在github上找到fork的版本，见此链接。\n有的内核可能不支持摄像头，需要自己编译内核。测试用debian的3.2的内核可以使用摄像头。就是需要Fn+ESC快捷键手动开启。如果摄像头启动了，会存在/dev/video0这个文件。\n编译完mjpg-streamer之后，在所在目录运行以下命令就可以开启服务：mjpg_streamer -input \"input_uvc.so -device /dev/video0 -fps 10 -resolution 320x240\" -output \"output_http.so -p 8080 -w www\"\n如果编译失败，把相关的dev包装好。\n运行时遇到Init v4L2 failed错误，参见这篇文章mjpg-streamer：Init v4L2 failed", "filename": "2015-06-13-loongson-notebook-wifiap-webcam.md"}, {"id": 48, "text": "\ndate: 2015-06-13 14:40:50+00:00\nlayout: post\ntitle: 用龙芯本当路由器之开启无线热点\ncategories: 技术随笔\ntags: linux loongson 龙芯\n\n买来龙芯本后一直想用它来做无线热点，可惜手头的tplink 725n（rtl8188eu芯片）一直不能用hostap开热点，提示segment fault。而逸珑8089D自带的rtl8187无线网卡不支持AP模式。\n于是想买过个网卡，网上搜索了一圈，感觉无线网卡性价比都不高，而且芯片还说不准是那块芯片。搜到这篇文章小米随身WiFi，Linux下AP热点驱动（开源） ,感到360wifi二代非常适合，不用hostap就可以直接开启热点。\n终于实现由我的龙芯本做热点了。我的笔记本可以专心做别的事了。\n具体的操作就见原文吧。", "filename": "2015-06-13-loongson-notebook-wifiap.md"}, {"id": 49, "text": "\ndate: 2015-06-20 14:24:50+00:00\nlayout: post\ntitle: 爬取江大正方教务系统的成绩信息\ncategories: 网络\ntags: 爬虫 \n\n最近看到学促推出了新的叫“江南学子”的微信公众号，支持查课表和成绩。以前就想爬取成绩，但一直没有动手。既然有人做出来了，我也想自己试一试。\n首先得把含有成绩的网页下下来吧。用火狐的插件httpfox抓包，分析网络请求。我一开始用的wireshark，但感觉没有httpfox好用，界面不够清楚。\n登录\n我们学校默认的登录地址是http://jwxt.jiangnan.edu.cn/jndx/default2.aspx，相比其它学校，少了中间会动态变化的一串字符，显得容易一点。但默认地址要求输入验证码，还要搞一个验证码识别的话就加大了难度。还好，我找到了另外两个地址，不需要输验证码：http://jwxt.jiangnan.edu.cn/jndx/default6.aspx,http://jwxt.jiangnan.edu.cn/jndx/default_ysdx.aspx。\n\n得知要POST的内容，用python测试。\n{% highlight python linenos %}\ndef login():\n    cookie = cookielib.CookieJar()\n    opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cookie))\n    opener.addheaders = [('User-agent','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)')]\n    urllib2.install_opener(opener)\n    req = urllib2.Request(\"http://jwxt.jiangnan.edu.cn/jndx/default_ysdx.aspx\")\n    req.add_header(\"Referer\",\"http://jwxt.jiangnan.edu.cn/jndx/default_ysdx.aspx\")\n    resp = urllib2.urlopen(req)\n    vs=getVIEW(resp.read())\nreq = urllib2.Request(\"http://jwxt.jiangnan.edu.cn/jndx/default_ysdx.aspx\",urllib.urlencode({\"__VIEWSTATE\":vs,\n                                                                                             \"TextBox1\":userid,\n                                                                                             \"TextBox2\":passwd,\n                                                                                             \"RadioButtonList1\":\"学生\",\n                                                                                             \"Button1\":\"登录\"}))\nreq.add_header(\"Referer\",\"http://jwxt.jiangnan.edu.cn/jndx/default_ysdx.aspx\")\nresp = urllib2.urlopen(req)\n\n{% endhighlight %}\n需要提交的有叫做__VIEWSTATE的数据，它会变化，所以我先获得了登录页面的内容，把__VIEWSTATE提取出来。返回的内容还是登录界面的内容，但登录成功的信息已经保存到cookie里了。\n获得成绩\n在成绩查询页面下点击历年成绩，可以得到所有成绩信息。\n\n可以看到，需要post的参数很多，即使参数是空白的，也都需要发送。head照搬了httpfox下抓到的head。\n{% highlight python linenos %}\ndef login():\n    ......\n    Cookie=\"\"\n    for i in cookie:\n        Cookie = i.name+\"=\"+i.value\nhead = {\n'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',\n'Accept-Encoding':'gzip, deflate',\n'Accept-Language':'zh-CN,zh;q=0.8',\n'Cache-Control':'no-cache',\n'Connection':'keep-alive',\n'Content-Type':'application/x-www-form-urlencoded',\n'Host':'jwxt.jiangnan.edu.cn',\n'Cookie':Cookie,\n'Origin':'http://202.195.144.163',\n'Pragma':'no-cache',\n'Referer':'http://jwxt.jiangnan.edu.cn/jndx/default6.aspx',\n'User-Agent':'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.76 Safari/537.36'\n}\ngetdata = urllib.urlencode({'xh':userid,'xm':realname,'gnmkdm': 'N121605'})\nreq = urllib2.Request(\"http://jwxt.jiangnan.edu.cn/jndx/xscjcx.aspx?xh=\"+userid+\"&xm=\"+realname+\"&gnmkdm=N121605\",getdata,head)\nreq.add_header(\"Referer\",\"http://jwxt.jiangnan.edu.cn/jndx/default_ysdx.aspx\")\nresp = urllib2.urlopen(req)\npage=resp.read()\nvs=getVIEW(page)\n\nhead = {\n'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n'Accept-Encoding':'gzip, deflate',\n'Accept-Language':'zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3',\n'Cache-Control':'no-cache',\n'Connection':'keep-alive',\n'Content-Type':'application/x-www-form-urlencoded',\n'Host':'jwxt.jiangnan.edu.cn',\n'Cookie':Cookie,\n'Origin':'http://jwxt.jiangnan.edu.cn',\n'Pragma':'no-cache',\n'Referer':'http://jwxt.jiangnan.edu.cn/jndx/xscjcx.aspx?xh='+userid+'&xm='+realname+'&gnmkdm=N121605',\n'User-Agent':'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.76 Safari/537.36'\n}\n\n\nreq = urllib2.Request(\"http://jwxt.jiangnan.edu.cn/jndx/xscjcx.aspx?xh=\"+userid+\"&xm=\"+realname+\"&gnmkdm=N121605\",urllib.urlencode({\"__VIEWSTATE\":vs,'btn_zcj':'历年成绩',\"__EVENTTARGET\":\"\",\"__EVENTARGUMENT\":\"\",\"hidLanguage\":\"\",\"ddlXN\":\"\",\"ddlXQ\":\"\",\"ddl_kcxz\":\"\"}),head) \nresp = urllib2.urlopen(req)\n\n{% endhighlight %}\n这样就把包含成绩的html抓下来了，接下来就要进行解析了。\n处理成绩\n我不会正则，也不会其它的第三方解析软件，于是参看了github上的一些例子。但测试下来成绩不全。而且数据经过正则之后顺序乱了，虽然可以再排过，但也嫌麻烦。\n我发现成绩的每行表格正好占了一行内容。只要读取每行的内容，在读的时候把里的东西抠出来，就可以得到按学期排序的成绩了。最终我想得到一个字典，以第几学期为key，里面是一个列表，列表里面又包含了每门课成绩的列表。具体代码如下，我只用了<td>(.+?)</td>这个正则表达式。\n{% highlight python linenos %}\ndef gen():\n    f=open('out')\n    count=len(f.readlines())\n    f=open('out')\n    result={}\n    singleterm=[]\n    termnum=1\n    term=\"0\"\n    termname=\"\"\n    havingreadlines=0\n    for line in f.readlines():\n        str2 = r\"(.+?)\"\n        str2 = re.compile(str2)\n        a = str2.findall(line)\n        havingreadlines=havingreadlines+1\n        if a!=[]:\n            if a[0].find(\"java\")==-1 and a[0].find(\"span\")==-1:\n                a.pop()                         #删除最后一项无用数据\n            if a[1]!=term:                           #若某学年学期(1 or 2)改变，记录一学期成绩到字典\n                if term==\"0\":                        #第一学期需要初始一下\n                    term=a[1]\n                    singleterm.append(a)\n                else:\n                    termname=\"TERM\"+str(termnum)     #得到学期名\n                    result[termname]=singleterm      #记录一学期的成绩\n                    termnum=termnum+1                #学期序数加一\n                    term=a[1]                        #某学年学期改成新的\n                    singleterm=[]                    #清空一学期的成绩记录\n            else:                           \n                singleterm.append(a)\n    if count==havingreadlines:                     #内容读到底了再记录一下\n        termname=\"TERM\"+str(termnum)         \n        result[termname]=singleterm\n\nresult=json.dumps(result, ensure_ascii=False)\nreturn str(result)\n\n{% endhighlight %}\n最终的结果输出为json，方便客户端调用。\n不要笑我代码写得丑，水平如此，能够达到目的，对我来说就不容易了。\n最后布置到openshift上，再写个安卓客户端就显得比较实用了。我还加上了算绩点的功能。\n", "filename": "2015-06-20-jnu-score-spider.md"}, {"id": 50, "text": "\ndate: 2015-06-27 20:56:50+00:00\nlayout: post\ntitle: 写给20岁的自己\ncategories: 随笔\ntags: 人生 \n\n昨天是国际禁毒日、中国医师节、外院2011级毕业生晚会，也是我的生日。\n在微信微博和QQ上发了这一消息，收到了很多朋友的祝福，挺高兴。20岁生日我也没做什么有意义的事，晚上就是去看了晚会，回来和室友一起庆祝生日，合影纪念。个人的意愿和习惯其实可以有很大的作用，不要怕这个作用麻烦别人，其实别人反而会欣赏你的个性。学期中学院组织献血，我不敢去，觉得太瘦了，100斤将将到，不适合献，等以后强壮了再去。结果到夏天，体重反而下降了。我一直有坚持晚上20分钟散步，10个引体向上和睡前的蹬自行车。最近又学到平板支撑，练习后在做引体向上是能感到腹肌有力了。我也是希望自己更加强壮一点。\n这个学期的成绩稍微差了一点，虽然觉得有点不甘，觉得考试不能衡量学习情况。但大体上，这样的分数还是合我的努力情况的。平时我也不想表现得很要强，和老师同学沟通也不多，课外书看得也少。大部分时间花在网上，接受一些零碎的信息。\n2010年，看到晓锋的祝自己二十快乐的博文，当时觉得二十岁好远。不知不觉，五年过去，我也二十了。12岁的时候折腾ppc，会装系统，会用autoit写程序，可以说自己很牛。而到了现在，我也没有什么好吹耀的。而且我深知，懂得越多，越会觉得知道得越少。一方面是知识的宽度不够，另一方面是知识的深度不够。我到现在也没有明确将来的发展方向，也就没有了努力的方向。我现在只知道，我应该好好学英语。学习语言的确是辛苦的事。我用drops学法语也只是图个新鲜，想对法语有所涉猎。而日语我是想真的学好。长期观看动漫其实已经有了大量的输入，我觉得我学日语会比较轻松。但我还需要一些理论方法和毅力的支持。\n我做梦开发出一款App，卖应用和广告就能赚钱。然后有一份安稳的朝九晚五的工作，可以让我规律地生活，同时有时间做自己喜欢做的事。的确，写应用能高度整合我的编码能力、思维能力、设计能力和学术研究能力。我想将语言研究学习和计算机相结合。\n我曾想当科技记者，但我喜欢看科技新闻，不一定就会喜欢写科技新闻。我更喜欢分享技术，实践技术。当然，我也挺喜欢发表评论的。\n我曾想当苹果直营店的推销员，分享我对苹果产品的理解和知识，让更多用户享受苹果的优质产品。但是，我更喜欢越狱折腾，买便宜的有锁机。苹果产品的价格毕竟太贵，预感我会接触到的人，我又不怎么有动力了。\n最近看到新闻，说富士康减产，员工不用加班，薪水变少了。那些员工也大多二十出头。我在高校，他们已经在企业工作了。我与他们有什么不同呢？我现在想来，当前我做别的事的机会成本都比好好学习大。学好了，将来出去磨砺也能更加顺利，前途也会更加平坦吧。\n将来要努力的事会在下一篇博文讲。\n二十岁快乐！用yonsm以前博客上的话讲：年轻不再，杰出依旧", "filename": "2015-06-27-to-myself-being-twenty.md"}, {"id": 51, "text": "\ndate: 2015-06-28 11:56:50+00:00\nlayout: post\ntitle: 给nook2修改按键映射\ncategories: 电子数码\ntags: nook 电子书 Android\n\n当初nook2买来就是图的是安卓系统，功能多，折腾性强。而买回来后我是抱着不折腾的态度，刷了行云版rom之后就安心用它来看书了。\n可最近中间的n键不灵光了，我也懒得拆机修理（不会也不太敢）。有时按上去没反应，有是会导致自动锁屏。心想把n键对应的功能改掉，用左边上一页的按钮做home键不就可以了！\n打开/system/usr/keylayout,看到4个文件，我也不知道改那个文件。于是上XDA看了一下。最终我是这样做的：\n1、打开gpio-keys.kl，修改HOME为MENU，这一步把n键的功能改为menu。其实因为这个按键不灵光了，可以不对应任何功能。\n2、打开TWL4030_Keypad.kl，找到以下内容：\nkey 407   RIGHT_NEXTPAGE\n\nkey 412 BACK WAKE_DROPPED\n\nkey 139 MENU WAKE_DROPPED\n\nkey 158   RIGHT_PREVPAGE\n\n行云版rom已经把左边的上一页按键定义为返回键，下一页按键定义为菜单键。因为n键home键的功能改掉了，用上一页按键代替。把BACK改成HOME。\n最后用修改好的两个文件替换掉原来的文件。\n需要重新挂载system分区，如果用root explorer也可以。在电脑上用adb的话输以下命令：\n# mount -o remount /dev/block/mmcblk0p5 /system\n最后上几张图：\n\n\n参考链接：\nRemap 'n' button in sleep mode\nNook Simple Touch Remap Hardware Keys\nNook 2nd Edition Touch - Development\nAndroid修改system只读权限：remount", "filename": "2015-06-28-nook-touch-seconed-edition-remap-keys.md"}, {"id": 52, "text": "\ndate: 2015-07-15 9:33:50+00:00\nlayout: post\ntitle: 北京七日游\ncategories: 随笔\ntags: 旅游\n\n短学期时听爸爸说要去北京旅行。爸妈和我都没去过帝都，想想应该去看看。网上买了高铁票，然后我就等着出发了。昨天刚回来，趁着记忆尚深，我把行程写一下吧。7月8号到7月14号\n第一天\n第一天上午主要在列车上度过。先乘40分钟空调快速到杭州东，再经5个多小时到北京南。然后径直往北京国际饭店安顿。\n之后我们前往天安门广场。经过“重重”安检来到广场，看到长安街对面的天安门，广场内的五星红旗，人民英雄纪念碑和毛主席纪念堂。当时人倒不是很多。往南至前门，然后返回至长安街前往王府井。\n第二天\n第二天上午去的故宫。我们登上了天安门城楼。登个楼还要把包裹寄放。然后我还把我的学生证弄丢了。找了半天也没找着。还好爸爸有经验，给工作人员留了联系电话。最终失而复得！我们便可安心游故宫了。沿着中轴线走到后宫门外，就往东去了珍宝馆，看里面的九龙壁。一直行到神武门，再往南兜回来。故宫很大，内容很多，要想细看，一上午是看不光的。我把三大殿拍了下来，主要是以前在教科书上看到过类似的图片。现在见到真的了，可内心却没有那么激动。吃过午饭（炸酱面，还行吧）后，我们前往恭王府。没有导游，三个人瞎逛的确都不得府内设计之精妙。也深感我对古代礼制、思想的不了解。都说“一座恭王府，半部清朝史”，对于普通人来说，这部史书真心不易读。出了恭王府，我们乘坐小的旅游观光车穿过什刹海到了九门小吃，走到积水潭乘地铁2号线回酒店。开车的小哥还提供讲解，解释了门楣，哪些名人在哪里住过或学习过等等，呵呵。\n第三天\n都说不到长城非好汉，我们都盼望着去爬长城。结果我看的公交线路877路要排长队，打的来回要500，我瞬间没了兴致。想去北京北站看看有没有去八达岭的列车。结果刚出去不久，爸爸就看到一个叫北京旅游集散中心的地方，30元玩长城和十三陵，门票另算，就上了。于是，有意思的一天开始了。同车的有20几个人，我们这些散客临时组成了一个旅游团，在导游的带领下去了明故宫、长城和十三陵的定陵。明故宫是个蜡像馆，为我们讲解明朝的历史。然后我们去了居庸关长城。居庸关长城的确险峻，我爬得快，结果第五个烽火台就觉得累了。周遍的寺庙，我没有去看。接着是去看万历皇帝的陵墓了。看了前后殿，两边的玄宫和中间的中殿。虽然基本只在墓室看到了宝座和棺材，摆放文物都被移到它处了。回去是顺便去了奥体中心，看到了鸟巢和水立方，但因为又累又饿，早早地回去了。\n第四天\n早上去了圆明园。园里的池塘种满了荷花。风景还是不错的。原来的样子基本都看不到了。去看了代表圆明园的西洋楼遗址。感叹那段屈辱的历史。然后我们前往清华北大。不巧的是，清华在11、12号不开放。在清华南门外吃了KFC。之后去北大，而在北大唯一开放的东门，排起了长队。我们便去了颐和园。从北宫门进，一眼就看到了万寿山和四大部洲。对山下的苏州街不感兴趣，没有去。上到顶上，我看到了智慧海和里面的无梁殿。这部分我在高中历史书上学过，因此也多留意几分。然后下山，乘游船游昆明湖，120元每小时的电动游船，自己开船。感觉还是很惬意的。晚上吃饭，仍去的蜀香园。吃好后去楼上的永辉超市买了些饮料。\n第五天\n先去天坛然后逛了前门大街。去了天坛，祭天的地方，各种东西的数量都是九。回音壁也没试成功。上了祈年殿后就下来了。皇天上帝比皇帝老儿大呢，哈哈。偶尔注意到个细节，祈年殿边上有扇角门，叫古稀门。原是乾隆皇帝过了古稀之年，行动不便而设的小门。只准古稀老人使用。天坛公园里满是踢毽子的人，这运动在京城里还挺流行。然后去前门大街。大街是比较现代的一条街，两边是各种老字号，也有很多现代的品牌。还是非常热闹的。去吃了全聚德，300多元，并不好吃。下午休息。晚上去朝阳区的三里屯和工人体育场。爸爸去看了绿城和国安的比赛。\n第六天\n主要去了南锣鼓巷、北海公园。南锣鼓巷是条古色古香的商业街，在树荫下漫步逛店还是很有韵味的。边上岔出很多胡同，中央戏剧学院也在此处。然后经鼓楼-景山到北海公园。爬上白塔，绕湖心岛一圈然后到中南海的南门————新华门。北海公园里都是各种佛堂啊。在园内的护国寺小吃吃了点就回去休息了。晚上去国贸兜了一圈，都是外国品牌的商店，不懂，没啥意思。急着吃饭，就回家了。\n第七天\n早上先出去吃了早饭，油饼和紫米粥。然后去西单买了些北京特产。之后办理完一卡通的退卡就乘4号线到北京南回家了。七天的北京行划上了句号。", "filename": "2015-07-15-7-days-in-Beijing.md"}, {"id": 53, "text": "\ndate: 2015-07-26 16:51:50+00:00\nlayout: post\ntitle: 十天，从WP小白到上架第一个应用\ncategories: 技术随笔\ntags: Windows \n\n\n成为WP用户\n暑假总归要找点事情做。买点新东西可以得到新鲜感和新的学习方向。\n从前是Windows Mobile的用户，后来WM被抛弃了，我用了Android，去年又开始使用iOS系统。现在Windows 10要出来了，想想作为智能手机爱好者，总应该用一下第三大移动平台。看下12年的旗舰，Htc 8X的v版只要300多，而且还支持升级Windows 10，就入手了。\n学习WP开发\nWP系统很简洁，甚至给我一种原始的感觉。但我个人很喜欢这种风格。发现不能刷机，也不能越狱，就只能老老实实、舒舒服服地用手机。既然我用了Windows Phone，总想给这个平台开发点软件，如我之前用b4x开发PPC、安卓和iOS的软件一样。但对于Windows开发我一点基础都没有，也从没学过C#，该怎么学习呢？\n我网上搜索相关教程，搜到了channel9上的Windows Phone 8.1 development for absolute beginners。我先下了PDF的教程看，发现它说应该先学C# Fundamentals: Development for Absolute Beginners。于是我准备先学c#。\n搭建开发环境就费了挺久，Windows Phone 8.0和8.1的开发还不一样。8.1的开发用到和Windows 8.1上metro应用一样的API，这样还可以给上亿的Windows8用户写应用，果断直接学8.1的开发。将来Windows10的开发的通用性就更好了。\n每天看十段视频并时间，两三天时间感觉c#的基础差不多就可以掌握了。然后我开始试着开发WP的应用了！继续看Bob Tabor的初学者视频，这样上手可以比较快。了解了基本的控件，界面设计，事件驱动的编程，基本的模板。3天左右，视频看得差不多了。之后的学习感觉就要靠自己了。\n边做边学吧，开发应用会比较有成就感。\n我打算做我们学校江南听雨论坛的手机客户端，南京大学小百合和北邮人论坛的WP客户端珠玉在前，给我的设计提供了借鉴。\n应用的功能很简单，获取版块列表、帖子列表、浏览帖子、发帖回帖，登录注销。主要用到httpclient进行网络请求和listview进行布局。\n想想我的应用还需要广告推广，于是加入了aDduplex。它免费提供应用相互推荐的广告，当然我也不能赚钱。\n讲讲容易，实际上写出代码不容易。我在我的学习笔记里就讲了使用httpclient遇到的问题。不过在4天内，我还是把它写了出来并完成了上架。WP的应用审核很快，只用一个小时不到的时间，我的应用就上架了。相比苹果至少7天的审核时间，简直是光速。\n都说WP是开发者的蓝海，仁者见仁，智者见智吧。若是有创意的面向新兴市场的新应用，肯定要选择用户数量多的Android和iOS平台啊。我喜欢WP这个平台，或许也正因它是个小众的平台吧。\n相关学习资源\n微软虚拟学院和channel9：上面有很多教学视频，值得好好挖掘和学习。比如我看得C#和WP8.1基础的视频就是这上面的，虽然都是英语没有字幕，但如果熟悉计算机术语还是很容易听懂的，而且讲解的老外发音也很清楚。\n其它的书本、网站、视频我没学过，就不推荐了。\n最后，学习建议\n我遇到问题都是直接搜索，发现这样的效率不高。WP的技术更新快，还容易找到过时的内容。应该多逛逛相关的网站、论坛。我最总搜到的很多正解都是有人在网上问了问题，高手回答了的。如果没有类似的问题该怎么办呢？我们可以自己问啊。问之前还可以多看看微软MSDN上的文档，虽然我至今不太会用，感觉文档内容好多，哪些是适合WP开发的不清楚，例子给的也不多。github之类平台上的开源项目也懒得看。\n个人觉得还是论坛这样的形式适合讨论，PPC时代的论坛气氛很好。Android和iOS来了后，虽然很火，但没有以前的感觉了，用户数多也是一个原因吧，论坛都变成资源下载站了。而且现在微博微信崛起，论坛已经落寞了。\n所以，最后我想问个问题，各位大侠们。有什么好的WP论坛推荐呢？", "filename": "2015-07-26-becoming-a-wper.md"}, {"id": 54, "text": "\ndate: 2015-07-26 10:14:50+00:00\nlayout: post\ntitle: Windows Phone 8.1 开发学习笔记（一）使用Httpclient\ncategories: 技术随笔\ntags: Windows \n\n要开发听雨的客户端，关键的无非是网络数据的获取、解析与发送。要用到Http的Get和Post方法。\nWindows Phone 8.1已经提供了很好的网络库：Windows.Web.Http，语法简单，不用管header，自动管理cookie和cache。这些优点也是我在开发中才知道的。详细的介绍见channel9上的视频： Five Great Reasons to Use the New HttpClient API to Connect to Web Services\n另外还有很多网络库，其中System.Net.Http是.Net提供的，类的命名上会与Windows.Web.Http有重叠。我选择使用后者。\n怎么用可参照林政老师的博文：[深入浅出WP8.1(Runtime)]网络编程之HttpClient类 \n。我一开始照搬林政老师的代码，并对把它封装到我称作Httputils的类里。以后使用只要实例化后加一行代码就可以完成操作了。但使用中遇到以下几个问题。\n1、发送字符失败。\n照林老师的代码，在发送用户名和密码来实现登录听雨论坛时，总提示用户名不存在。我一开始以为是论坛的问题，但测试其它的登录方式正常。于是开始找别的实现http post的代码。\n测试使用网上的用System.Net.Http的代码登录成功了，它的字符串用System.Net.Http.FormUrlEncodedContent进行了处理。\n于是我把修改了林老师代码里的httpStringContent:\nHttpStringContent httpStringContent = new HttpStringContent(content, Windows.Storage.Streams.UnicodeEncoding.Utf8,\"application/x-www-form-urlencoded\");\n测试成功。\n2、cookie的问题\n登录以后，我应该能看到隐藏的版块，但实际测试却别有显示。我怀疑是wp的网络库不能自动管理cookie。于是我继续bing搜索。什么cookiecontainer、cookiemanager等等网上有关的代码我都下来试了。搞了几个小时，但仍然无效，放弃。躺沙发上玩手机。但还是不甘心，静下心来逛wp论坛。过程中看到了Five Great Reasons to Use the New HttpClient API to Connect to Web Services，等着第二天看。\n第二天醒来，看昨晚发现的视频。结果跟我说httpclient是自动管理cookie的，而且cookie在应用内都是共享的。看来不是cookie问题，我去。\n3、GET不更新的问题\n偶尔打开程序直接登录，然后再浏览版块列表可以看到隐藏版块。另外回帖或帖子的顺序没有变。这让我发下了这第三个问题，它居然缓存了相同链接的内容！\n在stackoverflow里找到相关代码，我把它改为使用Windows.Web.Http的：\n//防止相同链接不进行刷新\nhttpClient.DefaultRequestHeaders.IfModifiedSince = new DateTimeOffset(DateTime.Now);\n\n好了，以上就是我初学WP开发关于网络操作的心得。遇到很多挫折，也是我对网络编程和各种网络协议不熟悉，也不太会看微软的文档。", "filename": "2015-07-26-learn-wp-development-note-1.md"}, {"id": 55, "text": "\ndate: 2015-08-04 15:34:50+00:00\nlayout: post\ntitle: 开始分享好的应用\ncategories: 随笔\ntags: 我\n\n最近买了域名，在域名下有三大站点:我的中文博客，英文博客和一个分享好的应用的网站。\n在网站的关于页面我已经做了详细的介绍。我想相比于编程，发现并分享好的软件也是很有意义的一件事。像我这样上架了应用却没什么人用的人应该深有体会吧。", "filename": "2015-08-04-software-sharing.md"}, {"id": 56, "text": "\ndate: 2015-08-09 22:21:50+00:00\nlayout: post\ntitle: 十年后再看《风云》\ncategories: 随笔\ntags: 风云 电视剧\n\n\n最近发现新办的数字电视有点播功能，看到最新上线的列表里有《风云》。小时候看《风云》的影响很深，便点开看。结果那熟悉的画面、情节与人物让我不由决定重温下这部2002年的电视剧。\n兄弟情、武侠梦还有儿女情长，都让我受到感触。儿时看《风云》的感情也不自觉地涌出，特别是风云必胜里，聂风错把独孤梦当作梦，而冷落了第二梦的那段。最后两人相恋十分欣慰，但可惜跟着聂风的女人都福薄。这也正和主题曲《永远永远》相应，“别对我说永远永远，永远是太昂贵的誓言。我握不住，也看不见。。。你爱过我，就已足够。”\n此剧的特效在当时很震撼，当时也是花了很多钱在上面的，可以说不逊于当今的一些武侠剧的效果。剧情上，武侠剧一般都会凸显个人的力量，让人感到一些设定会比较奇怪，什么国家大事要有几个人承担，打斗也大多发生在主要角色之间。\n下面我想讲讲聂风与明月/梦和步惊云与楚楚：\n我更偏爱聂风和明月/梦。当年看《风云》时我应该就不太喜欢楚楚，非要痴心地跟着步惊云。但其实是我没有好好地正视他们的感情，同时我对陶虹不感冒。\n我非常喜欢蒋勤勤演的明月和梦。明月与梦都身怀武艺但又有着柔情，看到她们和聂风克服苦难相爱，我非常开心。但也很快会因他们在一起的短暂而遗憾。蒋勤勤更让人心有戚戚。\n楚楚是平凡的女子，而明月和梦是侠女。同时明月和聂风的爱又是冲破禁忌之爱，两人在剧中都红颜薄命。这或许是我偏爱明月与梦的原因。聂风和梦更般配。\n聂风温柔善良，甚至有点傻，我小时候一直以他为榜样，现在也觉得我我卓叔的聂风超帅。但回到现实生活中，我可能会更像步惊云。把心思埋在心中，一脸冰冷，但实则内心温暖。同时爱恨分明，敢做敢当。\n小时候看很多电视剧，心中也会有很多女神。蒋勤勤就是其中之一吧。但也是因为角色的关系，射雕中的穆念慈我当时就没什么好感。现在网络发达，明星都开了微博，我也要开始追星了，追四十岁的勤勤阿姨。还有卓叔也是。网上看了很多赵文卓和蒋勤勤的资料，娱乐圈里有黑暗也有光明。\n现在回首过去，2000年世纪之交的那段时候应该是我童年最美好的一段时光吧。感谢童年里有《风云》。", "filename": "2015-08-09-wind-and-cloud.md"}, {"id": 57, "text": "\ndate: 2015-08-15 20:05:50+00:00\nlayout: post\ntitle: 给惠普1000笔记本换装SSD\ncategories: 电子数码\ntags: DIY\n\n我的惠普1000-1306tx笔记本是上大学前的暑假买的，花了3000元钱，当时也不太懂电脑，想我不玩游戏，足够用了。\n实际使用后还是能感到性能不足带来的影响的，比如在osx下用final cut pro速度并不理想，开机速度也不快。每天差几分钟时间的卡顿，积累起来也是很多时间成本的。\n于是我先是给笔记本加装了4G内存，有原来的2G内存形成双通道的6G内存，运行黑苹果基本就流畅了。\n最近苹果搞教育商店优惠，买mac便宜300元还，还送beats solo 2耳机，一时也有点心动，但毕竟目前还没挣钱，不好意思花父母的钱买。心想还是坚持用原来的电脑吧。看MacBook普遍用上了ssd，我想我给我的笔记本装个SSD，也就不比mac差太多了。\n于是了解有关的SSD品牌。看了一下，影驰的战将240pro应该还可以，mlc，240GB不算小，450元也比较便宜。\n\n因为我还要用光驱，主板没有其它接口加装SSD，就把机械硬盘（日立，500GB，5400rpm，sata II）卸了下来，给它买个硬盘盒当移动硬盘。发现可以用接在USB口上的移动硬盘启动系统。\n具体的读写速度我没有测，换上后明显可以感到速度变快不少。\n", "filename": "2015-08-15-replace-hdd-with-ssd-on-my-laptop.md"}, {"id": 58, "text": "\ndate: 2015-09-03 20:16:50+00:00\nlayout: post\ntitle: 学吹蓝调口琴\ncategories: 音乐\ntags: 自学 口琴\n\n小学学过复音口琴，但小学时3、4年级吹得不好。在星海艺术学长笛后，音乐素养有了提高，口琴水平也有了一点提高，常见的歌曲都能吹。此后就搁置了。\n大概是在看到这篇文章聊聊十孔口琴的入门选择后，我了解到十孔口琴的存在。十孔口琴，顾名思义，只有十个孔的全音阶口琴，也叫布鲁斯口琴或蓝调口琴。我感觉这口琴能吹半音，又这么小巧，感觉很实用。正如一位口琴大师在介绍Hohner的Marine Band 1896时讲的，十孔口琴就是最早的iPod，把音乐放在了我们的口袋里(put music in your pocket)。\n暑假无事，就买来了Hohner Special 20吹。一开始口型不够小，单音吹出来都是杂音，怎么吹都吹不好。等我午睡过后再吹，居然吹清楚了！有时候学习就是这样，遇到困境时可以先放一下，说不定就豁然开朗了。\n跟着张晓松的蓝调口琴网里的教程自学到提高教程的内容。Hohner附带David Barret的教学网站的优惠码。虽然我是英专的，但毕竟涉及乐理知识，他讲的我听不太懂，汗。\n十孔口琴的技巧真的很多，但我还是习惯于把它当复音口琴吹，吹些流行歌曲什么的，又有什么不可以的。\n人家说不会压音就是不会十孔口琴，我是真不会。至今1个月了也没找到压音的感觉，我练习得也是比较少。口琴的技巧不都是人玩出来的吗，我想怎么玩就怎么玩，不会压音，照样能吹好十孔口琴。\n2019-03-25更新\n关于压音，我看到贴吧有人说可以用舌头抵住孔的下方，然后就可以吹出来了。用口琴调音器可以检测压的音对不对，一开始音色可能比较干瘪。这样多练几次，有了感觉后，就可以不用舌头也能压音了。一般压音的时候需要舌尖向下，口琴上翘一定的角度。", "filename": "2015-09-03-blues-harmonica.md"}, {"id": 59, "text": "\ndate: 2015-09-03 18:24:50+00:00\nlayout: post\ntitle: 入手佳能Pixma iP90 便携式打印机\ncategories: 电子数码\ntags: 打印机\n\n开学前突然想买台打印机在学校做打印生意。\n于是研究各种打印机，最后我发现靠打印机挣钱得不偿失，附加值小，成本高，还占用学习时间。但我研究了打印机后，自己十分想买一台。看了很多打印机后，我决定买台二手的Canon Pixma iP90。主要考虑是墨盒便宜，加墨方便，体积小，放在寝室不占地方。另外，因为它的便携性好，我考虑背着它到景区做摄像生意，支持红外和PictBridge，现场可以打印照片。\n各种规格参数我就不讲了，实际体验打印效果还是挺好的，毕竟我长大后第一次用打印机，纯属门外汉。就是不敢在送纸器里多放纸，卡过一回后，我一直怕卡纸。\n讲讲在各个系统的使用情况：\nWindows\nWindows对打印机的支持当然是最好的。连上打印机后，Windows10自动把驱动装好了。不过不是官方驱动，我下了官方的Vista的64位驱动使用，这样佳能的工具才能用。\nOS X\n官网有OS X的CUPS驱动，使用起来和Windows体验相近。\nLinux\n不多讲，支持得不好。官网有源码包，但里面有二进制的文件。结果我64位的debian不能用。后又装了cups＋gutenprint，明明显示支持ip90，但打印没有反应。编译了新的gutenprint驱动也没反应。\n我本来想用树莓派和龙芯本连打印机，支持无线打印的，现在基本放弃这个念头。不如买台windows平板，少折腾。\n有台打印机后的确方便了很多，想看什么可以打出来。买的喷墨打印机也支持彩喷，可以打印相片，彩绘本什么的，还是很实用的。\n\n\n\n", "filename": "2015-09-03-canon-ip90-printer.md"}, {"id": 60, "text": "\ndate: 2015-09-18 19:56:50+00:00\nlayout: post\ntitle: Pocket PC 红外连接便携式相印机进行打印\ncategories: 电子数码\ntags: 打印机 PPC\n\n*看到这篇文章的标题，你可能感觉穿越了。。没错，我要讲的是十年前的技术。。\n从我之前的博文：入手佳能Pixma iP90 便携式打印机里可以知道，我买了佳能的ip90便携式打印机。这款机子支持选配蓝牙模块进行无线打印。但因为蓝牙模块太贵了，我没有买。打印机支持pictbridge和红外，我身边没有数码相机测试pictbridge，想先试试红外功能。\n红外功能在2006年前基本上是智能手机、PDA和笔记本的标配。iP90上用了IRDA ver1.1，据称是有4Mbps的连接速度。我首先想到的带红外的移动设备就是PPC，多普达830是我接触的第一款智能手机。那个时代给了我很深的印象。然后其它各种Palm、塞班系统的机子也支持红外打印功能，但手上没设备，不能测试。我爸的830基本无法使用了，我后来低价买的HTC Diammond和多普达P860都没有红外功能。想想网上再买台老的PPC吧，结果淘宝上都快买不到PPC了。还好发现一家老牌多普达专卖店还在卖多普达D810，和830外观很像，但CPU不一样，带有GPS功能，买下吧。\nWindows Mobile本身不支持打印，需要第三方的应用来支持，比如PrintBoy, JETCET Print, Active Print，PrintPocketCE等等，其中几款现在都转做安卓和iOS的打印软件了。其中我使用感觉满意的是PrintPocketCE，这款软件据说是最好的PPC上的打印软件，最新版是2013年更新的，价格也不菲，卖$39.95，网上还找不到注册码。在WM5以上的系统里，该软件不支持打印pocket word的文件格式，打印出来会乱码，可以用softmaker office转换成rtf来打印。打印图片的版本叫PocketPixPrint ，打印网页的版本叫PIEprint。\n网上搜到一篇教程：详解多普达818通过红外线直接打印文件，里面的打印机是佳能i80，和ip90差不多。然后818，也是很经典的搭载PPC2003系统的机子。\n个人使用的感觉是，红外传输的速度很慢，打印机接受数据，打一点，等待接受数据，再打一点。红外的优势就是成本低和比较安全。目前的无线打印机，支持airprint什么的可以秒杀PPC红外连接ip90。\n上几张图吧：\n\n红外接口要对准：\n\n\n\n\n软件截图：\n\n没注册。。先试用下吧\n\n这里选打印机型号：\n\n\n\n\n\n", "filename": "2015-09-18-pocket-pc-print-using-irda.md"}, {"id": 61, "text": "\ndate: 2015-10-19 14:31:50+00:00\nlayout: post\ntitle: 最近热衷于参加各种讲座、活动\ncategories: 随笔\ntags: 大学\n\n\n每次有一些名人讲座，我基本都会去看。\n大三上以来，我就参加了很多。比如佛教志愿者培训、宝哥说、TEDxJN、周成刚的演讲等。\n不得不说，我通过参加这些活动，真的拓宽了眼界。\n除了自己学习之外，我还非常喜欢从他人身上学习自己学不到的东西。\n此次新东方的周成刚来无锡，来到新东方巡回公益演讲的江南大学站做演讲，俞敏洪没有来，主题是“相信未来”。周总主要是介绍了他自身的经历，告诉我们如何说好口语，中外文化差异。他是英语专业的毕业生，感觉他的英语水平还是相当高的。但他自己也要承认，英语是工具，用英语来做好事情才是关键。\n具体的演讲内容我不多讲了，我从他幽默的演讲中总结出几点：\n1、要做自己感兴趣的事。\n2、要努力。\n3、遇到不会的，可以采取曲线救国的方式。\n4、要把握机会。\n在看他的演讲前，我也看了一篇文章，说聪明的人掌握正确的方法，学习效率是别人的十倍。我想，学习除了努力，也需要方法。有时候每天按一个路子来不见得好，这个路子需要不断完善来适合自己，提高效率。但方法怎么弄出来，又需要摸索。所以，参加活动，有很多时候，我除了获取知识以外，还想了解别人是如何学习的，思想层面的东西。\n当然，除了知识以外，提高人际交往能力也很重要。最近一个月，我作为副班主任和班长，也的确做了很多事，与很多人打了交道。交际能力是有提高，但学习不学好，没有核心竞争力，终究比不过别人，也吸引不了别人。所以，好好学习吧。", "filename": "2015-10-19-taking-part-in-activities.md"}, {"id": 62, "text": "\ndate: 2015-10-24 18:22:50+00:00\nlayout: post\ntitle: 提取netflix上的字幕\ncategories: 技术随笔\ntags: \n\n\n我们的大创是对美剧版甄嬛传的英文字幕进行翻译相关的研究，由于研究需要，需要提取纯文本的字幕。我在网上搜遍了美剧甄嬛传的字幕也没有找到字幕文件下载，一度放弃。结果几个月后的今天，我想起netflix上可以打开关闭字幕，还可以选择英文和西班牙字幕，字幕应该不是融合在视频里的，于是重启开启了netflix会员，想把netflix上的字幕提取出来。\n\n我先是在网上用netflix字幕提取和extract subtitles netflix搜索，结果没有找到可行的办法。想想还是自己用浏览器的开发者工具找吧。\n试了之后发现很简单地就把字幕文件提取出来了。\n打开浏览器的开发者调试工具，我这里直接用win10上的edge自带的调试工具，点网络，查看捕捉到的请求。\n\n光看URL的确没有可读的英文告诉我哪个是字幕文件，但比较发现主要有一个URL，是以ip/range开头的，应该是视频的分段文件。然而有一个url同样以这个ip开头，却没有了range，下载这个文件，打开后发现是xml格式的字幕文件！\n\n这里在放上一段提取到的字幕文件的url：http://108.175.47.162/?o=AQG-6PAGiKFL6gvV3dwTkXP_OsXnubrxuN1-oL9TI5ll08LNQrZEnV9wYGOWRIuQ0WjArxXeuL2Qv-gcGNXaO1xuMbUS5bVOYjgNMhlP0OU0EVCpaMaKbC4Ij66xK4dgYg&v=3&e=1445706614&t=pihXKkZxMeRMabM-roZFmxK9mSg\n好了，因为是重启的会员，没有新会员一个月的免费优惠了，我还是好好看看netflix上的视频，让9.99美元的订阅费有点价值吧。。\n更新：\n把xml的字幕文件转为srt格式\n纯文本处理这样的一行内容：<p begin=\"1547600000t\" end=\"1567600000t\" region=\"bottomCenter\" style=\"s1\" xml:id=\"subtitle0\">In the year of 1722,</p>\n里面包含了开始时间，结束时间和字幕内容，其中的时间数据除以1+e10就是秒了。\n因为比较简单，我也不贴我丑陋的代码了。最后输出结果如下：\n```\n1\n00:02:34,000-->00:02:36,000\nIn the year of 1722,\n2\n00:02:36,000-->00:02:39,000\nthe Kangxi Emperor of the Qing Dynasty passed away.\n```\n2018/10/18更新：\n有朋友问我字幕获取的事，截至目前，上述的方法还是有效的。但是开浏览器调试工具可能比较难以找到地址，一般会获取大量以下这段地址的内容：\nhttps://ipv4-c001-pdx001-ix.1.oca.nflxvideo.net/range/412380277-413177770?o=AQHthFS3s9YFW93IkMVXxQVsZTdduAMLzLxISI28vT9LfI53tHBBEi9...\n然后字幕文件的地址是以下格式的：\nhttps://ipv4-c001-pdx001-ix.1.oca.nflxvideo.net/?o=AQG_NH7i3YyyPn7m4oCIvfJXeH9xkKcjLa3jhQeYzC1f0hopvWakPz_T7l6ZJ1xrq2wlqYNayqCeGDA9kt8qk8Eon0cBNfh52hXyTlVuFccavCEzWIx_1-W0y1ZGssr9...\n可以根据第一个地址找第二个地址的内容。\n测试中文字幕找不到第二个地址。有高手修改了netflix播放器的脚本，利用fiddler截取播放器脚本，替换为修改过的，然后播放视频时会自动跳转到字幕地址。中文字幕格式是WEBVTT而不是ttml。因为不让放，我这里也就不给出脚本了。", "filename": "2015-10-24-extract-subtitles-from-netflix.md"}, {"id": 63, "text": "\ndate: 2015-11-07 18:13:50+00:00\nlayout: post\ntitle: 初试可穿戴设备－埃微i5plus\ncategories: 电子数码\ntags: 可穿戴设备\n\n\n智能可穿戴设备近年来一直很流行。周边的人有很多在使用小米手环，我爸就每天带着它去锻炼，不达到目标就感觉不舒服。\n我一直觉得手环没多大用，跑步走路我用手机的gps记录下跑了多远就行了，也不用知道步数。而偶尔逛京东商城，发现有一些国产品牌的手环，价格挺低，功能比小米手环多。其中一款叫埃微i5plus的手环，双十一前搞活动，原来卖129，现在卖109。这款手环与小米手环一个很大的不同就是它有一个触摸显示屏，可以直接在手环上操作而不用掏出手机，十分方便。另外厂家还加入了遥控拍照、显示手机上的通知的功能，而显示屏上可以显示时间，可以当作电子手表使用。可以说，这款i5plus手环是介于手环和智能手表的存在。\n手环的使用当然还是要有智能手机上相关应用的配合。个人觉得埃微做得还是不错了，虽然有些地方显得比较粗糙，甚至微信运动都不能使用（官方说支持，能一直不能被识别，且不能把数据导入到苹果健康），但对于这样一家小公司还是很不错了。\n一开始上手还是没有那么容易的，显示的都是图例，没有文字，需要看一下说明书。触摸屏上滑动的操作幅度要大，不然就会被识别为点按。计步精准，同时使用GPS测量一段路，基本没有误差。通知很及时。翻腕点亮屏幕功能基本好使。\n总的来说还是很满意的！给国人赞一个，做出这么高性价比的手环。", "filename": "2015-11-07-iwown-band.md"}, {"id": 64, "text": "\ndate: 2015-11-28 16:07:50+00:00\nlayout: post\ntitle: SYB创业培训结束\ncategories: 随笔\ntags: 创业\n\n十月底萌生了做语言学习App的想法，结果不久学校就开始招收SYB创业培训的学员。之前我想加创业学院，结果嫌写计划书麻烦而放弃，这次我下定决心上一次创业培训。\nSYB是Start Your Business的简称，是由国际劳工组织在中国开展培训，主要面向小微企业。听起来十分高大上，在去上之前我还担心我一个外国语学院的文科生比不上别人。但实际去上了还是很亲切的，而且文科生的口才总归应该比理科生要好一点，思维也不一样。\n课程分为两段，由两位老师教。前一位是无锡轻工发酵专业毕业，工作十几后创立景观设计公司的陈老师，她的课堂讲求互动，有点西方翻转课堂的感觉。我认为她很好地调动大家进行思考，虽然有些想法都很幼稚，经不起打击。后一位是自称在通用电气当过经理的孟老师。他是位八零后，没有陈老师这位六零后老道。他的上课方式则近似于独角戏。不过有时候他貌似讲了很多很精彩，我并不了解他的要点是什么。我记得最深的是他认为九零后百分之八十要创业，个性都很强，自我意识很强。但生活在互联网时代的九零后也要向七零八零后学习，特别是在现实社会中的经验。\n一个企业要生存一定要能实现盈利，我感觉我的APP学习iOS上的drops和Rosetta Stone的盈利方式比较好。但一开始肯定也是挺难盈利的。\n我个人对于团队的组建方面也没有什么经验。乔布斯说创业是很难的，创业者要能说服优秀的人才与自己一起做事。所以我觉得我先工作一段时间，在当地积攒一些人脉后创业会要顺利一点。\n发现机会，合理做好规划，并不断坚持的话，应该能创出一番事业。创业对于面对巨大竞争压力，又想做自己喜欢的事情，发挥自己的特长的大学生来说应该是很好的道路。\n创业当然还有许多细节要注意，包括创办企业的流程，了解政府的政策，写一份完善的计划书，做好市场调研等等。\n说到好的企业想法，如果创办的企业不能生存，不合实际，还是换一个项目吧。有时候转卖一些小商品更容易存活，但我的理想肯定是做更有意义的企业。\n课程结束交了一份创业计划书，我忘记拍照了，有点遗憾。虽然这份计划书只是我在两个星期里自己空想写出的，但怎么说也记录了我年轻时的想法哈。我给我的公司想了个名字，叫海宁华文科技有限公司:)。\n延续两个星期的培训有太多东西好讲，我也不想讲细节了。感谢陈莉华、孟建平老师的教导和其它三十多位同学的陪伴。", "filename": "2015-11-28-syb-course-finished.md"}, {"id": 65, "text": "\ndate: 2015-12-11 10:28:50+00:00\nlayout: post\ntitle: Windows10平板体验\ncategories: 电子数码\ntags: 平板\n\n\n一直想买一台windows平板，看了好久，终于决定在双十一买下驰为hi8 pro。它采用8寸1920x1200分辨率的IPS屏，最新的cherry trail架构intel凌动处理器，2G内存+32GB EMMC，带micro HDMI接口和microsd卡拓展槽。在一众8寸国产寨板中，只有它采用了高清的屏幕。虽然是塑料屏，但毕竟没用过，而且这款平板性价比真的很高，先买来再说吧。结果跟我说良品率为0%，发回原厂加工，一直到12月5号才发货。\n到货后，开箱，感觉包装还是很精致的，机器有一股新机的檀香味。\n首次开机经过十几分钟的配置，进入桌面。\n显示\n高清屏，字体看起来还是很清楚的。我看了设置里字体默认放大200%。原厂贴了贴膜，用着不错。\n软件\n鉴于这是款平板，主要使用触摸屏进行输入，所以软件最好使用modern应用。一般的win32软件在高清屏上显示不佳，手指点击也不容易。但毕竟win32软件历史悠久，远比modern应用丰富，比如kindle只有PC版而没有触屏版。win10的应用不够丰富，微软自家的应用算是精品了，其它第三方的应用素质参差，发现一款好用的应用不容易。是否存在为windows10开发好的通用应用的价值呢？\n存在问题\n经常蓝屏，影响正常使用。应该不是内存问题，使用无线网络时出现蓝屏几率较高。原因待探索。\n用平板做什么\n我最初就是想买平板来看PDF、CAJ论文之类的，毕竟nook电子书屏幕小，刷新率低，而笔记本电脑不够便携，屏幕还不能竖起来看。同时，我还想最求下完整的pc体验，给平板配键盘和鼠标，连接打印机，刻录光驱等等，有真正的生产力。这些需求直接把安卓和iPad排除了。然后我之前还一时兴起买了jot pro，打算在平板上画画，做笔记。事实证明我的字太差，写在纸上都不容易看清，别说写在触摸屏上了。画画的话，随手涂鸦还是可以的。真的专业画画的话，还得买电磁屏的平板或iPad，买支带压感的电容笔。然后因为平板尺寸大了，使用模拟钢琴软件也更方便了，不由想到苹果的garageband，可以搞音乐创作。不过8寸的触摸屏肯定代替不了midi键盘。\n目前我主要用平板做这些事：\n1、看书、看文献\n2、上网，看新闻\n3、玩玩钢琴软件\n4、涂鸦\n5、看视频\n贴吧里有人跑分什么的，我想只要平板能满足我的需求，也不用介意。\n至于折腾平板，换装系统什么的以后再说吧，我现在更多的是做一个普通用户。win10系统基本够用，但毕竟安卓的应用比win10的modern应用丰富，而且支持多窗口的remix OS感觉很有意思，希望驰为快点提供支持吧。话说小米平板2的miui7是不是可以移植呢，安卓的移植大坑我已经好久不入了。", "filename": "2015-12-11-windows-10-tablet.md"}, {"id": 66, "text": "\ndate: 2015-12-26 21:44:50+00:00\nlayout: post\ntitle: 上海美国使馆签证经历\ncategories: 随笔\ntags: 留学\n\n报名参加了学校组织的寒假UCB游学项目，因为有中介服务，不用自己办申请的各种步骤。但签证还是要面签的。项目安排两个星期，我只需签B1/B2签证即可。\n22号签证，我提前一天就到了上海，顺便叫上爸妈来上海玩。想我离上海这么近，每次乘火车家和学校来回都经过，好好地游览上海还是我7岁的时候。\n签证那天，到了2号线南京西路口，碰到一个项目的同学。一起到了奉贤路和吴江路交界处，排队拿牌和盖手印。手印也不知道是什么材料，用特殊的光线照射才看得到，文科生不由感叹一下。\n签证不能带电子设备，钱等，我把东西放在门口让陪签的老师管着。嗯，爸妈也在。\n进去后交DS160，给护照盖二维码，验证护照，输入指纹，然后面试官提问。\n里面人很多，空调还开得很热，感觉签证环境也不是很好啊。\n按指纹时我手出汗，工作人员提示我用\"clothes\"。然后我手按的姿势不对，她提示我要\"flat\"。嗯，听得懂还是很快就好了的。\n面试官是一位黑头发白人，我说你好，然后他也用中文说你好并开始对话。他问我去美国干嘛，我说去加州大学伯克利分校游学。结果我说得太快，发音不清。他说他中文听力不太好，让我说慢点。他听懂后说，噢，是伯克莱大学？然后他貌似知道我是大学生，能说英语。我也就直接用英语和他讲。他说伯克利大学是他的母校：）。他问我要了邀请函，因为邀请函上没有我的名字，我又给了参加翔飞这个项目的学生名单。他又问了我谁给我经济支持。我说爸妈。他又问我爸妈的工作。他最后问我是否会申请到UCB学习，我说不会。之后，他边说pass。签证通过了。\n我看了签证的申请单，签证花了我一千零几十元人民币。此签证10年内可以在美国待半年。\n通过了还是很开心的。具体的签证过程就是这样，其它的事不细讲了。", "filename": "2015-12-26-get-my-visa.md"}, {"id": 67, "text": "\ndate: 2015-12-27 9:55:50+00:00\nlayout: post\ntitle: 英语修辞方法整理\ncategories: 笔记\ntags: 英语 修辞\n\n高英考试要考修辞方法(rhetorical devices or figures of speech)，在博客上整理一下吧。\n一、关系型的修辞\n1、simile 明喻\n例： Father is like a mountain.\n2、metaphor 暗喻\n例： 下雪了，大地披上了一件白色的外衣。\n3、personification 拟人\n例： The hurricane lifted the roof.\n4、metonymy 转喻\n用相关的东西代替某物。如中南海代替中共高层\n例：The kettle is boiling.\n5、synecdoche 提喻\n用部分代整体。\n例：50张口表示50个人\n6、antonomasia 换称\n例: \nthe king-> Your Majesty\nthe hun泛指匈奴一样的野蛮人。\n7、euphemism 委婉语\n例：\n死->驾鹤西去，薨\ndie->pass away\n二、表强调或低调陈述的修辞\n1、hyperbole 夸张\n例： People were slain in one second.\n2、litotes 反语法，简介表达法\n例：中国没有那么弱小。\n3、antithesis 对照，对偶\n例: \nNo pain, no gain.\nGood breeding consists of concealing how much we think of ourselves and how little we think of the other person. (Mark Twain)\n4、paradox 似非而是\n例：孩子是家长的老师。\n5、oxymoron 矛盾修饰法\n例：living death, victorious defeat\n6、epigram 警句\n例: 失败是成功之母。\n7、apostrophe 呼语法\n呼唤一个不存在的人\n例： 上帝啊……\n8、rhetorical question 反问句\n例：Is is not? 难道?\n9、irony 反语 \nsaying the opposite\n例：……until we march backwards to the glorious age. （高英课文，the trial that rock the world）\n10、sarcasm 讽刺\n用反语来挖苦\n例：You are so diligent a person.\n11、satire\n主要用于表达讽刺小说，讽刺小说家\n12、ridicule 嘲笑\n例：Bryan mopped his bold dome.（高英课文，the trial that rock the world）\n13、innuendo 影射\n例：他这个学期来上了2次课了哦。（他没来上课14次）\n14、parody 模仿\n例：Stay hungry, stay foolish.\n我的模仿：Stay single, stay simple.\n15、climax 递进\n16、anticlimax 反高潮，突降\n17、asyndeton 连接词省略\n18、polysyndeton 连词叠用\n19、epistrophe 结句反覆\n例：... and that government of the people, by the people, for the people, shall not perish from the earth. — Abraham Lincoln in the Gettysburg Address\n20、anaphora  首语重复\n例：It was the best of times, it was the worst of times, it was the age of wisdom, it was the age of foolishness, it was the epoch of belief, it was the epoch of incredulity, — Charles Dickens, A Tale of Two Cities\n三、与声音有关的修辞\n1、alliteration 头韵\n例：Safe and sound.\n2、assonance 辅音不同，元音相同\n例：a deep green stream.\n3、consonance 辅音相同\n例：coming home, hot foot\n4、onomatopoeia 拟声词\n例：jingle bell\n四、文字游戏\n1、transferred epithet 移就\n例：sleepless night\n2、pun 双关\n例：Darwin is Right.（高英课文，the trial that rock the world）\n3、zeugma 轭式搭配\n例：吃了饭和酒\n4、syllepsis 一语双叙\n例：He lost the game and his temper.\n5、chiasmus 交错法\n例： And so, my fellow Americans, ask not what your country can do for you; ask what you can do for your country.（肯尼迪就职演讲）", "filename": "2015-12-27-rhetorical-devices.md"}, {"id": 68, "text": "\ndate: 2016-01-22 9:39:50+00:00\nlayout: post\ntitle: 换机了，国行二代MOTO G XT1079 \ncategories: 电子数码\ntags: Android\n\n高考后买的中兴U956一直很好用，后来买了iPhone5c后不再是主力机，但我在校的移动号还是用的U956。\n期间U956也摔过几次，但都没事。就是屏幕不太灵光了，而且只支持移动2、3G是硬伤。另外系统版本号也一直停留在4.2。\n此次要去美国，当然想体验下美国的4G网络。同时我想开热点共享网络给iPhone和HTC 8X。我的v版HTC 8X只能共享verizon的网络，而5c是s版有锁的。所以想买台美版的安卓机子。但同时又希望能用移动4G。这种全网通的机子一般就只有旗舰机了。但我个人喜欢千元机。结果看了半天，排除了魅族、小米、中兴、华为的一众千元机，选择了moto g xt1079。原因起码有六点，1.移动联通双4G。2.原生安卓，也有CM13可用。3.moto大厂，做工好，起码屏幕是康宁大猩猩的。4.支持FM。现在很多国产机已经不支持FM了，但我又是收音控，不能忍。5.屏幕合适，5寸屏用惯了。没有用过5.5寸的，但感觉放口袋里会不方便。6.便宜，天猫只要600元即可买到8G的XT1079。\n一开始我看moto G支持fdd-lte，想当然地认为它支持美国的LTE，结果发现美国的LTE都是用的Band4的，而moto G只支持FDD-LTE Band 1/3/7。所以到美国只能用wcdma，但其实也够用了，话说美国的WCDMA的升级版也叫4G。\n下面我们正式讲讲moto G的使用体会吧。\n这款机型的具体配置见此:Moto G 2014 LTE\n网上的测评还是挺多的，被外媒评为2014年最具性价比的机子。我不多讲了。\n一、通话与网络\n我对通话的要求不高，平时打电话打得少。双方都能听到声音就行。我还没办4G业务，移动的3G信号实在有点差。也不能怪机子。\n二、拍照\n摄像还是挺渣的，当然还是比12年的htc 8x好的。相机的参数不能调整是一个遗憾。相机启动还有点慢，拍摄也比较迟顿。摄像只能720P，也够用了，比1080P还省了存储空间。当然日常拍照还是可以胜任的。\n三、系统\n国行的5.0.2的系统我用了几十分钟就忍不住刷了魔趣5.1.1。但魔趣对TD-SCDMA的支持不佳，要在工程模式设置后才能用。而且我在装了一堆软件后变得异常卡顿。还有就是安卓4.4之后默认存储设备是内置存储，SD卡只能少数应用可以用，大多数时候只能放放照片。而安卓marshmallow支持将sd卡与内置存储融合，解决了存储空间不足的问题。因此决定刷CM13。虽然是nightly版，但可以日常使用了，而且运行确实也流畅多了。而6.0另一大优点就是待机时间的增长，开省电模式和飞行模式后，待机一晚基本只掉1%的电。\n然而1G内存的确是硬件上的不足，我看系统默认还开了250MB的swap，swap也常是满的。多任务操作肯定不会很顺滑。装了绿色守护之后要好一点。\n四、外观和手感\n我买的白色MOTO G，还是很漂亮的。弧线的背部设计适合握持，而防水的背壳摸上去手感也很好。屏幕的玻璃摸起来还顺滑，不像u956的屏幕稍有粘滞。\n毕竟只是600元的手机，我也没有过多的要求了。虽然性能没有同价位国产千元机好，但起码做工应该还是最好的。", "filename": "2016-01-22-moto-g-2rd-gen-lte.md"}, {"id": 69, "text": "\ndate: 2016-02-16 10:28:50+08:00\nlayout: post\ntitle: 美国行之游学伯克利\ncategories: 随笔\ntags: 出国\n\n去年国庆前后决定参加学校的加州大学伯克利分校的游学项目，经过几个月的准备，我在2016年1月25日踏上了美国的领土。\n行程\n上海浦东机场出发到旧金山国际机场，之前一晚我在上海张江找了家旅馆，第二天乘地铁去机场。\n第一次乘长途飞机，我也没事先准备什么娱乐的视频音频，9个多小时飞机睡觉占了大多数。而且飞机上的饮食让我感觉很恶心。美联航的乘务员都是大叔大妈，大妈尖锐的声音和问问题的语调我都有点不适应。\"Would you like something to drink?\"。最后终于熬到头下飞机了，我到美国啦！然而还要排长队入关。大家纷纷连上旧金山机场的无线，向国内的朋友发信息。不过那时候是北京时间的零点了。\n第一次来到美国，一切都是那么新鲜。什么东西都可以在前面冠上三个字：美国的。美国的厕所，美国的无线网络，美国的门，美国的汽车，美国的公路……\n我们团一行60几个人，跟着领队，乘大巴到北面的列治文的万怡酒店。在酒店安顿好后，我们去吃饭。吃的第一顿饭是叫帝国的自助餐馆的中式自助餐。之后去沃尔玛购物，买早餐。\n然后第二天，项目就正式开始了。\n第一天，我们参观了伯克利校园，跟着一个伯克利学生，一大帮人在校园转。然后，我们前往上课的地方，开始了UCB Extension设置的课程。话说免费的中午饭实在是很难吃。\n此后几天，都是安排的上课。早上十点开始上课到十二点，午休自由活动到两点。再上课到4点，自由活动，吃晚饭，然后6点15分集合。\n三天的自由活动里，我自己去了各种餐厅。然后环游周边的地区。第一个星期的周五，课程结束后，我们有一个和伯克利学生的讨论会。大多和申请伯克利有关哈，我问了一个社交网络的问题。\n周六，我们去了硅谷。参观了英特尔，斯坦福，去了斯坦福购物中心。我帮别人买了部iPhone6s Plus。\n周日，我们去了旧金山。我们去了渔人码头，九曲花街，艺术宫，金门大桥。\n周一，我们花了一天在奥特莱斯购物。\n然后又是两天的课程。周三课程结束后我们去海边烧烤。\n周四我们去了旧金山市中心，联合广场。我主要是去了唐人街。晚上是结业晚会。我作为组长，也带我们组成员进行了表演汇报。真的还是挺开心的，特别是和组员一起排练表演的时候。\n周五我们就要互相说再见了。\n体会\n基础设施\n在美国行走，直观看到的就是美国的基础设施。\n交通\n美国是在车轮上的城市，公路交通发达。行人过马路，汽车都会礼让。乱穿马路的现象其实很普遍，有的地方就没有人行道。郊区很少能看到行人。公交没有中国那么发达，特别是小城市。乘公交的票价还很贵，旧金山乘一次要2.25美元。地铁没坐过的说。旧金山的地铁和公交都会由几个不同的公司经营。\n出租车和uber专车我没坐呃，不予评价。\n卫生\n主要说美国的厕所，有提供免费厕纸，擦手纸，干手器，垫在马桶上的纸。然后会有饮用水机器。其实我一直觉得擦手纸挺浪费纸的。座便器也不是那么干净。然后美国公民也有乱扔垃圾的问题。毕竟都是人，都是会有素质高低的不同的。\n运动\n美国的运动场地还是挺多的。每隔一段路就能看到有运动场地。在伯克利的山上有个体育中心，貌似还是体操队的训练基地，有很多小姑娘穿着体操服练体操。路上能看到许多奔跑的人。伯克利的胖子还是比较少的，我去田纳西州看到的体态臃肿的人要多。\n食物\n美国历史不久，没有多少饮食文化，又是个多元文化的国家，主要的食物是三明治、沙拉、汉堡、披萨等，同时还有各种其它国家的餐厅。有中国，日本，韩国，泰国，墨西哥，埃及等各种风味的。我个人还是喜欢东亚的食物。。美国的中餐馆也还是很多的哈。\n互联网\n美国的移动网络覆盖基本让人满意。连上网，普遍有分配ipv6地址。许多商店门口都有facebook，twitter，yelp的标志。很多商家和街头卖艺者有自己的网站。在美国可以访问天朝的网站，就是速度比较慢。\n关于伯克利\n来伯克利之前我看了介绍伯克利建筑的书。伯克利多山，建筑依山而建，践行梅贝克“与自然共生”的原则。加州大学伯克利分校是最早的加州大学，美国排名第一的公立大学。我虽然没和伯克利的学生上课，但我能感到这所大学有很好的师资力量和学生。有各种专业，资源也很丰富。环境也真的不错，虽然没有江南大学建筑那么风格协调。\n其它一些细节\n1.美国的酒店里都会放一本圣经\n2.美国的酒店没有烧水机，但有咖啡机。咖啡机可以用来烧水。\n3.美国的门，拉的方向是手环。推的方向是一条杠。\n4.美国有消费税。在亚马逊上网购也要收。\n5.美国的公园会有烤架。\n6.美国人挺有礼貌，Thank you和excuse me经常能听到。\n7.美国加油站很多，有很多公司的。同一个公司，不同地点的油价还不一样。\n8.美国的物价，换算成人民币好贵的。吃一顿饭要8美元左右，看电影9美元，剃头15美元。\n这两个星期经历了很多，拍了近千张照片，实不是我文字所能描述清楚的。现在回想在美国的经历，宛若一场梦。", "filename": "2016-02-16-journey-to-the-united-states.md"}, {"id": 70, "text": "\ndate: 2016-04-03 19:12:50+08:00\nlayout: post\ntitle: 快速应用开发(RAD)更适合编程爱好者\ncategories: 技术随笔\ntags: RAD\n\n愚人节前一天，微软在build2016大会上宣布Xamarin免费。\nXamarin的卖点是c#和跨平台，但以前收费很高，一直是小众软件。我之前也有尝试微软dreamspark为学生提供的免费的Xamarin，但找不到很好的教程。用Xamarin开发Android和iOS，还是要分别了解这两个平台，不能说我写一遍代码，就能同时在Windows,iOS和Android上运行。\nXamarin免费后我又下载安装试用了一遍，但感觉我c#，MVVM设计这些都没掌握好，很难上手。每到这时，我便怀念起用b4x开发软件的畅快。\n我觉得我应该对自己有一个定位，那就是，我只是一个编程的爱好者，而不是专业人士。我用编程来便利我的生活和工作，而不是把它当作一个职业。我没有太多时间来专门学习一门语言，对我来说，能迅速把想法变成现实是重要的，技术上的细节是不重要的。而RAD很符合一位编程爱好者的要求。\nBasic4android,Basic4ios,B4J的组合基本上可以满足的我的开发需求。另外我还会点Python和VB，用作脚本语言进行批处理等操作。我为什么这么喜欢RAD，或许是因为我的编程入门语言是Autoit:)。记得小时候喜欢用msgbox写一个对话框整蛊程序，很有成就感。\n一篇写为什么用RAD的博客：Should You Use a RAD Tool for Your Software Project?", "filename": "2016-04-03-I-love-RAD-languages.md"}, {"id": 71, "text": "\ndate: 2016-05-18 20:48:50+08:00\nlayout: post\ntitle: 记一次中国日报面试经历\ncategories: 随笔\ntags: 工作\n\n不知不觉中我已经是大三的学生了，下半年就大四了，面临毕业和之后选择做什么的问题。我想先暑假先尝试做一些英语专业相关的实习工作。于是我在国内的招聘网站上搜索实习信息。我还是偏爱无锡本地的工作，然后还有与英语有关。最终觉得中国日报的暑期英文编辑实习生比较合适。\n于是在网上投简历，让我很高兴的是，人事给我发了面试邀请。\n中国日报在2014在无锡开了分社，位于新吴的国家软件园。面试这天我还是第一次去。中国日报边上就是中国网络电视台。无锡本土的永中office也在这里。\n我找到位于金牛座（按星座划分区域）的大楼，上五楼，一出电梯就看到中国日报的几个字了。门口碰到一对母女，也是来面试英语编辑的。那位小姐姐很热情。\n然后有人给我们刷开了门，我们去见人事经理。她给了我们应聘登记表和一份试题。话说登记表上连血型和星座都要填。。\n试题就是看三篇中文新闻，然后自己根据三篇文章的意思写一篇英文报导。\n新闻内容有关13年的新“国五条”，我写了个提纲，按开头，具体政策：税收、信贷政策、国家调控，结论三部分写。其中也有用到中文材料中的例子和采访的人物说的话。\n我花了两个小时写好，然后交给编辑看。但编辑认为我写得太过简单，能力没有达到要求。看我写了计算机特长，把我推荐给了计算机主管。\n计算机主管倒肯定能要我，但我对用dreamweaver写网页，用java写客户端，php写后端什么的不感兴趣，就拒绝了。而且要我暑假两个月都干这个我觉得对考研有影响。\n最后我有和主编聊了一下。她说我写的新国五条前房产税政策不对，但我完全是按照材料的内容写的。之后她又转话题到我开发的听雨BBS应用上来。我说一个人完成开发应用增加了编程能力，同时获得了成就感。她问我平时看china daily吗，我说实话前几天才好好看的，之前只关注信息，前几天才从怎么写的角度看。然后我觉得我也没什么好说了，就说不打扰，告辞了。\n个人觉得软件园的环境还是可以的，工作的人也大多是年轻人。china daily里玻璃墙上都贴满了china daily的大幅报纸亚光打印版。中间是一张张写字桌，很安静。\n要说我真的是求职欲望不强，对拿到一份实习经历和锻炼自己的希望也远大于对英语新闻编辑的热情。另外我也缺少英文新闻写作的训练。但我认为我做一份实习工作还是应该没问题的。我的沟通能力，行为举止上也的确有值得改进的地方。这一点，与我一起进来的女生做得就很好，也会尊敬别人。\n以上就是我二十岁第一次找工作面试的经历。", "filename": "2016-05-18-an-interview-experience.md"}, {"id": 72, "text": "\ndate: 2016-07-16 9:52:50+08:00\nlayout: post\ntitle: 第一次组装电脑\ncategories: 电子数码\ntags: DIY\n\n暑假的一个炎热的下午，我躺在床上。突然冒出一个组装一台电脑的想法。其实这个想法以前就有，但没有得到实施。而因为我看到便宜的二手主板只有100元，就想实施这个想法。配这台组装机的目的有：1、当作服务器，可以通过路由器的花生壳动态域名服务访问。2、用作HTPC。想在电视机上看网络视频。3、装黑苹果，运行b4i的build-server，这样我直接在笔记本的windows系统上就可以编写iOS程序，而不用启动笔记本上的黑苹果再启动XP虚拟机了。4、学习装机。\n配置主要是适合黑苹果的配置：\n| 部件          | 名称                                | 价格   |\n|---------------|-------------------------------------|--------|\n| CPU           | i3 3245                             | ￥530  |\n| Motherboard   | 技嘉 H61M-DS2                       | ￥109  |\n| RAM           | ADATA 4GB 1600MHZ DDR3              | ￥115  |\n| HDD           | ADATA 120GB SSD                     | ￥245  |\n| Case          | 乔思伯C2                            | ￥145  |\n| Power         | 先马刺客430 300瓦                   | ￥109  |\n| CPU FAN       | 终极者雪蝠                          | ￥15   |\n| Wireless Card | BCM4322+台式机用mini-PCI-E转PCI-E卡 | ￥77   |\n|               | 总价                                | ￥1345 |\n其中只有主板是买的二手的，比全新便宜大概200块钱。\n到货之后正式开装。之前也在网上看了很多装机教程，也研读了技嘉主板的说明，很快就完成了。装机这件事，东西到手后自己摸索一下就可以完成。记录一下，2016年7月14号，装机完成，一次点亮！\n然后开始装系统。120GB的空间不大，但是还是想装Windows10+OS X+Ubuntu 三系统。。\n主要的困难是黑苹果的安装，而黑苹果安装的难点在于显卡驱动。本来以为i3 3245带的HD4000很好驱动，结果并不是。11个platform-id让你去一个一个试，然后技嘉主板里设置的显存还要与id相匹配。注入id的方式有clover，dsdt和efi string等等。然后远景的教程又都比较老。。我试了半天之后又发现，主板只有一个VGA接口，而HD4000驱动后不支持VGA输出！天啊噜。想想还是淘一块免驱的独立显卡吧，顺便弥补主板没有hdmi接口的不足。\n目前HTPC的计划还没有施行，GT210显卡也还没到。先更新到此。", "filename": "2016-07-16-my-first-DIY-computer.md"}, {"id": 73, "text": "\ndate: 2016-07-17 17:07:50+08:00\nlayout: post\ntitle: UEFI+GPT环境下安装Windows+Linux+OS X\ncategories: 技术随笔\ntags: \n\n前一篇文章讲到了我DIY了一台机子，配置如下。\n| 部件          | 名称                                | 价格   |\n|---------------|-------------------------------------|--------|\n| CPU           | i3 3245                             | ￥530  |\n| Motherboard   | 技嘉 H61M-DS2                       | ￥109  |\n| RAM           | ADATA 4GB 1600MHZ DDR3              | ￥115  |\n| HDD           | ADATA 120GB SSD                     | ￥245  |\n| Case          | 乔思伯C2                            | ￥145  |\n| Power         | 先马刺客430 300瓦                   | ￥109  |\n| CPU FAN       | 终极者雪蝠                          | ￥15   |\n| Wireless Card | BCM4322+台式机用mini-PCI-E转PCI-E卡 | ￥77   |\n|               | 总价                                | ￥1345 |\n因为HD4000在单VGA口的H61主板下尝试驱动失败，我又买了一块铭影的HD6450,直接可以驱动。\n我预想UEFI+GPT下，单硬盘装三系统，实践之后觉得还是很容易的。\n步骤如下：\n1、先安装Windows10，对整块硬盘进行分区，会自动生成EFI分区。\n2、安装OS X。把clover的EFI文件夹放到EFI分区里。这里我按平时做启动u盘的思路把/EFI/Boot/Bootx64.efi换成了Clover的，但开机仍然运行windows。\n3、最后装Ubuntu，安装时选择安装引导程序到整个硬盘（注意是安装引导），这样会安装GRUB2到EFI分区并把GRUB2设置为默认引导。\n4、GRUB2会识别Windows的引导文件，但可能没有识别CLOVER。这里需要手动处理一下GRUB2的菜单文件。\n打开/boot/grub/grub.cfg找到以下相似代码：\nmenuentry 'Windows Boot Manager (on /dev/sda2)' --class windows --class os $menuentry_id_option 'osprober-efi-FE6B-528A' {\n    insmod part_gpt\n    insmod fat\n    set root='hd0,gpt2'\n    if [ x$feature_platform_search_hint = xy ]; then\n      search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt2 --hint-efi=hd0,gpt2 --hint-baremetal=ahci0,gpt2  FE6B-528A\n    else\n      search --no-floppy --fs-uuid --set=root FE6B-528A\n    fi\n    chainloader /EFI/Microsoft/Boot/bootmgfw.efi\n}\n复制该段代码，把chainloader /EFI/Microsoft/Boot/bootmgfw.efi改为chainloader /EFI/Boot/Bootx64.efi(尝试直接引导CLOVERX64.efi失败)，把menuentry 'Windows Boot Manager (on /dev/sda2)' 改为menuentry 'CLOVER'。\n这样，三系统的引导就完成了。", "filename": "2016-07-17-install-windows-linux-osx-on-one-pc.md"}, {"id": 74, "text": "\ndate: 2016-07-19 17:38:50+08:00\nlayout: post\ntitle: B4i使用免费开发者调试账号\ncategories: 技术随笔\ntags: iOS B4X\n\n嗯，最近配了一台黑苹果台式机，打算放在家里当作服务器，可以运行b4i的Buildserver。这样以后到学校，我可以直接在笔记本的windows系统上完成开发，而基本不用进OS X。\n我的开发者账号已经过期了，但是苹果自Xcode7以后就支持普通用户免费真机调试应用。这个过程同样有用到开发证书和应用分发证书。\n我先到b4x的论坛重温了一下如何建立keys文件夹，然后试验一下后发现可以成功使用这个免费的证书来调试应用。\n具体操作如下：\n1、打开Xcode7，在Preferences-Account里登录Apple ID。进Details里，创建iOS Development的signing identity。\n2、建立一个项目，给它命名，要和以后b4i上调试的应用一样。连接iOS设备，项目设置的identity框里的Team选择自己的账号，运行。之后应该会获取到给该设备使用的provisioning file。如果提示没有signing identity，是因为开发者证书没有在钥匙串里，试试重启电脑。\n3、打开Mac的钥匙串应用。导出已有的iPhone Developer开发者证书为.cer。同时备份所有证书一份，可以保存为.p12。到Xcode账号设置详情里，右键你要用的provisioning profiles文件，点击show in finder，复制一份该文件。provisioning profiles可以在~/Library/MobileDevice/Provisioning Profiles里找到。以上两份文件命名为ios.cer和B4i.mobileprovision放到b4i的key文件夹里。\n4、Windows下打开B4i，点击Tools-Priviate Sign Key，输入你Apple ID的用户名信息（会显示在xcode项目文件设置的Team里），这样就在key文件夹里生成了B4i.p12。＃这一步错了，见下面的说明＃\n5、B4i里，点击Project－build Configuration，Package Name和之前Xcode下生成的项目名一样。\n6、之后就是设置server地址，设备地址和安装b4i-bridge到iOS设备上。我碰到了生成应用出错的问题，提示没有所需的signing identity。我发现mac buildserver把mac上现有的证书都删除了。还好我有备份，把证书再导回去就可以了。\n话说B4i的调试功能挺好使的，修改过的代码不用重新编译就可以反映在设备上。我之前没有开发者账号时直接用xcode调试越狱设备挺费劲的，后来有了开发者账号也一直用的Xcode，因为我用到了cocoapods，而b4i会重新生成配置文件。现在开发者账号过期了，倒用b4i来直接调试了。\n 更新:\n 后来发现，第4步的B4i.p12是会添加到系统钥匙串里的，我用了b4i生成的文件所以导致了后来提示没有所需的signing identity的错误。b4i自带的Priviate Sign Key工具是用来到苹果官网生成证书的。这里我们用xcode自动生成的证书，就不用Priviate Sign Key了。所以只要再导出iPhone Developer开发者证书为p12文件放倒key里就行了。\n 然后，provision profile如果不是如com.xx.*的话，b4i-bridge可能无法通过编译，因为identify bundle配不上，b4i-bridge的bundle是你的应用的bundle名加上.bridge。我们可以专门为安装bridge配一个provision profile，用xcode再建一个项目，bundle名是将来在b4i里开发的应用的bundle名加上.bridge。比如com.xulihang.test1.bridge。b4i不支持使用多个provision profile，要进行手工替换操作。", "filename": "2016-07-19-use-b4i-with-free-IDP.md"}, {"id": 75, "text": "\ndate: 2016-07-20 12:12:50+08:00\nlayout: post\ntitle: OS X下安装Lighttpd+Python+Bottle\ncategories: 技术随笔\ntags: Python\n\n因为要运行b4i的buildserver，所以新配的电脑不能切到linux下工作。直接在macosx下部署python－bottle应用。其实可以用一些虚拟技术，但我还没学过。\n我选择了轻量级的lighttpd，使用fastcgi来使用python+bottle的组合。\n具体方法如下：\n1、安装并配置lighttpd\n$ brew install lighttpd\n启动lighttpd：$ brew services start lighttpd\n打开配置文件/usr/local/etc/lighttpd.conf，添加以下内容\n```\nfastcgi.server = ( \"/app.py\" =>(( \"socket\" =>\"/tmp/fastcgi.socket\",\n\"bin-path\" =>\"/usr/local/bin/python3 /usr/local/var/www/app/app.py\",\n\"max-procs\" =>1,\n\"check-local\" =>\"disable\"\n))\n)\nurl.rewrite-once = (\n\"^/favicon.ico$\" =>\"/favicon.ico\",\n\"^/(.*)$\" =>\"/app.py/$1\",\n)\n```\n这里我是参考了廖雪峰的python教程：Linux配置Lighttpd+Python+web.py应用\n其它的还要修改module.conf，照着廖雪峰教程里的。我自己把include \"conf.d/fastcgi.conf\"前的＃去掉了。\n2、安装配置Python\n在/usr/local/var/www/app下建立app.py，内容如下：\n```\n!/usr/bin/env python\n-- coding: utf-8 --\nimport bottle\nimport os\nfrom bottle import route, run, view\nimport home\n@route('/')\ndef index():\n    return 'Hello World'\nAPP_ROOT = os.path.abspath(os.path.dirname(file))\nbottle.TEMPLATE_PATH.append(os.path.join(APP_ROOT, 'templates'))\napp = bottle.default_app()\nif name == 'main':\n    from flup.server.fcgi import WSGIServer\n    WSGIServer(app).run()\n```\n这里参考自：bottle + lighttpd + fastcgi。\n因为我实际测试时发现mac自带的python2会提示import _dummy_thread的错误，发现dummy_thread是python3专用的，因为flup1.03只支持python3，所以又用brew安装了python3。应用默认使用python3。\n如果要用python2的话就不要用flup，把\nfrom flup.server.fcgi import WSGIServer\nWSGIServer(app).run()\n换成\nrun(host='localhost', port=8080, debug=True)\n安装所需模块(使用python3用的easy_install)：\nsudo easy_install-3.5 flup \nsudo easy_install-3.5 bottle\n3、重启lighttpd进行测试\n$ brew services restart lighttpd", "filename": "2016-07-20-mac-lighttpd-python-bottle.md"}, {"id": 76, "text": "\ndate: 2016-07-29 14:52:50+08:00\nlayout: post\ntitle: 阅《射雕英雄传》已毕\ncategories: 随笔\ntags: 金庸\n\n高三时读了《神雕侠侣》，今年年初读了《倚天屠龙记》，现今暑假便把《射雕英雄传》也读完了。我最喜欢和熟悉的射雕三部曲至此是都看过一遍了。\n我近来读书甚少，除了上学要读之书，如与计算机技术有关的感兴趣的书外，很少主动寻书来饱读一翻。\n但读金庸的小说则可以数个小时手不释卷，兀自读下去。想来有这几个原因。一是小说与电视剧的结合。我事先看过电视剧，在看小说之时，会与电视画面相结合。而同时书中又不乏细节描写，许多是电视剧没有演出的，许多是藏在了表演中的，待我去发现。我读的时候，很多情节，脑中想象不出具体情形。人的音容笑貌更是不容易想象。往往需要借助电视剧的画面。二是语言优雅，与真实历史相结合。金庸选择词汇，用古时有的词汇替换了现在用的词汇。我小时每和人说起我的爱好时，必是历史和计算机。然而现在再也不会谈起喜欢历史，别人也都只知我对计算机的热情。现下读了《射雕英雄传》后，但见金庸引经据典，显示了极深的古典文学和历史的素养。三是情节生动，人物性格突出。郭靖憨傻但正直守信，黄蓉机灵可爱。从我小时即十分喜欢。其它角色，不管好坏，也都让人影响深刻。\n金庸是海宁人，在作品中会反映出来。我在读《射雕英雄传》时，比之前看到的两部在这方面看到的更多。比如用词方面使用了很多吴语词汇。比如物事，镬子等。然后郭靖，黄蓉，江南七怪都是浙江人。都会说江南话（吴语）。在注中也提到家乡海宁，出了数学家李善兰等。射雕里讲郭靖黄蓉用江南话交流显得亲切。曾有听一档广播节目，针对公务员不准说土话的讨论里，嘉宾说讲方言是小地方思想，熟人社会的特征。我当时一听觉得很对。但在家乡长大，怎能不会说家乡的话。\n《射雕》里人物秉性纯洁，讲的都是国家大义，和普通地写情写人写武功，却是不一样的高度。金庸显示出来的大多是正面积极的东西，主人公最后都能有完满结局，恶人得到报应或被感化，也是十分适合我的性情。金庸作品的人物众多，在网上一搜，便见到淫秽的文字，实在是不好。目下，这个社会上有一种不好的风气，我虽不能改变，但也不去沾染。也算是当代的武侠精神之一。", "filename": "2016-07-29-Legend-of-the-Eagle-Shooting-Hero.md"}, {"id": 77, "text": "\ndate: 2016-08-01 10:17:50+08:00\nlayout: post\ntitle: 拥有自己的B4i远程构建服务器\ncategories: 技术随笔\ntags: iOS\n\n前几篇博客讲到了B4i如何使用免费的开发者调试证书，macOS下部署lighttpd和python-bottle的应用。这篇博文，就是基于这两篇文章之上的。\n我的设想是家里安排一台b4i的buildserver，然后我到学校的时候可以直接在笔记本的Windows系统上使用B4i，而不用进macOS。\n昨天测试发现B4i的buildserver提供的安装方式是itms-services，里面的plist和ipa的链接都是指向的无线局域网内的ip地址：192.168.1.107.因为我的网络条件是小区拨号宽带接无线路由器，路由器使用花生壳动态域名解析服务，然后DMZ暴露黑苹果主机给外网。所以在外面访问这台主机都要用花生壳动态域名来访问。而b4i的buildserver不是开放源代码的，我不能进行修改让它把地址改为动态域名。那我在外面不就不能使用黑苹果主机的buildserver了吗？\n我于是又想了一个曲线救国的方法。通过lighttpd的服务器服务，把b4i的itms－services服务转过来。方法是这样的。\n首先我们知道buildserver提供的几个URL地址：\n\nhttps://192.168.1.107:51042/userid。安装该用户（在b4i里设置的）最近编译出来的ipa文件。\n\n通过上面的地址又可以知道以下几个：\n\n\nhttps://192.168.1.107:51042/download?type=manifest_userid 这是itms服务用到的plist文件。\n\n\nhttps://192.168.1.107:51042/download?type=ipa_userid plist文件里记录的ipa文件地址。\n\n\n然后，我们在bottle应用里，根据以上地址，生成可以用动态域名访问的plist文件，复制目标ipa并提供下载，放在在静态文件目录下，再做一个itms安装html用网页，里面提供一个如下的链接：itms-services://?action=download-manifest&url=https://servername:8080/static/1.plist。\n这样之后还是不能完成安装，因为苹果在iOS7.1之后要求使用ssl证书。如果你自己签名一个ssl证书，会提示无法连接到服务器。需要在设备里安装你生成ssl证书用的CA证书。具体方法见此文：ITMS-SERVICES://方式安装IPA在IOS 7.1中的变化\n另外在我5c的iOS8系统上，遇到了安装过一次后不能再安装的问题。搜索得到以下解决办法： IOS8企业版无法通过itms-services覆盖安装，没反应", "filename": "2016-08-01-have-your-own-b4i-host-buildserver.md"}, {"id": 78, "text": "\ndate: 2016-08-15 11:19:50+08:00\nlayout: post\ntitle: 移动应用的个人汉化热潮在PPC时代达到顶峰\ncategories: 随笔\ntags: 汉化 CAT\n\n回想2007年时，各大PPC论坛热闹非常，国外优秀软件为多，涌现了相当多的个人汉化作者。但微软推出Windows Phone系统，抛弃Windows Mobile，相当于给PPC判了死缓。\n此后移动平台以安卓和iOS为主，两者都采用了应用市场(App Store)进行应用的分发，这样不便于个人汉化者发布作品。安卓比较自由，可以直接安装APK，一些PPC软件汉化者都转向汉化安卓应用。但现在基本上看不到个人汉化者的身影。\n这点从汉化新世纪的掌上汉化数量统计中也可以看出来：\n\nPPC时代有名的汉化作者：玉龙雪山。后来即转投安卓汉化，加入了机锋的汉化组。\n\nWindows Mobile和Windows桌面系统有着很大的相似性，会windows开发的程序员开发WM的应用也不是难事。而且WM的应用可以直接在桌面Windows下修改。可以使用同样的工具。Windows有着极为广泛的用户和开发者。在如何汉化PPC/SP/PC汉化教程 一文中有详细的汉化方法介绍。我也曾用exescope简单地汉化过一款扫雷应用。上了大学，了解了CAT后才知道SDL PASSOLO、Alchemy CATALYST这样的专业汉化软件。\n安卓和iOS应用也都有完善的本地化机制，但往往都已经由开发商完成了汉化。没有汉化的，往往需要反编译等技术。不过，我觉得现今移动应用以应用市场分发应用为主，智能移动设备普及，移动开发大热是主要原因。而PPC时代软件大多从论坛和软件下载站获得，用户数量不算多，但素质较高，论坛讨论活跃。软件虽然不多，但个个都是实用的精品。这为个人汉化者提供了汉化的动力。\n个人汉化者就像中国社会主义市场经济中的非公有制经济，具有勃勃的活力。但目前，或许是移动应用汉化产业化，组织化的时代了。\n", "filename": "2016-08-15-localization-of-mobile-apps-reached-its-peek-during-PPC-era.md"}, {"id": 79, "text": "\ndate: 2016-08-20 16:18:50+08:00\nlayout: post\ntitle: 护眼设备研究\ncategories: 电子数码\ntags: 护眼\n\n\n反射屏\n最近深感平时使用电子设备时间之久，虽然已经有了nook2，用电子墨水屏幕不伤眼，但刷新率太低，不便用来浏览网页，还不支持彩色。另外就是6寸的屏幕太小。\n我便想有一款刷新率高点，尺寸大点的电子墨水屏幕，于是网上搜索，得知了大上显示器，13.3寸，刷新率能达到10FPS，但价格4799元过高。\n然后逛贴吧得知了反射屏的存在。反射屏是LCD面板的一种。LCD面板有三种类型，透射性(Transmissive)，反射性(Reflective)，半透半反型(Transflective)。详细区别见Transmissive, Transflective and Reflective LCD Panel Displays。\n平时生活中的计算器，以前老的文曲星，老的黑莓手机都是用的反射屏。反射屏本身不发光，依靠反射外界灯光来显示。因为光经过了反射，能量减少，对眼睛的伤害就比较小。而平时我们的液晶屏幕在液晶后面有一层背光板，较前者容易引起疲劳。\n目前类似技术的有过Pixel qi（前OLPC项目CTO创办的公司，已倒闭），高通的mirasol（有一款设备是汉王c18）。在贴吧和hipda上讨论较多的是富士通的全反射屏。\n富士通在它的平板设备上使用了反射屏，然后DIY高手将它改成显示器在网上卖。使用反射屏的富士通平板是2003年到2009年的st4121到st5111系列平板。显示器太贵，我选择了直接购买平板，性价比高。\n我买的是st4121的平板，移动版奔三处理器，933Mhz。内置256MB内存，再插上一根256MB SDRAM扩展（注意，是比DDR还老的SDRAM）。接口倒很丰富，USB口也有两个，虽然只是usb1.1。屏幕是1024x768的反射屏，支持wacom的电磁技术，可以用电磁笔操作，但不能用手。多点触摸技术是苹果在2007正式宣布的。买来的机器运行倒还是很流畅的，反射屏的确有护眼的效果。本文就是用此平板写的。平板自身有背光灯，可以调节亮度，外部光源加上自身一点背光显示效果要好，整块屏幕会微微泛绿。更多平板的信息，富士通的官网和tablet review网站上有。\n其它\n此外，我的笔记本的镜面屏反光也是一个问题。家里的电视，显示器都是雾面屏，光线漫反射，看起来比较舒服。所以我买了一张磨砂膜贴上，效果不错。\n还有看电子屏幕的蓝光问题，黄色是蓝色的互补色，电脑和手机调夜间模式，屏幕泛黄可以防蓝光。还有蓝光眼镜，一般的也是微微带点黄色的。\n2020/02/03 更新\n后来我陆续买了YotaPhone和海信A2 Pro，这两款手机不管是前面的OLED屏还是后面的电子墨水屏，显示效果都还不错。\n我用了很多手机，其实大多数手机都是比较护眼的，比如iPhone5c、moto g这类LCD屏手机，低亮度也无频闪，应该是DC调光的。海信A2 Pro使用OLED，采用PWM调光，存在频闪，但调高亮度后无频闪，显示效果不错。\n其实影响视觉体验的不仅是频闪和蓝光，还有对比度、文字大小、颜色等等。我最近使用小米CC9，觉得这块OLED屏的确比较糟糕，怎么也调不好。屏幕很大，分辨率高，但字体仍然发虚，颜色太过艳丽、同时颜色还不均匀，看久了很容易眩晕。\n关于手机的屏幕参数，NotebookCheck网站可以找到相关评测，涵盖屏幕的色域、频闪等信息。", "filename": "2016-08-20-devices-which-protect-eyes.md"}, {"id": 80, "text": "\ndate: 2016-08-24 09:16:50+08:00\nlayout: post\ntitle: 制作双语字幕的一般流程\ncategories: 随笔\ntags: CAT 翻译\n\n最近看王华树的《计算机辅助翻译实践》，内有字幕翻译一章，便也想亲身实践一下。\n我选择了我听了无数遍的乔布斯1997年8月在Macworld上的演讲，这个视频还没有人做字幕。具体流程如下：\n1、听写英文\n首先要把原文听写下来。我试着找音频转换文字的软件，没找到可以用的。Youtube已经有了自动识别英文生成字幕的功能，准确度尙有所欠缺。还是自己听写吧。\n听写时遇到一些含糊不清的，实在听不清楚，我干脆就过掉不写了。对整个视频影响不大。\n然后我听写时是把文本打在文本文件里的，一行为一个时间轴单位，方便直接导入字幕处理软件。比如这样：\nAnd I, like a lot of other people, \nare pulling together to help Apple get healthy again\nand I am extraordinarily confident that that is going to happen.\n2、制作英文字幕，做时间轴\n英文听写下来，就导入字幕制作软件里做时间轴。我选用了人人影视的字幕软件Time Machine，可以边放视频，边确定时间。\n做好之后，把srt字幕导入播放器里和视频一起播放，检验校对。\n3、翻译\n有了原文字幕，就可以做中文字幕了。我使用了OmegaT这一计算机辅助翻译软件，可以直接处理srt字幕文件，能把时间轴信息忽略，直接显示原文。\n如果说大段的文章用CAT软件，因为以句子为单位翻译，容易上下文联系不紧密的话，字幕翻译则正合适。\n因为我希望显示的字幕和视频里的语音相吻合，所以采用了类似同传口译的翻译方法，讲到哪，翻到哪。如果后面用指代提到了前面的内容，可能不易理解，把指代都要讲清楚。\n4、最后的双语字幕制作\n最后把中英文字幕合并。我想给字幕增加格式，因为srt格式比较简单，而我对字幕的特效代码也不了解，选择使用专业的aegisub软件。不过同样要了解特效代码。用软件的话批量处理起来方便。\n用格式工厂可以输出带字幕的视频，以下是我做的最终成品。\n ", "filename": "2016-08-24-making-subtitles.md"}, {"id": 81, "text": "\ndate: 2016-08-26 12:52:50+08:00\nlayout: post\ntitle: macOS设置延时关机启动项\ncategories: 技术随笔\ntags: macOS\n\n因为新配的黑苹果所用的h61主板不支持网络启动，所以只能使用定时开机(resume by time)。但我平时可能不需要用到这台黑苹果，让它以40几瓦的功率运行实在费电，所以想设置开机后即定时关机。我想要用的那天，在机器尚在运行的时候运行解除关机的命令就可以了。\n一般思路是使用launchd，但测试失败，我放弃继续研究这个，使用了另一使用macOS系统自带的设置启动项的办法。\n操作如下：\n1、新建一个shell脚本如下：\n```\n!/bin/bash\necho password | sudo -S shutdown -h +30\n```\n以上命令执行30分钟后关机的操作。因为默认用户的登录项运行没有root权限，要使用sudo。然后用echo和sudo的-S选项自动输入sudo密码。\n2、设置默认使用终端运行shell脚本\n右键shell脚本，显示简介，里面的打开方式设置为终端。\n3、设置启动项\n在系统偏好设置-用户与群组-登录项里添加。\n以上", "filename": "2016-08-26-macOS-delayed-shutdown.md"}, {"id": 82, "text": "\ndate: 2016-09-05 21:00:50+08:00\nlayout: post\ntitle: 翻译理论整理（一）\ncategories: 笔记\ntags: 翻译\n\n最近申请了免试研究生，免试还是准备一下吧，基于《翻译研究入门》一书做笔记。\n中国早期的翻译\n鸠摩罗什、玄奘等人的佛经翻译。\n现代翻译研究\n开创者：James Holmes\n翻译的分类：Jakobson把翻译分为三种：1.语内翻译（intralingual） 2.语际翻译（interlingual） 3.符际翻译（intersemiotic）\nHolmes将翻译研究分为纯粹的研究和应用的研究，Toury基于Holmes的创作了路线图。\n2019-10-07更新：\n这里再结合例子具体讲一下三种分类。\n语内翻译，《Translation：An Advanced Resource Book》中给出的例子是《哈利波特与魔法石》在英国的名字是《Harry Potter: The Philosopher's Stone》，但引进到美国时出于文化考虑改成了《Harry Potter: The Sorcerer's Stone》。\n语际翻译，即一般意义上的翻译，将一种语言转换为另一种语言。\n符际翻译，用文字来反应图像、音乐等其它媒介的意义。《符际翻译视角下的儿童绘本翻译》给出了一个例子，因为儿童阅读绘本时注重图像内容，所以在译文中增添了云朵一词，虽然和原文有出入，但与图片内容更匹配，更适合孩子这一对象。\n图像：\n\n原文：\n\nNow he worked in the shop at the bottom of the house， making figure heads for the prows of ships， and carving Indians out of wood to put in front of cigar stores. For Alice's grandfather was an artist. He painted pictures， too， of sailing ships and places across the sea. When he was very busy，Alice helped him put in the skies.\n\n译文\n\n艾莉丝的爷爷在房子的一楼开了一家店，专门雕刻船头的人像，以及摆在烟草店门口的印地安人像；他也是个艺术家，偶尔会画一些帆船和沿海地区的风景。当他很忙的时候， 艾莉丝就帮他在画布上画几朵白云。\n\n早期的翻译方法：\n\n逐字翻译（Word for word, or literal），西塞罗(Cicero)有使用，但他在翻译演讲时采用了另一自由的方法，如下。\n意译法（Sense for sense, or free），主要人物是St. Jerome。马丁路德在翻译圣经时，采用了意译的方法，将圣经翻译的通俗易懂。\n\n早期的翻译理论：\n\nDryden的三原则，Dolet的五点原则和Tytler的三原则。\n施莱尔马赫的异化（alienating）思想。\n\n等值与等效\nJakobson受到了索绪尔的语言学的影响。比如中文的“苹果”指一种水果，英文的Apple指同样的一种水果。\nEugene Nide受到Chomsky的转换生成语法思想影响，提出了功能对等理论。他把翻译研究和科学联系起来。\n等效（equivalence）的例子比如to kill a bird with two stones，翻译为中文是一箭双雕。功能对等的例子比如英语里的耶稣的替罪羊翻译为爱斯基摩语时，羊没有对应的单词，就用海豹进行替换，达到差不多的效果。但只注重功能，把罗密欧翻译成梁山伯，就缺少了文化的传递。\n\nNida抛弃了传统的直译（literal）和意译（free）的说法，采用了形式对等（Formal Equivalence）和动态对等（Dynamic Equivalence）的说法。\nNewmark提出了交际翻译(communicative translaton)和语义翻译(semantic translaton)。交际翻译针对读者，语义翻译关注作者。两者相当于意译和直译。比如“Wet floor”，交际翻译翻译为地面湿滑，小心摔跤，而语义翻译直接翻译为湿地板。\n", "filename": "2016-09-05-translation-studies-1.md"}, {"id": 83, "text": "\ndate: 2016-09-10 15:33:50+08:00\nlayout: post\ntitle: 语言学概念简要整理\ncategories: 笔记\ntags: 语言学\n\n语言学(linguistics)，顾名思义，是研究语言的一门学科。之前我整理了翻译的理论，但翻译研究尙不能称为学科，只是研究，没有成系统的理论。\n语言学有多种分类，研究语言本身的是普通语言学，将语言学知识与实际工作相结合的叫应用语言学。\n普通语言学有很多分支：主要有研究发音的语音学（phonetics），研究单词的词法（morphology）和研究句子结构的句法（syntax），研究语言意义的语义学（semantics），研究特定语境怎么说话的语用学（pragmatics），研究人是怎么学得语言的语言习得（Language Acquisition）等。\n应用语言学往往和许多其它学科相交叉，比如语言教学，翻译，词典编纂，计算语言学，机器翻译等等。\n下面根据戴伟栋的《新编简明英语语言学教程》再做一些整理。\n语音学\n语音学研究的是人是怎么利用发音器官发音的，而音韵学（Phonology）研究语音和语音所代表的的意思的。音素（Phoneme）是音韵学里的能区分意义的最小单位，比如说在man和pan里的[m]和[p]起到了区分意义的作用，是音素。这两个单词叫做最小对立体（minimal pair）。\n影响语音意思的还有超分段特点(suprasegmental features)，比如重音（stress），音调（tone，比如汉语的四声），声调（intonation）。\n形态学\n词素（morpheme）是语言传达意思的最小单位，基于词素可以产生很多单词的形态和新的单词。比如read变成reader，read变成e-reader。单词的单复数变化等变化叫做词的屈折（inflection）。\n句法是分析句子规则的语言学分支。历史上有过众多的学派，比如传统的（tradition），结构主义（structural）的，生成主义（generative）的和功能主义（functional）的。句法现多基于XP规则进行句法分析，可以画出树状图。\n语义学\n一些关于意义的观点：\n\n\n指称论（the naming theory），最早由柏拉图提出，语言是实际事物的标签。\n\n\n概念论（the conceptualist view），比指称论更完整，人看到语言，在头脑中有一个想法/参考，然后再是指示物。\n\n\n语境论（contextualism），语义要根据上下文具体情况判断。比如book一词，可以做为名词表示书，也可以做动词表示预订。\n\n\n行为论（behaviorism），比如说我渴了的意思是希望别人给他杯水喝。\n\n\n语用学\n语用学可以为人在什么环境做什么事提供准则。\nJohn Austin提出了Speech acts的理论。他认为言语行为可以分为三类，言中行为（locutionary act），言外行为（illocutionary act），言后行为（perlocutionary act）。言中行为就是直截了当的说话，言外行为是表达说话者的目的，言后行为是听到话语或做的。\n谈话的准则：合作原则（Cooperative Principle），礼貌原则（Polite Principle）。\nGrice的合作原则要求说话适量，讲质量，有关联，有礼貌。\n历史语言学\n语言会随着时间的变化，唐朝时候的羊和现在的羊都是发出咩咩的声音吗？网络语言兴起，传统语言受到威胁了吗？\n社会语言学\n不同的群体说不一样的语言，十里不同天，语言也是一样。所处区域，社会地位，性别，年龄不同，所说的语言也都不同。\n韩礼德的语篇分析（discourse analysis）：\n概念：语体（Register），适合某个场合的语言\n语体包括语场（field of discourse），语旨（tenor of discourse），和语式（mode of discourse）。\n具体例子如下：\n\n语场：比如科学方面的\n语旨：比如老师对学生\n语式：日常口语还是演讲报告\n\n在中西文化交融时产生了洋泾浜（pidgin）英语。\n语言和文化\nSapir-Whorf假说（SWH）认为说不同语言的人，思考的方式也不一样。\n不同的文化，色彩和各种事物的象征意义也不一样。\n不同的文化尽管有着不同，但也有文化重叠（cultural overlap）的部分。受到西班牙入侵后的墨西哥，印第安文化与西班牙文化会发生融合（amalgamation）。文化也会传播（cultural diffusion），一个例子就是外来词的存在。比如中文的沙发，email等。但接受文化的同时，也要警惕文化的入侵。\n语言习得\n主要的理论：行为论（the behaviorist），天生论（the innatist），交互论（the interactionist）。\n行为论认为孩子通过模仿学会。乔姆斯基认为每个人生下来都要语言学习机制（Lauguage Acquisition Device），掌握这通用语法（Universal Grammar），可以迅速学习语言。交互理论认为孩子通过于外界环境交互来学习语言，父母这是都会用特殊的语言，比如吃饭饭等。\n关键阶段假设（Critical Period Hypothesis）#，关键时期认为截止青春期的这个阶段里学习第一语言有效果，过了一直就不能在学会，或者学得很慢了、\n二语习得主要提到了Krashen的输入假说（Input Hypothesis），他认为学习者应该获得可理解的输入（comprehensible input），不断提高自己的水平、\n但不是输入的越多，学得越多，能吸收进脑子里的（intake）才是真正学到的。学习者自身的差异也会导致学习结果的差异，人的天资，动机，学习策略等都会有影响。\n语言和大脑\n主要是神经语言学和心理语言学。神经语言学研究方法如尸体研究，大脑扫描等。大脑的一个区域叫Broca，负责发声，这一研究得自于对失语者的研究。\n心理语言学研究人的心理，比如眼动实验（Eye Movement Experiments），给被实验这一段话，记录眼睛的运动，可以发现眼睛在生词上停留的时间较长。", "filename": "2016-09-10-linguistics.md"}, {"id": 84, "text": "\ndate: 2016-09-10 11:30:50+08:00\nlayout: post\ntitle: 翻译理论整理（二）\ncategories: 笔记\ntags: 翻译\n\n功能理论学派\nReiss提出了文本类型（text type）的理论。文本可以分为传递信息型（informative），表达型（expressive），指导型（operative）和多媒体（audiomedial）的类型。不同的文本类型要采取不同的翻译方法和工具。但受到文本的类型不能完全区分的批评。\nHolz-Manttari提出了翻译行为（Translation theory）说，她认为翻译是有许多参与者的一个行为。参与者包括发起人，委托者，原文提供者，译者，译文读者等。突出了与读者的交际功能。\nNord提出了文本分析的方法，影响文本分析的有文内因素和文外因素，如图所示：\n\n关于文外的读者，举个例子比如原作中的女子的描写符合西方人的审美，翻译后就变成樱桃小嘴，适合中国人的审美。文内的内容，比如文章是有关穆斯林宗教的，翻译可能会有亵渎，所以很敏感，翻译的人少。\nNord把翻译分为文献翻译(Documentary)和工具型(Instrumental)翻译，文献翻译相当于Reiss的表达型文本的翻译，讲究直译，异化。工具型翻译讲究提供信息。\nVermeer提出了目的论（skopos theory），翻译由翻译的目的决定。比如格列佛游记，本来是政治讽喻的小说，改编成儿童文学，就会有很大的变化。因为很多时候译者是受到委托人请求翻译的。Vermeer的功能是译入语的功能，和Reiss的是源语的功能。\n译者的隐身\nVenuti认为译者会受到政治文化等因素的影响，主张采用异化（foreignizing translation）的翻译方法。\n以上是课本的内容，接下来再整理下网上的理论资料。\n中国的翻译理论家的思想\n\n严复：信、达、雅——faithfulness、expressiveness、elegance/gracefulness \n鲁迅：翻译一要“移情”、“益志”，译文要有“异国情调”，二要“输入新的表现法”，以改进中文的文法，在当时主要表现为改进白话文。必须强调的是，鲁迅其实是主张翻译要通顺，又要忠实的。只是二者不可兼得的情况下，“宁信而不顺”。  \n茅盾：他也主张“直译”，反对“意译”，他认为汉语确实存在语言组织上欠严密的不足，有必要吸引印欧语系的句法形态。\n", "filename": "2016-09-10-translation-studies-2.md"}, {"id": 85, "text": "\ndate: 2016-09-21 16:00:50+08:00\nlayout: post\ntitle: 没拿到推荐免试研究生的资格\ncategories: 随笔\ntags: \n\n江南大学外国语学院英语和日语专业加起来有22个推免生额度，我最终排名29，无缘保研。\n保研的基本条件我是达到的，我排名年级前30%，但绩点、专四成绩和以前的综合测评成绩并不高。所以希望通过面试成绩争取一下。\n结果10分钟不到的面试没有发挥好，终于是打碎了我保研的小幻想。\n面试结束后，我便对冷淡的面试老师很不满。但回过头来想一下，他们也是为了公平。而且我实力不济，不能怨天尤人。此次申请推免，虽没成功，但起码为以后面试积累了经验。\n既然保研无望，那我们就考研吧。好好努力几个月，也比保研后安逸几个月更有成就感啊。当然结果得是能录取。\n以上。", "filename": "2016-09-21-did-not-get-the-recommended-graduate-qualification.md"}, {"id": 86, "text": "\ndate: 2016-10-17 22:08:50+08:00\nlayout: post\ntitle: 华米手表入手记\ncategories: 电子数码\ntags: \n\n就在前天，我去西操场跑步，结果把埃微i5s的本体给丢了。严重怀疑是掉进田径场的排水沟里了。。\n然而我已经习惯了可穿戴设备，用手环当手表，看步数，所以想再买过一个。但不能再买同样一个99元的手环吧。于是我转向了其它设备，买个智能手表吧。\n首先想到的就是华米手表，因为之前研究富士康的反射屏，也了解到了华米手表使用的jdi的全反射屏幕。可惜jdi目前商用的就这么1.3寸大小的手表屏幕。\n买手表呢，首先我得知道手表的功能，另外还得货比三家啊。于是又知道了更为智能，功能更多的ticwatch，这款国产手表应该说是国内最完善的智能手表，兼容Android Wear，自带麦克风和扬声器，有专门的ticwear系统，独家研发的语音识别技术和第三方应用商店。\n但我偏偏喜欢华米手表，不仅是因为便宜200元钱和使用的反射屏（ticwatch用的oled屏幕），还在于产品刚发布不久，我可以参与到产品不断完善的过程中去。\n然后讲一下手表吧：\n硬件：\n53g戴在手上不是很重，陶瓷表圈，红色表带，外观可以。运动手表的硬件都有了，全反射常亮屏是亮点。但没有麦克风和扬声器，只能用蓝牙耳机是缺憾（我没有蓝牙耳机。。）\n计步功能基本精准，我心中默数了100步，表上也显示走了100步。GPS功能暂未测试。\n软件：\n对iOS支持不完善，连导出步数到苹果健康的功能都没有。通知也不完善，漏通知或者n条通知只通知第一条。系统的智能程度也和ticwatch相差甚远。\n系统本身是基于安卓5.1的，可以使用adb调试，暂时不能root。可以知道使用的君正的MIPS架构的CPU，系统的二进制文件都是MIPS1指令集的，与龙芯2F相兼容。此外支持给手表安装安卓应用。实测B4A选择Android 4.4 Wear的SDK可以为华米手表开发应用，但会有所限制。\n目前就是這些。", "filename": "2016-10-17-huami-smartwatch.md"}, {"id": 87, "text": "\ndate: 2016-10-22 16:50:50+08:00\nlayout: post\ntitle: 安卓系统使用蓝牙耳机录音\ncategories: 技术随笔\ntags: Android\n\n买华米手表前看到ticwatch自带麦克可以录音，我便想让没有自带麦克的华米手表用蓝牙耳机的麦克来录音，这样我平时朗读文章录音时只要手表和耳机就可以了。\n首先华米手表的系统是完整的安卓5.1，这就给各种原本没有的功能提供了可能性。\n我使用b4a为华米手表开发蓝牙耳机录音程序，首先在普通安卓手机上测试，然后直接可以装到华米手表上。\n参考这两篇文章How to record by bluetooth mic?,Set audio path to BT device(Solved)，就可以利用audiostreamer录音了。\n要利用蓝牙耳机录音，得切换到SCO模式，并设置录音来源为系统默认（参数数值为0），如果要播放声音就得关闭SCO模式。录音的采样率，声道数，量化位数也会影响到能不能成功录音，一般要多试一些参数。\n然后我的蓝牙耳机是夏新A1（第一次用入耳式的耳机），测试录音质量不如手机麦克的好。最终在华米手表上的录音声调偏低，音量也偏小。但在手机上是没问题的，目前我也没有好的解决办法。\n程序我放在华米论坛上，见蓝牙耳机录音成功，放出测试版程序", "filename": "2016-10-22-android-record-via-bluetooth-mic.md"}, {"id": 88, "text": "\ndate: 2016-11-20 17:09:50+08:00\nlayout: post\ntitle: B4J加上Autoit的功能带来极好的Windows编程体验\ncategories: 技术随笔\ntags: B4J B4X\n\n我学的第一门编程语言是什么？答：Autoit。\n还记得是2008年时接触如番茄花园，深度等各种山寨Windows的时候。我知道了系统封装有使用AU3，小兵和自由天空都有使用。然后我就跟着Let's Autoit这本教程学。当时水平不高，但脚本语言能直接操作其它程序，可以编写各种整人软件倒是让我对编程增加了不少兴趣。\n现在我想给雪人CAT免费版写一个外挂，让它支持标准版才有的功能。因为我不懂解码他们使用的特殊文件格式，只有直接从运行中的窗体获得数据。\n本来只知道Autoit3是比较合适的语言。但因为现在看autoit3觉得风格比较复杂，不如b4x的basic语言简单。而且我要做复杂的图形界面，调用各种网络功能，autoit就显得不适合了。\n于是搜索b4j+autoit，意外地发现b4j支持调用autoit的autoitx.dll实现autoit的很多功能。毕竟b4j是处理成java的嘛，java有丰富的库，官方论坛有基于jacob和autoitx4java封装的jautoitx库。\n打开au3的窗口信息获取工具，然后在b4j强大的ide里编写程序。虽然这样b4j的跨平台特性就只限在Windows平台上了，但给了我专门的Windows编程的感觉。", "filename": "2016-11-20-B4J-plus-autoit-brings-excellent-windows-development-experience.md"}, {"id": 89, "text": "\ndate: 2016-11-25 21:45:50+08:00\nlayout: post\ntitle: 给雪人CAT开发了款外挂\ncategories: 技术随笔\ntags: B4J CAT B4X\n\n上一篇博文里已经讲到我选择了B4J加AutoitX库编写Windows程序。现在，我讲一下我给雪人CAT写外挂的事儿。\n首先，因为雪人CAT免费版不支持标准tmx或通用的csv纯文本格式的记忆库和术语库的导出，这就限制了与其它软件互相交换翻译记忆和术语库的能力。同时，也不方便以后的查看和分析。\n所以，我打算写外挂，直接从运行的窗体获得数据。\n自动操作一般通过快捷键或模拟点击来实现。如果程序有设置快捷键，最好还是使用快捷键来控制。毕竟点击是要算坐标的，这样的话，不同的界面下，坐标可能无法使用。比如我对雪人CAT术语导出csv功能的实现上，一开始是用的controlClick函数，但会出现对同一术语栏多次点击的问题，同时，由于术语较多的列表会有滚动条，这样界面就会很复杂。同时不用注入等手段，不能控制第三方程序窗口的大小（如果固定大小，就不用担心分辨率不同造成的困扰）。\n我花了一个下午实现了点击的方法，但不完美。我无意中发现可以用F2键激活术语栏的编辑状态，这样就可以和TAB键组合，通过纯快捷键的方法获取术语了。结果，十分钟就搞定了。\n所以有时候多花点时间摸索比蛮干能有效得多。\n再上点图，便于理解。\n这是术语的管理界面，一大块DataGrid并不能直接获得数据\n\n激活了术语的编辑模式，可以获得数据。\n", "filename": "2016-11-25-make-a-plugin-for-SCAT.md"}, {"id": 90, "text": "\ndate: 2016-12-07 21:26:50+08:00\nlayout: post\ntitle: 翻译练习和乐器演奏的练习\ncategories: 随笔\ntags: 翻译\n\n最近几个月里为准备考研增加了翻译的训练量，汉译英的原文字数有5000字以上。这点字数，可能都没有专业译员两天完成的字数多。但我的翻译主要是散文翻译，目的不是为了交稿，而是为了提高翻译的水平。散文的翻译不能以量为评判练习成果的标准，还得看完成的质量。\n翻译一篇文章，首先得对原文有足够深刻的认识。在翻译老舍的《济南的冬天》时，小学语文老师的讲解都会被依稀记起。但是一篇讲解过的文章，待要翻译成英文时，还是会发现对原文有认识不足的地方。\n理解了原文，然后再翻译成英文。这是又得考验我的英语写作表达能力。书到用时方恨少，学会英语的遣词造句，平时的积累很重要。\n我会想起小时学长笛时的情景。老师先是把乐曲整个吹一遍，让我对整个旋律有个了解，然后一句一句的让我练。等一句练熟了，再练下一句。最终做到把整个曲子吹下来。\n翻译也是一样。先要理解文章，然后通过不断练习得到双语转化的技能，并将这一技能与文章相结合。", "filename": "2016-12-07-exercises-are-all-the-same.md"}, {"id": 91, "text": "\ndate: 2016-12-25 20:52:50+08:00\nlayout: post\ntitle: 2017考研结束\ncategories: 随笔\ntags: \n\n6月份短学期时学校组织了一次合作翻译图书的项目，年级150个人翻译一本科普类的书籍，将书的内容拆分后派给每个班级，然后班长在老师带领下组织进行翻译。过程中我尝试使用了计算机辅助翻译软件OmegaT，并了解了北大软微的CAT专业。我对专业的培养方案、师资和就业方向稍微了解下后觉得应该还是靠谱的，毕竟是北大，于是就决心报考。感觉是很适合我的专业，科目是翻译和计算机，也比较容易考。\n暑假稍有懈怠，整天看《复仇者联盟》。自己也试着组装了一次电脑。考研考的计算机的书和有关计算机辅助翻译的书也都看了一遍。\n9月开学后忙着开学工作，综合测评，班干部换届，短学期奖品报销等各种事情。但中旬开始还是能保证每天看肖秀荣的精讲精练。然后买了反射屏显示器，在电脑上用CAT软件练习翻译，主要翻译的是张培基英译散文选。英语一买了华研英语的练习卷备着。手机装了口袋考研应用，先看英语一单词的部分。\n10月份继续看政治，做1000题。买了EXCELHOME的Word和Excel参考书。\n11月份政治第二轮过一遍。这时形式与政策的小本子出了，之后考点背诵和八套卷出来了也买来看。英语一做了几套，都比较轻松。装了墨墨背单词，这个软件例句丰富，利用了记忆曲线的原理，测试效果很好，每天用它背单词。\n12月份在每天看政治的同时抓了一下翻译和计算机。翻译买了很多的参考书。考前一个星期主要的时间都花在背诵肖四和考点背诵小本子的内容。\n期间每星期十二学时的课，每天坚持上，除了学专业知识，和老师同学的互动也能调整心态。\n正式考试的时候觉得考试进行得非常顺利，基本达到预期。\n我在我们学校一教1A501教室考试，监考老师都很亲切，两天过得很快。", "filename": "2016-12-25-KAO-YAN-JIE-SU.md"}, {"id": 92, "text": "\ndate: 2017-01-21 20:46:50+08:00\nlayout: post\ntitle: 新买了树莓派3B\ncategories: 技术随笔\ntags: 树莓派 \n\n最近使用B4J开发翻译自学与教学平台，心想将来服务器端也用B4J写会比较方便一点。但用B4J得用VPS，而不能用免费的PAAS平台。家里的电脑能耗50到60瓦，一年下来费用也会不少。于是便想到了树莓派，仅需3瓦的功耗就可以运行。\n选配了16GB的Class10速率microsd卡，dd命令装上Raspbian系统，把源换到中科大的。原本的locale和键盘布局都是英国的，用自带的图形配置工具改成中国的，时区改成上海。3.5mm音频口没有声言输出，使用raspi-config可以设置。自带中文字体，支持中文显示。再装上fcitx，中文环境就有了。如果想用纯命令行环境，可以参考这篇文章操作：让linux console支持中文显示和fcitx输入法\n测试的时候没有装什么散热设备，使用cat /sys/class/thermal/thermal_zone0/temp命令显示cpu温度，大概在30到45摄氏度，毕竟是冬天。\n树莓派3B的配置运行图形界面很流畅，上网打开多个标签完全没有问题。播放视频得用支持硬解的播放器。测试使用VLC播放时cpu百分之九十的占用，而mplayer只有十几。装上一个samba再接个硬盘就可以提供NAS服务。因为树莓派没有主板电池，每次断电后再启动会丢失时间，所以它自带了ntp服务，可能配置文件的服务器不可用。我一般直接用ntpdate连接ntp服务器设定时间。\n标配的是5V2.5A的电源，所以用2A的电源右上角会有闪电符号，估计是供电不足的意思。。", "filename": "2017-01-21-raspberrypi.md"}, {"id": 93, "text": "\ndate: 2017-01-23 14:38:50+08:00\nlayout: post\ntitle: 树莓派使用花生壳\ncategories: 技术随笔\ntags: 树莓派 \n\n最近两天折腾外网访问内网中树莓派。我并不打算让树莓派直接用作无线路由器，便打算利用TP-Link自带的花生壳动态域名解析服务，并打开DMZ主机功能让外网能访问树莓派。测试HTTP和VNC服务是可以使用的，但SSH和PPTP VPN不能使用，输完密码后就没反应了，不知道是不是花生壳的限制。\n于是再使用花生壳的内网穿透功能，照官网的说明下载安装并配置。发现提供的客户端除了内网穿透还自带DDNS动态域名解析功能，把路由器上的关了也可以使用。免费的内网穿透提供1GB/月的流量，设置好端口后即可。这样我通过ssh pi@动态域名 -p 随机端口就可以连接到内网中的树莓派了。\n此篇文章通过VNC连接树莓派写的，fcitx在vnc下不能使用，改使用ibus写的。", "filename": "2017-01-23-raspberrypi-and-phddns.md"}, {"id": 94, "text": "\ndate: 2017-02-27 16:15:50+08:00\nlayout: post\ntitle: 改装st4121的屏幕为显示器\ncategories: 电子数码\ntags: 护眼\n\n去年暑假买的st4121已经开不了机了，当时买来时就不太灵光，按电源键没反应。毕竟是03年的机子，买来的二手机不知道都经历了什么风风雨雨。但这块反射屏不想放着浪费了，于是买了驱动版改装。\n淘宝的乐华v29驱动板配上升压板和按键板。我对改装显示器还是新手，把接口照片一张张发给老板看。屏幕的接口是单6，14pin的。\n买来后接线如下：\n\n点亮屏幕后色彩不对，卖家教用遥控器进行初始设置。接下来就是可以正常使用了。\n背光关闭，在荧光灯下运行星际争霸图：\n\n驱动板支持调节亮度和对比度等，但灯管的亮度不能调节。\n\n之前购买的改装的反射屏的运行图，没有外面的保护玻璃显得比较清晰：\n\n不足：\n不足之处是因为我对电路板什么的不熟悉，DIY能力也不强。就比如st4121的屏幕被螺丝连接在外壳上，没有对应的螺丝刀竟还取不下来。\n1.目前元器件裸露在外面，没有外壳，移动和存放不方便。\n2.灯管可以亮，但不清楚如何实现调光。\n3.元器件裸露，不清楚辐射会不会比较强。", "filename": "2017-02-27-modify-st4121-to-monitor.md"}, {"id": 95, "text": "\ndate: 2017-02-27 13:01:50+08:00\nlayout: post\ntitle: 星际争霸2通关了\ncategories: 随笔\ntags: 游戏\n\n去年暑假买来富士通st4121后便想在这台搭载奔三处理器的老电脑上运行点那个时代的东西，于是便想到了星际争霸。我想过一遍战役。我下载了原版的星际争霸和母巢之战的光盘，开始享受那个时代的游戏带来的视听盛宴。\n没想到情节非常的引人入胜，即时战略加上科幻剧情，我感到我真正迷上了星际争霸。之前我也玩星际争霸，最早是看着哥哥玩，后来小学时下了精简版的，但纯粹是玩的即时战略部分。毕竟当时还小，英文单词都不认识几个，也是到如今，我才能真正无压力地过星际剧情。\n星际争霸1的基调是比较阴暗的，世界似乎将笼罩在凯莉根的虫群之下。据说几家游戏杂志都评凯莉根为最受欢迎的反派角色。但我对凯姐情有独钟，对她利用各种手段控制虫群，打击对手感到敬佩。\n星际争霸2的剧情是在母巢战争发生四年之后，我不由奇怪，凯莉根居然什么都没有做？ 自由之翼中，雷诺带着一帮特立独行的人反对蒙斯克的自治领。星际二每关前的场景及对话让玩家能更好地融入到角色之中。或许因为自由之翼是星际争霸2三部曲中的第一部，是人类部分的情节，也是我玩的第一部，我的印象格外深刻。游戏中的UNN新闻台起着控制舆论的作用，雷诺被描述为不得人心的叛乱分子，也是很搞笑。而星际的背景，星际争霸宇宙的设定在星际二中得到了更为鲜明的表现。\n雷诺救出凯莉根后，和爱人团聚，但又马上受到诺娃带来的自治领军队的袭击。雷诺被俘，蒙斯克声称将其处死。凯莉根便回到虫群，并再次成为刀锋女王。最终救出雷诺，杀死蒙斯克。虫群之心的剧情比较明朗，凯莉根的内心也得到进一步的展现。第一部的凯莉根是反派，而第二部她就开始了洗白之路。\n埃蒙重生，开始进犯各个行星，并通过星灵的神经束控制星灵。泽拉图为就阿坦尼斯牺牲，阿坦尼斯则率领Templar团结Nerazim，Purifier和Tal'darim等部的星灵成立统一的Daelaam，集结星灵的力量对抗埃蒙，将埃蒙赶回虚空。而凯莉根联系星灵和人类，一起前往虚空，彻底消灭埃蒙。最终凯莉根化为萨尔那加，在ZTP三族部队的帮助下打败埃蒙，也结束了无尽的轮回。两年后，在Mar Sara上的酒吧，雷诺回忆往事时，凯莉根出现，与雷诺一起离开。自此，虚空之遗的剧情结束，星际2三部曲完结。大团圆的结局似乎说明了暴雪将不再发布更新一版的星际。\n暗黑2的剧情很简单，但游戏性很强。魔兽的剧情太复杂，又注重微操和英雄的培养。而星际的剧情和游戏性都很出色。直到在打虚空之遗时，或许是剧情稍显枯燥，我对游戏操作的兴致才更浓。\n去年守望先锋上线，暴雪又捞到了一大批玩家。而即时战略游戏似乎风光不再，目前最火的还是Dota类的MOBA游戏。风暴英雄也是暴雪根据魔兽，暗黑和星际衍生出来的。守望先锋或许代表着暴雪新的方向，而星际也终将迎来一个时代的终结。\n我并没有亲身体会星际的辉煌，各种职业比赛，新的战术的发掘，网络论坛上各种交流，我向来也不是一个游戏迷，可能没有什么精辟的言论。但我和广大星际迷一样有着星际的情怀。\n外国的星际争霸wiki的标题中fandom这个词，似乎便反映了粉丝的力量。 ", "filename": "2017-02-27-starcraft.md"}, {"id": 96, "text": "\ndate: 2017-03-24 09:58:50+08:00\nlayout: post\ntitle: 考研，从决定到录取\ncategories: 随笔\ntags: \n\n今天早上收到了拟录取的邮件通知，想想从去年6月决定考研到现在3月份，总算是有了结果。备考的过程我在前文2017考研结束中已经讲过，便不再多说。下面讲讲我从初试到拟录取的经历。\n初试成绩在2月15号于北大官网公布，这次CAT报名77个人，弃考5个，我成绩390.5分，排名11位，参照去年的录取情况，录取的机会比较大。\n政治63分，之前对的客观题是38分，看来主观题只有25分，北京地区有压分。英语一75分，客观大概57分，结果后面40分的翻译和作文只得了18分，实在有点出乎意料。翻译130.5分，比预期的120多分要高，毕竟翻译都是考的人工智能，大数据等科技方面的内容，英国脱欧我也有了解，后面编译题内容是mac和surface的比较，更是我熟悉的话题。计算机基础122分，算是意料之中。题型全是主观问答题，且不能上机操作，总归有描述不清楚的或不记得的。问的内容有关多媒体、网络、Office、安全、硬件驱动等。一道编程题没答出来，因为我只想到枚举的算法，但题目中枚举的次数却是不确定的。\n等成绩的过程是煎熬的，因为能对答案的只有统考的客观题部分，主观题得几分则没有数。天天刷考研论坛，看到别人也和我一样，每天在给自己估分。\n等到2月底，出了复试分数线，CAT方向330分，40个人可以进复试，而复试录取比例一般是1:1.2。之后我又担心起专八（3月18日）和复试的时间会有冲突，忙给招生办和学院老师发邮件。最终通知下来确定是3月19日。但去北大本部领复试通知书是在16，17号，我便请在北京的海高学弟去领了，感谢。专八总算是可以安心准备了。\n专八考好后便乘高铁往北京，下高铁后找学弟拿了复试通知书，然后便前往大兴的宾馆。在天桥下公交时，我看着浑浊的天空，心想这空气质量实在不能和南方小城比。接下来又要挤公交车了，车内没有开窗，人又多，我已经乘了7个小时的车，站在车里委实难受。待到宾馆，已是晚上九点半了。\n第二天起来叫了辆专车前往学校复试。两项内容：听力和面试。听力和之前准备的托福题不一样，且音响效果不好，声音模糊，大致听懂讲什么，根据想象选题。之后一群人前往面试的地方，面试分两组同时进行。我是第4号，不错，我喜欢，不用等很久。面试总共五位老师，一位是高老师，另四位我并不认识，但见两位男老师年纪也不算很大，头发都白了。我先是一分钟英语自我介绍，我讲我来自江南大学，浙江人。报考CAT是因为喜欢计算机和语言。然后老师就接着问我计算机水平怎样，我说我会修电脑。老师便问是硬件还是软件问题，软件的话是不是直接重装系统，这很简单。我心里哈哈一笑，说是这样。他便问我会什么编程语言，我说BASIC、Python和C#，然后我具体讲了用C#开发江南听雨BBS WP客户端的经历。之后老师有问了我技术对语言有什么帮助。高老师问了我一些CAT和语料库的概念，我基本上都是清楚的，毕竟本科论文研究的这个。但高老师对我论文的题目似是觉得定的不好，我当时定题目为《基于语料库和CAT的翻译教学平台》的确有欠考虑，但我也清楚我研究的内容实际应用的意义还是有的。20分钟很快便过去，面试结束后我感觉很轻松，也比较自信。\n面试好了，我便想四处熟悉一下。北京城区太远，便在大兴逛逛。才发现大兴算是北京的郊区，我住的地方则是大兴的郊区，实在太过荒凉。我这人爱热闹，晚上便到大兴的市中心一逛。市中心当然还是有市中心的样子，果然比较繁华。我想软微虽然离北京市区远，但大兴市中心也足够了。就是大兴是北京的东南下风地带，空气污染却是要严重一点。市中心有个街心公园，空气仍然是灰蒙蒙的浑浊一片。\n第二天乘地铁4号线到陶然亭游览一下后便在北京南乘高铁回无锡了。这4号线直达北京大学本部，但人挤人的要乘一个小时，我想以后去本部恐怕不会次数太多。\n江南大学面积只怕有软微校区的十数倍，设施齐全，是个小社会。软微连个跑道也没有，空气也不如无锡的江大好，交通也不便，只怕初入学得多吃点苦。\n如今收到拟录取通知，我并不十分惊喜，毕竟按着是计划一步一步来，面试后我已然有了确凿的把握。\n20岁到30岁是人生迷茫的时期，对于未来，我仍有迷茫，但我想能做上自己喜欢的事，便是一次成功。", "filename": "2017-03-24-get-admitted.md"}, {"id": 97, "text": "\ndate: 2017-03-28 11:06:50+08:00\nlayout: post\ntitle: 斯坦福自然语言处理工具小试\ncategories: 技术随笔\ntags: NLP\n\nStanford Parser去年夏天就有试用，但感觉上手挺难，一来不懂自然语言处理，很多术语不了解。二来界面也不是很用户友好型的。所以没怎么用。\n此次写毕业论文却是想把它写进去，用于分析英语原文和汉语译文中被动语态的使用次数。\n介绍\nStanford NLP小组编写了一系列的NLP工具。整合在一起就是Stanford CoreNLP。它是一款自然语言处理套件，用Java写成，并在github上开源。\nStanford corenlp主要可以对句子进行标注，可以是词性标注（POS，Part-of-speech） 、句法分析（parsing）、依赖关系标注（Dependency Parsing）、命名实体识别（NER，Named Entity Recognition）等。\n而统计被动语态用到的就是依赖关系标注。在CoreNLP附带的StanfordDependenciesManual.pdf说明文件中可以了解各个标签的含义。比如反应被动语态的auxpass的说明如下：\n\nauxpass: passive auxiliary\nA passive auxiliary of a clause is a non-main verb of the clause which contains the passive information.\n\n具体用法\nCoreNLP可以以服务器模式运行，也可以当作命令行工具单独完成一次处理。提供java api，可供程序调用。服务器模式好处在于进程不用结束，这样加载过模型文件以后，再次使用不用花时间加载，但不能处理长文，会出现timeout的问题。CoreNLP对内存的需求较高，没个16GB内存可能出现内存不足的问题。\n以下介绍直接用java在命令行下运行的方法\n服务器模式运行：\n$ java -Xmx8g -cp \"*\" edu.stanford.nlp.pipeline.StanfordCoreNLPServer\n如果需要支持中文则这样：\n$ java -Xmx8g -cp \"*\" edu.stanford.nlp.pipeline.StanfordCoreNLPServer -serverProperties StanfordCoreNLP-chinese.properties\n处理英文文本，结果导出为文本格式：\n$ java -mx6g -cp \"*\" edu.stanford.nlp.pipeline.StanfordCoreNLP  -annotators tokenize,ssplit,parse -file en.txt -outputFormat text\n处理中文文本，结果导出为文本格式：\n$ java -mx6g -cp \"*\" edu.stanford.nlp.pipeline.StanfordCoreNLP  -annotators tokenize,ssplit,parse -props StanfordCoreNLP-chinese.properties -file zh.txt -outputFormat text\n另外，因为stanford corenlp很容易占用资源，特别是调用了耗费资源的annotator和处理大文件时。\n官网推荐的做法是不要处理大文件，而是使用分开的小文件。具体命令如下：\nls -1 para*.txt > all-files.txt\njava -cp \"*\" edu.stanford.nlp.pipeline.StanfordCoreNLP -filelist all-files.txt -outputFormat json\n具体的说明还是见官网和相关网站。\n相关链接：\n官网：The Stanford Natural Language Processing Group\nCoreNLP Github Pages: Stanford CoreNLP – a suite of core NLP tools", "filename": "2017-03-28-stanford-corenlp.md"}, {"id": 98, "text": "\ndate: 2017-04-03 15:05:50+08:00\nlayout: post\ntitle: 论文写作心得-格式与自动化工具使用篇\ncategories: 技术随笔\ntags: 论文\n\n最近论文的初稿算是完成了，我想来讲一下过程中关于格式和使用的自动化技术的问题。\n格式问题其实和自动化问题紧密关联，比如样式的设置影响题注和目录的生成。\n主要的自动化工具就是Microsoft Word了。我用的2013版的word。另外我还使用了Endnote来管理参考文献。EndNote可以嵌入Word，利用域代码插入引文标注，自动更新编号等数据。\n下面讲一下我碰到的几个主要的问题，顺便吐槽下我们外院的论文模板。\n1、标题的样式设置与图片题注\n学院的模板里，章节标题和下面第一级分节标题都是标题1的样式，再下一级是标题2样式，但章节标题的格式是后来重新改过的，把字号改大了。我后来将章节标题设置为标题样式，其实弄混了word里样式的概念。标题1到标题9一般用于长文件有分级标题的排版。而标题和副标题是一对的，主要用于小文件。其实是不影响最终效果的，目录也可以正常地根据设置标题样式的标题自动生成，但给图片添加题注时章节样式只有从标题1到标题9里选，没有标题样式，所以我最终还是改回了正确的做法，使用标题1-3的样式。\n\n一开始插入题注时提示错误如下：\n\n题注或页码中不含章节号，如果要应用章节号，请选择“开始”选项卡中的多级列表按钮，然后选择一种链接到标题样式的编号方案。\n\n2、多级列表与图片题注\n和上一个问题紧密关联，题注的生成需要文中有对应的列表。我一开始没有用列表，是手动标1.1.1这样的序号的（论文模板便是这样操作，另外题注也是手动编辑的），这样不能自动生成题注，而且手动标号显得不够自动化。这里要用开始选项卡-段落功能区里的多级列表的功能。点击定义新的多级列表后，可以将级别链接到样式。因为级别1是特殊的Chapter One/Two/Three...格式，所以级别2要勾选正规形式编号单选框，不然编号会是One.1.1这样的形式。\n\n3、页眉页脚的设置\n这个是比较基础的问题，我一开始不懂。利用页面布局选项卡下的分隔符-下一页功能可以进行分节。不同的分节可以设置不同的页眉页脚。此外还要注意链接到前一条页眉选项的勾选与否。\n4、段落格式、分页控制\n段落排版，比如两个段落的间距，首先应该使用段落格式进行设置，不推荐用换行操作。还有分页也是一样，有专门的分页符。但默认不显示分页符，可以通过设置显示所有格式标记显示。\n5、软回车的使用\n使用shift+enter进行软回车，区别于直接enter的硬回车。前者只是为了起到换行的视觉效果，而后者进行了分段操作。\n接下来再补充点自动化操作的心得：\n1、关于目录更新。可以在自定义目录里设置所需的样式，以后每次更新目录就不需要更改样式了。而外院论文说明里说还要自己“微调”。\n2、引文标注与参考文献管理。 引文标注和图表题注一样，最好是自动管理的，不然前面的序号变了，后面的序号就都要变。这里我使用了endnote x7文献管理工具结合修改过了国标GB 7713-2005参考文献标准的样式文件（此处下载）。但该样式文件支持的格式有限，和学院论文规范里讲的格式也有出入，我又有给它进行了一点修改。\n\n\n除此之外，我们专业的论文还要求在中文文献作者姓名之前加上拼音，并把中文名用[]框起来，但这个endnote我想就不能做到了。不过这也不是很难的事情，用python和xpinyin库很容易可以处理完成。之后将处理好的纯文本参考文献内容替换endnote生成的参考文献即可。\n\n理工科的同学有很多是用latex进行论文排版的，但我还没用过，毕竟word的功能也很强大，而且学院也只提供word模板，先把word用好吧。", "filename": "2017-04-03-bachelor-degree-paper-notes-office-automation.md"}, {"id": 99, "text": "\ndate: 2017-04-15 20:50:50+08:00\nlayout: post\ntitle: 英语专业女主角的电视剧？\ncategories: 随笔\ntags: \n\n清明节时跟着我妈看起了海宁台在放的《遇见王沥川》，最初先听到有外国人说中文，还有布置翻译任务，便开始看了起来。本来以为海宁台播的是没什么人气的地方台专属电视剧，不想后来发现还是挺火的良心剧。女主角谢小秋便是我们英语专业的学生，设定应该是云南个旧高考状元，到上海外国语学院读书，并保研本校。我这里并不想多提剧情，因为前期很童话，后面就很伤感了。\n故事的时间大概是2009年，可以从电子产品窥见一二。比如商场在卖2万元的方屏Thinkpad X系列，小秋后来用的苹果小白Mac笔记本。开始时智能手机还不普及，而在4年后小秋买了一台iPhone。另外主角们还在用纸质词典。\n女主角立志成为一名职业翻译，加上家庭贫困，在大三就找翻译公司兼职。因为兼职认识了两位男主角，一位是翻译社社长萧观，也是小秋的学长，一位是翻译社提供翻译服务的公司的CEO王沥川。王沥川是瑞士华裔，中文口语可以，但汉字认识900多个，对成语、古诗词更是知之甚少，于是小秋为他翻译主要是用英语来解释他不懂的中文。在后来温州的竞标中，小秋就为王沥川翻译了谢灵运的诗，并为最终的设计提供了灵感。古诗词翻译可不是一件容易的事，而且我一直也觉得没什么好翻译的，一来难翻，二来外国人真会去看吗？这件事肯定是有意义的，它是对古诗词的一种解释，能帮助传播中华文化。\n小秋在GMF建筑设计公司工作，因此需要了解建筑用的语言，如果突然换翻译，不熟悉建筑术语，一来翻得慢，二来还会有差错。所以在小秋去温州时说要离开，张总会挽留小秋。\n萧观在剧中有给客户报过翻译的价格，笔译50000字内是每千字160，英语口译一天是1200元，老客户有优惠。翻译公司毕竟是服务行业，客户很重要。但是翻译的利润低，于是他又去搞广告。\n电视剧中，主角翻译的身份使得情节能够发展，但剧情并不是围绕具体的翻译展开的。就比如温州竞标剧院设计，都是设计为主，翻译为辅。而且这部剧是言情剧，主要讲的是男女主角的爱恋。综合说来，我们学翻译便也应该明确翻译往往是属于次要的辅助地位，得根据主体的需求来，而有时，也可以对主体产生很大的影响。", "filename": "2017-04-15-what-is-an-English-major-protagonist-tv-drama-like.md"}, {"id": 100, "text": "\ndate: 2017-05-12 21:53:50+08:00\nlayout: post\ntitle: 我的公众讲话之道\ncategories: 随笔\ntags: \n\n前几天参加考研表彰会，给大二大三的同学做了13分钟的考研经验分享。回想下我虽然内向，但对于在台前讲话或是表演的事却是一点也不怯，反而是十分渴望。同学们貌似也对我的讲话表示认可，那我就总结下我在做公众讲话时会注意的事吧。\n1、 明确主题、合作者、受众和场合。比如说升学分享会，我会问安排的同学都安排谁跟我一起，经验分享的对象是谁。得知和那几位保研、留学的一起分享，而我是单独讲英语专业考研的，那我应该着重讲考研。面向的对象是大二大三的同学，那我应该想到他们需要的是怎样的信息，当前的情况是怎样的。同时，我会想怎么和他们进行互动。比如我提到了他们目前不必着急、和我讲的内容有关的大二同学大创项目、可能会问的问题等。\n2、 根据场合和内容选择是严肃还是幽默。很明显，如果有领导在场，我就不敢太幽默。如果讲的内容非常学术，那么应该严肃。要让观众安静地聆听，并搞懂讲的内容。在分享会的时候，都是同学在场，我上场之前气氛比较沉闷，我便选择了幽默的形式。我非常喜欢说笑话，同学们评论我是自带笑点，基本上每次准备讲话的时候我都会想怎么把大家逗笑。当然，不是让大家笑了，讲话就是成功了的。\n3、 认真的准备。分享会之前，我认真地做了ppt，并且演练过几遍并计时。因为要求是5到8分钟，就像TED限制15分钟一样。但我想讲多一点，最后大概是要13分钟。\n4、 观众喜欢听故事。乔布斯在斯坦福的演讲讲了三个故事。在《乔布斯传》中有提到，一开始的演讲稿并不是这样的，后来有人建议乔布斯讲故事，因为人们喜欢听故事而不会厌倦。所以如果能以故事的形式讲那是很好的。分享会时我现身说法，讲了自己考研的故事。\n5、 聆听其它人的讲话。分享会时我尽量认真听完别人的讲话，并在自己的讲话中提到别人。既是对他人的尊重和认可，也使得自己的讲话显得和别人的讲话互相支持。", "filename": "2017-05-12-the-zen-of-public-speaking.md"}, {"id": 101, "text": "\ndate: 2017-05-26 14:22:50+08:00\nlayout: post\ntitle: 大四\ncategories: 随笔\ntags: \n\n老师让我介绍下个人事迹，我想了下，大学四年发生的事情太多了，都写出来的话都可以出书了。所以简单写下吧。\n标题来自某位同学微博的个人简介，简单的两个字却似乎包含了无穷的信息。仅凭这两个字就可以猜测目前都在干什么。作为过来人的同专业学长学姐看学弟学妹更是如此，培养方案一样，生活学习环境也一样，知道他们在某一阶段会做什么事情。\n大四的同学可以分成两类：升学的、找工作的。升学方面。保研录取的结果在9、10月份就确定了，这些同学的生活会比较放松。留学的同学要准备各种资料进行申请，而决定考研的同学要踏上半年的考研之路。就业则要抓住秋招的时机。也有同学参加公务员考试。当然，升学就业的各种方向都是可以尝试的。\n因为大四课程少，留给我们的自由时间会更多，这对自制力强有计划的同学来说是好事。相反，时间往往会被浪费。大一到大三时我是略带被动地学习专业课程，而大四上时，除了专业课，我需要自学考研的相关知识，主动性会加强很多。毕业论文的写作也是如此，需要自己大量地去阅读文献，发现并解决问题。大四下的专八考试，如果平时有认真积累的话，良好甚至优秀是水到渠成的事情。专八考试不像考专四时有老师指导，但反而觉得轻松，因为大学不仅教给我们知识，还让我们学会自主学习。\n学语言属于通识教育，可以通过与各个领域的内容结合来发展兴趣。而升学的话专业方向会细分，就业也对职业技能提出要求，所以选择很重要。我考研选择了热爱的计算机与语言相结合的计算机辅助翻译，因为爱好而积累了较好的知识基础，学习的动力也会比较大，所以最后顺利考上了。其实很多时候工作了才会意识到自己欠缺什么，比如《欢乐颂2》里决定考工商管理硕士的曲筱绡。所以有比较明确的职业规划也可以帮助自己就直接就业还是升学做出选择。\n最后还有一个月的在校时间，希望所有大四同学快乐毕业。Feel passion about everyday life.", "filename": "2017-05-26-senior-student.md"}, {"id": 102, "text": "\ndate: 2017-06-27 18:27:50+08:00\nlayout: post\ntitle: 六月\ncategories: 随笔\ntags: \n\n明天就要离开学校了。整个六月到了尾声了。\n6月11号答辩结束，6月12号拍班级毕业照，24号毕业典礼，班级吃完散伙饭后也就真的各奔东西了。\n毕业季，我主要做的事情就是和人打交道，答辩拍照聚餐。其实我平时独处较多，一下子这么频繁与人互动觉得也挺辛苦，而且作为班长更加要活跃一点，同时也要考虑到班级每位同学的情况。\n我要主动约同学拍照，也有很多人来找我合影。江大的海高同学也合了影，但一位同学因为去英国学习都没能参加毕业典礼，总归有点遗憾。大学四年里，和高中同学的互动其实也并不多。和班级同学拍了800多张照片，和高中两位同学只拍了一张。话说这一张还真显出珍贵性来了。\n这平时都是隔着屏幕交流，见一面真是感觉胜过发千条信息。\n我大四以来其实一直都在出风头，上了考研分享会，做了公开答辩，在网络上也比较活跃，感觉自己年级和低年级的同学都认识我了。但其实一直是有压力的，毕竟我做事认真，对自己要求高，就比如考研分享会，我得提前一个星期开始准备。另外各种同学也会来问我问题，特别是电脑问题。其实我好久没有认真学习计算机技术了，实际水平也一般，但在英语专业学生中的确比较突出。\n六月，毕业了", "filename": "2017-06-27-June.md"}, {"id": 103, "text": "\ndate: 2017-07-15 18:27:50+08:00\nlayout: post\ntitle: 在Azure上建立Bottle Python应用\ncategories: 技术随笔\ntags: 云\n\n大概两年前开通的Dreamspark版Azure，那时还是淘宝找香港用户接受短信才开通的，可以建立免费的应用服务(App service)。现在把建立的过程记录一下。\n1、进入portal.azure.com网页管理azure。\n2、搜索Bottle或点击左侧边栏应用服务，可以在Web app frameworks里找到bottle。点击创建。\n\n3、接下来要建立资源组和应用服务计划。网上的介绍如下。。可以选择服务的位置\n\n资源组是共享相同生命周期、权限和策略的资源的集合。应用服务计划是你的应用的容器。应用服务计划设置将确定与你的应用关联的位置、功能、成本和计算资源。\n\n\n4、接下来我想从本地git仓库进行部署。要在应用服务设置的部署选项里设置。具体见该网站Local Git Deployment to Azure App Service。会需要设置部署凭据。\n5、设置好后回到概览，就可以见到git部署地址了。将仓库克隆到本地后可以现在本地测试，然后再push到azure上。\n以上。\nazure官网还有更多的文档，默认的Python Web App是基于Flask的：Create a Python web app in Azure\n2020-02-20更新\n安装第三方的类库比较麻烦，一种较为简单的方法是使用kudo在线终端用pip安装，参见：how to upgrade pip in microsoft azure\n折腾这类受限环境真是比较麻烦的事情。", "filename": "2017-07-15-python-bottle-web-app-on-azure.md"}, {"id": 104, "text": "\ndate: 2017-07-18 16:07:50+08:00\nlayout: post\ntitle: 折腾Thinkpad X61\ncategories: 电子数码\ntags: \n\n研究护眼设备时了解了X61可以改装全反射屏，因为也是CCFL背光，使用高压板，盖子比较厚。最近没事就购入一台二手x61。测试虽然屏幕使用的CCFL背光，但的确不如全反射屏舒适。\n收货前我收集了x61相关的资料和文件，预想是装上4系统，xp、win7、linux还有mac os x snow leopard，把系统也事先下好。\nWindows系统兼容性很好，很容易安装就不多提了。我到bios之家下载了破解白名单、带slic2.1的bios，win7就oem激活了。然后换上ar5418无线网卡，打算给黑苹果用。但原装无线网卡的螺丝没有合适型号的螺丝刀，我就没有给它拆掉。看到边上的minipcie槽空的，我就装在那里，结果没有识别。另外原装的无线网卡发热量很大。以后再看吧，先用usb无线网卡。\n接下来安装黑苹果，因为x61的显卡是x3100，和初代macbook air一样，没有官方的64位驱动，所以最高版本的osx是lion，反正都是过时的系统，不如装支持rosetta的雪豹系统。\n直接使用了网上现成的dsdt、kext和smbios，最初用bootthink引导安装成功，但装了win7系统后不好使了，便转用变色龙。折腾黑苹果其实是难度挺大的事情，有时候还要做很多逆向工程，好在x61已经有了很多现成的成果了。参考文章如下：Thinkpad X61 安装 Mac Snow Leopard  X61调节屏幕亮度, 线性调节! 测试可用!  \n当然我在使用这些成果的同时也要结合自己的情况，比如一些版本说要替换一些kext，否则五国，但我用新版的雪豹不用做什么替换就可以了。而完美的亮度调节需要对显卡驱动进行hex。\n我的x61配置如下：\nIntel Core Duo T7500的CPU, 3GB DDR2双通道内存，120GB的富士SATA1硬盘。\n比我小时候用的三星R20的配置（t2250，512mb ram, ati xpress 1250）要高不少 ，运行的流畅度还是可以接受的。\n目前x61的tn屏看着的确没有反射屏舒服，以后再看看能不能换吧。", "filename": "2017-07-18-thinkpad-x61.md"}, {"id": 105, "text": "\ndate: 2017-07-20 15:44:50+08:00\nlayout: post\ntitle: 也谈文学批评\ncategories: 随笔\ntags: \n\n文学批评这词，应该是翻译自英文的literary criticism。维基百科的解释如下：\n\nliterary criticism is the interpretation and evaluation of literature.\n\n张培基散文翻译选里有季羡林的《文学批评无用论》一文，当时我觉得非常赞同。我当时在上英语小说鉴赏课，整天了解和分析文学作品，然后做出自己的解释。但是一千个人有一千个哈姆雷特，我们想的是作者想到的吗？文学批评其实真没什么用。\n但我最近看到j城废人的一篇文章却感到了不同，这是一篇日本艾薇的评论。其实相对于小说，对电影的评论更加能引起人的共鸣。因为小说的文字是非常详细的，而电影则完全通过画面呈现，需要观众自己去发现。更何况是艾薇，有多少人看艾薇是不快进的呢？有多少人会跳过开头的铺垫呢?\n的确，成人影片需要兼顾剧情和刺激，如果有太多剧情就难免乏（ruan）味（le）。艾薇太敏感，我就不多提了。\n如前面的英文的解释所讲，文学评论是对文学作品的解释和评价。读者可以对情节、手法等进行分析，衍生，讲出自己的理解。很多时候，人们希望看到和自己理解类似的评论。比如我看艾薇就喜欢剧情戏多一点，不喜欢纯肉搏戏，所以看到别人在一本正经的分析艾薇拍摄的技巧、类型、新意、套路、背景等时，我有了遇到知己前辈的感觉。\n现在社会，人们不管是买东西还是去哪里吃饭、看什么电影或多或少都是要参考别人的评论的。一部作品、一件产品能不能成功和评论有很大的关系，所以网上会出现不少专门聘请的水军。想想我看eva、星际牛仔时，大家都称它为神作。而我在看百度百科里对与eva的剧情描写时，便确定了eva的确是一部神作。\n所以文学批评对人的影响是很大的，我们需要好的文学评论来引导人们接受积极的事物，做出正确的决定。但对于作者，我认为不能为了讨好读者而刻意去改变自己的想法。吸引读者是需要的，但目前如标题党这样的现象则令人不适。在这个互联网的时代里，似乎每个人都觉得自己有机会出名，利用互联网赚钱，但成功者毕竟少数，还是坚持做好自己吧。比如我现在，写自己的博客，不用考虑什么公众号的访问量。", "filename": "2017-07-20-on-literary-criticism.md"}, {"id": 106, "text": "\ndate: 2017-07-25 15:55:50+08:00\nlayout: post\ntitle: 给x61换反射屏\ncategories: 电子数码\ntags: \n\n继续折腾x61，这次把富士通st4121的反射屏换了上去。\n主要的技术问题有以下几点：\n1、反射屏只有10.4寸，而x61是12寸，需要有挡板补充多余的空间。\n2、x61的lvds屏线和反射屏的单6，14pin的接口不符合，需要做转接线。\n3、因为反射屏使用ccfl背光，需要升压板，即需要配备ccfl背光的笔记本，所以只有x61这样老机器支持。当然，把反射屏的ccfl灯管换成led就没问题了，新机器也可以改装反射屏，但也要考虑屏幕尺寸和厚度。\n因为我不知道怎么改装屏线，挡板什么的也不会做，所以直接买了闲鱼上卖家提供的改装套件。将b壳拆开，取出旧的屏幕，接上转接线、灯管延长线，套上挡板，然后盖上b壳就可以了。\n存在的问题：\n1、挡板比较厚，有1mm，盖上盖子比较紧。\n2、背光通过系统调节。只有黑苹果能完全关闭背光。当然这个应该也可以在linux和windows上进行设置，但不清楚怎么做。另外我买的屏幕比较旧，背光不够亮，估计要换灯管了。\n3、买的套件使用玻璃膜保护屏幕，但反光且影响透光率，我便弃用了。这样反射屏会容易弄脏，目前已有黑印和水印存在了。", "filename": "2017-07-25-reflective-screen-on-thinkad-x61.md"}, {"id": 107, "text": "\ndate: 2017-07-26 15:56:50+08:00\nlayout: post\ntitle: 在苹果雪豹系统上运行macports\ncategories: 技术随笔\ntags: \n\n因为x61运行比较完美的黑苹果版本是雪豹，我又想使用git等工具，便想使用homebrew之类的macos上的包管理工具。比较了fink、homebrew和macpors后觉得还是macports适合过时了的雪豹系统，因为据说对系统的依赖性较小。\n安装MacPorts：\n1、因为官网为雪豹提供的pkg文件安装失败，我选择用源码编译安装。\n2、雪豹安装macports需要先安装xcode3.2，提供必要的编译工具。\n3、下载源码安装。\n配置Macports：\n一、设置源\n中科大有提供macports的源，国内的总归速度快一点，果断换上。我网上搜索到的配置方法都已经过时了。最后还是直接照着配置文件修改成功的。\n1、修改/opt/local/etc/macports/sources.conf，在末尾添加如下内容：\nrsync://rsync.mirrors.ustc.edu.cn/macports/release/tarballs/ports.tar [default]\n2、修改/opt/local/etc/macports/macports.conf，设置rsync_server为rsync.mirrors.ustc.edu.cn，rsync_dir保持原来的设置不变。\n3、运行sudo port -v selfupdate进行更新。\n二、其它\n其它配置不多讲了，我还没接触到。基本上/opt/local/etc/macports/macports.conf里包括了大部分设置。比如选择软件的架构。雪豹默认设置的架构是纯64位程序。我是以32位内核模式运行的雪豹，发现也可以运行64位程序。\n遇到的问题\n装个git什么的还是轻松愉快的，但是我在装gimp时却遇到了问题。问题出在编译依赖的ffmpeg时，提示ERROR: vda requested, but not all dependencies are satisfied: vda_framework pthreads。我便在网上搜索，搜到唯一一篇帖子如下：ffmpeg-devel @20170615_0 does not build on Mac OS X 10.6.8, Snow Leopard, because of missing vda_framework pthreads，里面提到了什么macports对雪豹的支持有限，可以通过编辑配置文件切换编译器来解决问题。\n于是我就去装gcc4.9，但是发现被加入blacklist，还是用的默认的xcode装的gcc版本。我还尝试使用clang，也失败了。设置osx默认的gcc版本可以sudo port install gcc_select，然后通过port select --list gcc和select --set gcc llvm-gcc42两个命令设置。clang也是一样。\n最后我还是修改ffmpeg的Portfile来编译通过的，还好文件里注释写得很清楚。vda是video hardware acceleration的意思，可以不启用。。注释掉启用的部分后就可以编译通过了。\n另外，装macports本来想装openjdk8的，但看官网显示最低系统要求是10.7.3，雪豹上能运行，但不保证不出问题。之前运行omegat mac版时就遇到了包自带的java1.8启动失败，用系统的java1.6启动成功的事情。看来雪豹系统还真是老了。\n还有macports相当于在osx下再搞了一个小的posix系统，要占用不少空间，我只给mac分配了25gb，空间容易紧张。\n折腾这类类unix系统真是要花费不少时间。", "filename": "2017-07-26-macports-on-snow-leopard.md"}, {"id": 108, "text": "\ndate: 2017-07-30 21:06:50+08:00\nlayout: post\ntitle: 记一次清灰经历\ncategories: 电子数码\ntags: \n\n最近对二手x61进行了多次拆解，加上网上看了不少教程，可以说有了一定的拆机经验。我觉得只要我有拆机工具，那基本上拆开来是没什么问题的，不过装回去能否点亮的确不敢保证。\n我的惠普1000-1306tx已经用了4年，没有清过灰，开机几分钟后风扇转速就飙到最高，发出尖锐的声音，上学时一直用的侧吸抽风机。现在我对拆笔记本有了了解，所以胆子大了不少，决定对老笔记本进行清灰。\n其实笔记本拆机还是有基本的过程的：首先，笔记本从上往下有4个面，分别叫做ABCD面，外壳的话也按此叫做ABCD壳。清灰的话基本屏幕不动，A面和B面不涉及。我们要做的就是先把底部D面的螺丝卸下，把硬盘、内存、无线网卡和光驱等能卸下的部件卸下。然后翻到C面卸键盘。键盘和D壳一般有螺丝连接，螺丝卸下后键盘可以很方便的卸下。接下来就可以把B壳卸下，主要是要把卡扣撬开，注意不要漏卸螺丝之后硬掰。B壳卸下后可以看到主板了，这时再把主板上的各种连接线、排线和螺丝卸下后与主板分离。这就完成了拆解工作。\n了解了以上的过程，然后再根据实际机型具体分析，比如哪里哪里有螺丝、排线要卸。第一次卸总归要用一定的探索。比较麻烦的一点是有些螺丝型号不同，得记住哪里用什么型号的螺丝。当然特殊螺丝有些主板上是有标注的，而且螺丝的种类其实也就三四种。\n清灰完成后再装回去，可以先别急着装螺丝，先看看能不能点亮机器。我装好后发现开机屏幕不亮，大写键闪3下，以为屏线没有接好，结果网上查一下是内存问题。还好，如果是主板问题就比较麻烦了。看到屏幕亮之前都心惊胆战的。\n还有拆机工具，主要用的是十字螺丝刀，买网上的31in1的套件基本上都有了。ph000的十字螺丝是最细的，足够应对很对细小的螺丝。如果螺丝拧花了，可以换用尺寸大一点的。拧螺丝时一定要先用力顶着，不然接触面不够会拧花。", "filename": "2017-07-30-clean-my-laptop.md"}, {"id": 109, "text": "\ndate: 2017-07-31 10:07:50+08:00\nlayout: post\ntitle: 下载并合并f4f文件\ncategories: 技术随笔\ntags: \n\n提取网上的视频，我一般用硕鼠、官方客户端等软件，实在没有别的办法就用浏览器的调试工具获得视频地址。但现在网站的在线视频都会将视频文件分为一段段的小文件，便于加载，也可以防止下载视频。\n使用iPhone浏览视频，往往就会打开一个m3u8的文件，这是苹果的技术。而我这次要提取海宁大潮网上的一段视频：［一起回娘家~袁花116名出嫁姑娘与进门媳妇共叙乡情。\n使用浏览器调试工具，可以看到它有下载一个f4m文件和分段的视频文件。\n```\nhttp://vfile.haining.tv/2017/1493/9849/0498/149398490498.ssm/manifest.f4m\nhttp://vfile.haining.tv/2017/1493/9849/0498/149398490498.ssm/149398490498-audio=44000-video=509000-Seg1-Frag1.mp4\n......\nhttp://vfile.haining.tv/2017/1493/9849/0498/149398490498.ssm/149398490498-audio=44000-video=509000-Seg1-Frag14.mp4\n```\n根据f4m文件，我们可以知道是采用了adobe 的hds技术，视频的扩展名虽然是mp4，但其实不是mp4文件，而是f4f文件。我们可以使用php脚本进行合并。\n地址见此：https://github.com/K-S-V/Scripts/wiki\n将mp4文件批量下载后重命名为f4f文件，再运行如下命令即可。\nphp AdobeHDS.php --fragments 509000-Seg1-Frag\n更简单的是根据f4m文件下载：\nphp AdobeHDS.php --manifest \"http://vfile.haining.tv/2017/1493/9849/0498/149398490498.ssm/manifest.f4m\" --delete", "filename": "2017-07-31-download-and-combine-f4f-files.md"}, {"id": 110, "text": "\ndate: 2017-08-04 12:38:50+08:00\nlayout: post\ntitle: x62-4198号装机作业附黑苹果经验\ncategories: 技术随笔\ntags: \n\n前几个星期买的二手x61的主板坏了，开机警报鸣叫一次4声，总共4次，网上搜是安全芯片坏了，不会修。x61换了全反射屏，用起来也比较舒服，就是x61的性能跟不上了，而这次直接主板坏了，于是决定换x62主板。\n我买的是第四批的i5 es主板，比较完善了，直接装上就可以了。以下是我装好的主板：\n\n这台x62测试可以较完美的黑苹果。\n具体步骤：\n1、在mac下使用UniBeast制作macos Sierra的安装u盘。\n2、x62磁盘先装上了Win10，UEFI+GPT模式，win10安装程序会自动进行SSD的4K对齐，建立一个空分区用于装macos。\n3、启动u盘上的安装系统，用磁盘工具格式化之前的磁盘为hfs。如果出错则进终端用newfs_hfs命令创建。将系统安装到该磁盘。\n4、我又建立了一个fat32分区用于存放clover的EFI文件。进BIOS可以设置默认启动Clover。\n5、成功进入系统，但是显卡没有驱动。参照该帖Sierra10.12===HD5500驱动教程！驱动成功。调节亮度x62应该是EC调节的，不用显卡驱动也可以调节，没有小太阳。\n6、继续解决声卡问题，alc662的仿冒驱动没成功，参照该帖:关于VoodooHDA完美修改，轻松制作属于自己的完美声卡。,使用voodooHDA解决，效果比较好，扬声器和耳机、麦克都能用，就是没有hdmi音频。\n7、免驱的无线网卡还没运到，暂时用360wifi2 做usb无线网卡上网。\n8、电池电量，修改dsdt后可以显示，但新的sierra系统下，活动监视器切换到能源时会崩溃。还有x62的主板貌似不能显示电池剩余时间，windows还是macos下都不行。参考的是该帖DSDT之BAT修改 for AppleACPIBatteryManager.kext\n其它还有些睡眠唤醒黑屏、重启黑屏等问题暂时没有去解决。\n", "filename": "2017-08-04-macos-on-x62.md"}, {"id": 111, "text": "\ndate: 2017-08-12 21:02:50+08:00\nlayout: post\ntitle: 联想幸福Linux安装小记\ncategories: 电子数码\ntags: \n\n\n最近整理联想天鹤640P老电脑的随机光盘，安装了幸福之家v3.23生活版并录制视频传到了b站上。\n在网上也看到了联想幸福Linux，以前看这篇文章那些曾经的Linux发行版（三）：Happy Linux了解过，当时没有镜像觉得挺可惜的。这次发现原来有镜像提供下载，是幸福Linux1.0版，于是打算装虚拟机上体验。\n2000年时的系统，基本的Linux软件都有，当然版本比较低，比如python是1.5，kde是1.12，linux内核是2.2的。和著名的蓝点Linux是同一个时期的。Vmware上没启动起来，后来改用Virtual PC安装。VPC只有Win7以下系统能运行，我还得win10下开个xp虚拟机跑幸福Linux。\nVPC上装得比较顺利，但也有两个问题，一个是声卡，得用sndconfig选择Sound Blaster 16并手动设置参数，这里参考了虚拟机VPC装红旗linux4.1声卡问题之解决。还有一个问题就是只有VGA分辨率，8位色，重新运行Xconfigurator后选择一个合适的monitor后可以解决。\n幸福linux有两张光盘，一张系统盘，一张软件盘。通过阅读附带的使用手册可以知道幸福之家场景软件要用软件盘安装。\n装好后就可以体验Linux上的幸福之家了。测试发现该场景软件场景移动只是一张张图片的切换，不像Windows版那样是可以自由移动缩放的。还有，虽然联想给Linux开发了不少附带的游戏和应用，对比Windows版的软件质量要低得多。可以看得出，Linux版的幸福之家是对Windows版幸福之家v3.2的低质量克隆。\n回想一下20世纪初，计算机其实并不十分依赖互联网，基本都是脱机运行。用户大多也就运行下系统自带的软件，所以幸福linux还是可以满足用户的需求的。但是相比于Windows98和幸福之家的组合，则要逊色不少。\n幸福linux的中文化还是做得很好的，联想作为一家电脑公司，那个时候也还是很重视软件的。后来联想的随机软件却被称为bloatware，给用户的印象就都是负面的了。", "filename": "2017-08-12-happy-linux.md"}, {"id": 112, "text": "\ndate: 2017-08-23 14:26:50+08:00\nlayout: post\ntitle: 挑选一台适合自己的笔记本电脑\ncategories: 电子数码\ntags: \n\n讲笔记本的挑选的文章在网上有很多，我这里主要是结合自己的需求来讲。\n挑笔记本，我主要有如下要求：\n一、屏幕好\n屏幕作为计算机显示的窗口，是很重要的部分。好的屏幕有几点特性：\n1、无频闪。频闪主要是由于使用了PWM调光。亮度高时还好，亮度低时屏幕会闪烁。macbook等高端笔记本都采用了高频PWM调光，基本上没有什么影响，但低端本的闪烁会很明显。闪烁一般可用手机摄像头对着屏幕来发现。除了PWM调光还有直流DC调光，但会出现画面亮度不均的问题。\n2、低蓝光。09年前的笔记本都采用CCFL背光，后来都采用了LED背光。LED背光其实是先进的技术，但蓝光的比例会比较大。所以有很多人仍然喜爱CCFL背光的显示器。\n3、好的面板。一般的笔记本采用了TN面板，而高端的笔记本用的IPS面板。TN屏的可视角度小单反应速度较快，所以很多电竞显示器还是用的TN面板。我个人不喜欢TN面板，换个角度偏色严重。\n4、其它。其它的参数比如尺寸、分辨率、色域、最大亮度等，前两者根据自己需要，后两者越高越好。\n我对护眼有追求，主要做的是长时间的文字工作，所以选择了自己在笔记本电脑上改上富士通全反射屏，利用背景光，无频闪，低蓝光，可视角度也大。可惜的是尺寸和分辨率有限，只有10.4寸和1024x768。\n二、配置足够\n主流配置，足够完成日常工作即可。我的X62采用了五代i5，hd5500核显，8GB内存和128GB SDD+500GB HDD的配置，足够我日常上网，写文档和玩一般游戏的要求。同时笔记本的散热也很好。X62主板配备双铜管散热，风扇基本上没有声音，温度在室温30度时也能保持在40度左右。另外主板接口最好要丰富，读卡器，HDMI、DP、USB3、RJ45网卡口。还要扩展性好，有minipcie，msata等接口。摄像头、麦克风和喇叭能用就行，效果好是加分。DVD刻录光驱没有也行，可以用USB光驱。\n三、设计、手感、续航与便携性\n超极本一般都追求极致轻薄，商务本讲求兼顾便携和性能，游戏本追求性能，这在配置和外观设计上都会反应出来。\n有人追求键盘手感，喜欢老thinkpad的7行键盘设计和长键程。经常带笔记本出去的电工可能要一台抗摔的笔记本，那么松下笔记本可能更加适合他。有人喜欢带着笔记本在咖啡店、图书馆泡一点，那么对续航的要求会比较高，一般能间断运行12小时以上。\n这方面笔记本的差异会比较大，各机型会有各自的特点，可以满足不同人群的需求。\n我对外观没有太大要求，喜欢怀旧，笔记本主要放在寝室运行，对续航要求不高（2小时还是得有）。但往返学校和家时希望笔记本轻一点（2KG以下）。总的来说，thinkpad x61配上复刻的x62主板与全反射屏屏幕可以满足我的要求。\n还有一点我比较看重的就是能不能黑苹果，自从我给我的hp1000-1306tx装上黑苹果后，以后我的每台电脑都选择可以黑苹果的。不过目前的笔记本基本上都能比较好地黑苹果。", "filename": "2017-08-23-how-to-pick-up-a-laptop.md"}, {"id": 113, "text": "\ndate: 2017-08-28 20:55:50+08:00\nlayout: post\ntitle: 做了一道菜\ncategories: 随笔\ntags: 做菜\n\n\n今天自己照着网上的教程烧了一道番茄炒蛋。\n准备工作：切好番茄，搅拌好蛋。我把几个番茄的皮也剥了。\n烧：应该把锅洗干净然后把锅烧干再放油，我直接就倒上油了。然后等锅冒烟后我把鸡蛋倒进去。倒进去后鸡蛋就一下了膨胀开了，哔哩吧啦的会开溅。我看它很快就成型了就关火盛出来。之后再倒番茄炒。我不太会用锅铲。眼看着番茄有点变黑了，担心炒焦，而且感觉油沸腾得厉害，担心过了烧干，加了点水。之后翻炒一阵后看着红了就倒入鸡蛋再炒一会，加盐。关火再翻一下就盛出了。\n尝：味道还可以，就是感觉有点油，很腻。\n我独自做的第一道菜就做好了。最近什么事都想尝试一下。", "filename": "2017-08-28-my-first-dish.md"}, {"id": 114, "text": "\ndate: 2017-08-29 16:13:50+08:00\nlayout: post\ntitle: 学海宁话的资源汇总\ncategories: 随笔\ntags: 吴语\n\n我是海宁人，从小听海宁话长大，虽然小时候觉得土话很土，很粗俗，但长大后特别是上大学离开家乡后便对家乡话起了兴趣。\n但是学海宁话并不容易，首先，它不规范，十里不同音。其次，没有标准性的学习资源，没有教材，学习资源少。另外，如果我不在海宁，我便失去了这个语言环境。下面我想探讨下怎么学习海宁话。\n海宁话首先是一种语言，具有语言的很多特性，我们可以根据普通语言学的知识来了解它，比如它的浊音的存在。\n海宁话是一种汉语，从历史渊源来看，保留了中古汉语的特色。古代的《广韵》、《康熙字典》等书可以用作参考。另外还有很多汉语语言学书籍，比如北大编的《现代汉语》，里面记载了汉语的发展。其中的记载特别是发音方面，有告诉我们如何辨认一个字应该发入声。\n海宁话是一种吴语，我们可以看吴语相关书籍，可以通过学习其它地区的吴语来帮助学习海宁话。古代有用苏州白话文写的小说，特别是明清时期，比如著名的《海上花列传》。金庸也在《天龙八部》里也有用到吴语白话文。现代吴语以上海为代表，上海话通俗易懂，较为硬朗，不像苏州话那么软。上海的影响力在吴语区最大。因此，有许多专门研究上海话的书籍，也有许多上海话的音像制品、电视节目。比如钱乃荣的相关上海话、吴语研究书籍，钱程的上海话音像作品，上海电视台的《老娘舅》系列情景剧。吴语分为北部吴语和南部吴语。北部吴语大多能互相交流，但南部吴语则比较混乱，一个市不同地方的人可能都不能互相用方言交流。海宁话属于北部吴语，所以可以借鉴的吴语很多。除了上海话，还有无锡话、苏州话、杭州话等等供参考学习。比如吴语的本字基本都是通用的，无锡话的本字考书籍里的本字基本和海宁话的本字是对应的。\n基于吴语，也衍生出锡剧、越剧、苏州评弹、上海滑稽戏等演艺项目，现代也有人尝试创作吴语方言歌曲，虽然不像粤语歌曲那么流行。我印象很深的有滑稽戏《十三人操麻将》，里面用了上海话、杭州话、苏州话、无锡话、丹阳话还有北方人学上海话等等多种方言演绎，非常欢乐。还有杨华生的作品《方言与戏曲》，他讲了京剧一定要用普通话唱，要用苏州话唱就唱不出气势来。\n在线学习吴语的网站有吴语学堂、吴语协会等。有专门的吴语拼音、基于rime的吴语输入法等。\n最后，海宁话毕竟只在海宁地区使用，对专家来说研究价值可能并不是很大，所以还是要我们本土人士自发进行。《海宁方言志》由海宁市史志办基于海宁是高级中学语文教师姚若丰的研究写成，是很有价值的，也是仅有的专门研究海宁话的书籍。潮人语是一个海宁本土文化青年团体，发布了一些海宁话的歌曲。创建者也为吴语学堂贡献了海宁话字典。海宁市档案局(史志办)里对海宁话做了语音档案，找了正宗的硖石老阿姨进行发音。和现在年轻人的发音会有不同，属于老派的发音。年轻人的发音受普通话污染比较严重。\n以上是对海宁话相关学习资源的整理，至于具体的学习方法，我想可以是在海宁真正地生活使用海宁话并辅之以专门的书籍。书籍的主要作用是学习吴语词汇、正字和矫正发音。", "filename": "2017-08-29-how-to-learn-haining-dialect.md"}, {"id": 115, "text": "\ndate: 2017-09-10 20:47:50+08:00\nlayout: post\ntitle: 联想幸福之家v3.2\ncategories: 随笔\ntags: 90s\n\n前文讲了幸福linux的，这次来提一下Windows上的幸福之家软件，我小时候的回忆。\n我家的联想天鹤640P电脑，除了主机，还有附带显示器音箱、鼠标、键盘、手写板、打印机等配件，然后还有随机光盘。电脑上预装Windows98系统，还有联想幸福之家。幸福之家是一个场景操作软件，用现在的话讲就是虚拟现实。它包含了一系列的软件。具体的场景操作视频我传在b站，前文有链接。这里我具体讲一下幸福之家都提供哪些让我印象深刻的软件。\n\n那个时候的电脑高手和打字飞快是挂钩的，听到有人噼里啪啦打字就会觉得他的水平还可以。幸福之家就提供了打字练习软件，会讲解指法，然后提供练习。练习时给出打字速度和正确率。后来的金山打字做得要出色得多，记得小学时就玩的金山打字里的打字游戏。\nwin98课堂有附带光盘，里面提供视频讲解，视频很傻（无）瓜（聊），但那个时候人们都没有接触电脑，这样讲解也是好的。办公室商务英语也有光盘，但小时候不怎么用。我现在看了下里面有讲求职信怎么写，还是有点用的。\n牛津百科挺有意思的，相当于出版的书籍的电子版，界面是windows 3.x的界面。小时候印象最深的是它提供的小猛犸搞笑视频。附带的是牛津科学百科，网上还可以下到其它内容的。\n\n牌类游戏大多是国产的，由北京世纪鼎点公司开发。象棋、国际象棋、围棋是牛津Oxford softworks开发后汉化的。铁甲风暴小时候经常看表哥表姐玩，作为一款国产战略游戏，制作还是很好的。\n\n这些软件现在看来是没什么用了。。\n\n网络。\n\n家庭医生给我的感觉就是程序化了的书籍。中国饮食文化也是，里面配有各种菜谱，饮食来源等，还有语音朗读。\n\n结合系统的工具，需要配合98系统。", "filename": "2017-08-29-legend-happy-home.md"}, {"id": 116, "text": "\ndate: 2017-08-29 10:55:50+08:00\nlayout: post\ntitle: 用Linux调整ntfs分区大小之后\ncategories: 随笔\ntags: \n\n我想把linux分区调小一点，扩大相邻的Windows分区，便在ubuntu livecd环境下操作。之前从来没有在linux下做此类操作，事实证明，linux并不靠谱。本来扩充分区并不需要移动整个分区，但它就这么做了。然后我重启进Windows之后分区就无法访问了。反正这个分区只装了一点软件，放了一些不重要的数据，我就直接重新格式化了Windows和Linux分区，顺便也把大小调整了。\n之后再卸载之前装在那个分区的程序。发现acdsee等软件在c盘保留了安装文件，可以直接修复。但是vmware的修复程序卡在装虚拟网卡上。之后装Junos Pulse出现回滚操作，安装失败。当时已经23点，我要睡觉的时间，但我起了劲头，一定要解决这个问题。于是在网上搜，发现有人提出这个问题，但没有好的解决办法。最后看到有人提到安装Windows Store里的Pulse Secure，测试可以使用学校的VPN。于是我才安心睡去。\n在第二天，也就是今天，我重新装了vmware，这次安装很顺畅，没有卡在虚拟网卡驱动上。然后再装Junos Pulse，发现成功了。\n折腾电脑就是这样，往往会花费很多的精力在处理这些问题上。如果有一个大神给我提供技术支持那就会轻松很多。", "filename": "2017-08-29-take-it-easy.md"}, {"id": 117, "text": "\ndate: 2017-09-10 21:11:50+08:00\nlayout: post\ntitle: 参加了北大新生开学典礼\ncategories: 随笔\ntags: \n\n9月2号开学报到，在寝室住了几天，认识新同学，入住大兴的宿舍，熟悉大兴环境，熟悉北大校园，入学新生体检等等。9月8号开学典礼，9月11号正式上课。\n刚来到新环境，而且是作为北京大学研究生来到北大大兴，带着兴奋，同时也有迷茫。这时，其实需要认识自己，做好自己。\n开学典礼在北京大学的邱德拔体育馆进行，进场馆后发现装饰都还是北京奥运会时的样子，加上我之前看全运会，关注许昕然后看了马琳和王皓的08奥运男单决赛，突然很有感触。\n开场的暖场非常煽情，和江大的开学典礼一样，有唱歌跳舞。之前教唱校歌《燕园情》时看着歌词的内容，唱着那种有点红色的旋律。我唱了会儿就不唱了，省得哭出来。\n然后是各种讲话，迎接新生的，并没有特别出彩的内容。差不多一个多小时的开学典礼就这样结束了。", "filename": "2017-09-10-opening-ceremony-of-peking-university.md"}, {"id": 118, "text": "\ndate: 2017-09-25 21:11:50+08:00\nlayout: post\ntitle: 开学社团一二事\ncategories: 随笔\ntags: 北大\n\n研究生的课程上了几周，感觉老师上课比较随意，不够系统。3个小时的时间真的太长，可能也是老师来一趟大兴不容易。\n我想我虽然在大兴，还是应该多参加社团活动，认识本部的同学。\n首先是我们学院注册的北大翻译协会。没想到研二的同学不干了，直接我们研一的同学选举产生了干部，什么都要探索。好在会长能力强，9月22、23日百团大战时也招了不少新同学。但会员的管理、后续活动又会是一个问题。\n还有一个社团是北大强生TLS，暑假的时候了解的，因为我对医疗行业感兴趣，而且强生也有翻译中心。社团成员主要是北京大学医学部的，当然也有我这样千里迢迢跑来参加活动的。主席团的成员都很棒，的确给我们传递了强生“因爱而生”的理念，我感到每一个成员都得到足够的关注。\n昨天破冰酒会的活动还是令我耳目一新的，先是分组认识，然后一组组上台玩谁是卧底。接下来是8人一组找红点的独创游戏。然后是击鼓传花给同学敬酒。大家可以互动交流，气氛不错。之前江大时我只参加了听雨技术部，一帮技术们没有那么会玩。\n话说参加酒会要求穿西装衬衫，我昨天便研究了下西装。最后在大兴的vicutu工厂边上的折扣店买了一套全羊毛西装。到边上的超市买了双便宜皮鞋。跟店员问了她们店的西装价格，讲了我买的西装的价格，感觉我买vicutu的确高档了一点。我买的型号是西装VRS99311897，西裤VRS99321897，衬衫VBW99351143。", "filename": "2017-09-25-social-clubs.md"}, {"id": 119, "text": "\ndate: 2017-09-29 18:57:50+08:00\nlayout: post\ntitle: OCR与语音转录软件测试\ncategories: CAT\ntags: \n\n翻译技术课上我们讨论组测试了各种OCR和语音转录软件，我这里也稍微总结一下我们的成果。\nOCR\n我们测了各种OCR软件成品：ABBYY Finereader、汉王OCR、捷速OCR等，也有网页端的百度、谷歌和GK扫描，也有手机端的ABBYY和扫描王等软件。\n对于OCR结果的影响，我们列出了一些因素，主要有：图片分辨率（DPI）、字体、语种、简繁体、印刷体/手写体和是否有特殊样式。\n一开始我听同学们讨论要各种测试的时候真的觉得挺没有意义的，我们不是软件开发者，不懂技术原理，也不懂什么软件测试的方法，光测试个软件结果有什么用？而且还有提议用百分比的方式翻译正确率。我想很多图片的字数还需要人工统计，然后在数错的字，工作量也不小的。但后来我想想这些实验还是可以做的，而且有一篇硕士论文就是做的这个，题目是《信息资源数字化文本型数字图像OCR识别准确度影响因素及提高策略研究》。\n我们使用成品软件的话，对于识别过程的掌控较小，有一开源的ocr引擎tesseract，可以供学习使用。\n语音转录的话，我目前发现的好用的是Youtube的自动字幕生成功能和讯飞听见。\n两者都使用了机器学习算法。前者免费，但是要上传视频比较麻烦一点。后者支持中文，要收费。我也了解讯飞还建立了一个大众标注平台，叫爱标注，发动网民给医学等领域以及各地方言的语音数据进行标注。目前上海话的识别已经挺不错了，我直接用海宁话说也可以识别。\n对于语音识别的技术细节我自然很难掌握，但通过youtube上导出的字幕窥知一二。比如它可以识别出音乐，并打在字幕上，说明它是需要区分人的声音和背景声音的。\n感叹下现在科技的发展，便利了我们的生活和工作。", "filename": "2017-09-29-OCR-and-audio-transcription.md"}, {"id": 120, "text": "\ndate: 2017-10-02 11:31:50+08:00\nlayout: post\ntitle: 北大软微学生生活指南\ncategories: 随笔\ntags: 北大\n\n这是一个坑，等我有空再写。\n经过两个月的摸索，基本上对软微及其周边环境有了清楚的认识。\n软微这边的共享单车不多，但公共自行车覆盖不错，和海宁相仿，所以我办了一张公共自行车卡。只不过押金要500，比海宁的100元贵多了。有了自行车，就可以自由探索方圆6公里的地方。因为软微校园小，所以我们需要走出校园去获得我们需要的东西。昨天，我出去逛街的时候还碰到了本科江大的同学，很神奇。\n本来想写详细的指南，但发现我没有看别人的什么指南，也已经很清楚了，看来没有必要再详细写了。总的来说，软微的生活还是不错的，适合学习。\n2018-05-22更新：\n跑步\n软微没有跑道，虽然校内环境好点，我不是很好意思在校内跑。但是周边也没有好的地方去，大兴的田径场也太远。于是我经常骑车去金星公园跑步，骑过去大概十几分钟。\n在无锡时跑步从来不怎么考虑天气，但在北京不一样了。主要注意以下几点：\n\n\n选择空气质量好的天，一般AQI不能过100，属于优到良好级别的。\n\n\n风比较大不要出去跑。大风会刮起灰尘。北京春天还会有柳絮以及各种树的树叶和花落下来。\n\n\n下午一般空气质量不错，温度也适宜。公园等局部环境的空气质量要比天气预报的好一点。\n\n", "filename": "2017-10-02-living-guide-for-students-of-school-of-software-and-micro-electronics-of-peking-university.md"}, {"id": 121, "text": "\ndate: 2017-10-06 22:06:50+08:00\nlayout: post\ntitle: 软微寝室的网络\ncategories: 技术随笔\ntags: 北大\n\n软微的网络是北大教育网，是从本部拉光纤过来的。和本部10元每月不同，我们这里的校园网是免费的。我在的5号楼寝室门口有网口，然后通过交换机分到4个床位下面。\n我来的时候没有买无线路由器，带的树莓派，打算用它来架无线网。以前在江大的时候网络也是经过NAT的，我直接用龙芯笔记本做路由器，效果挺好的。这次在软微的设置也还是轻松愉快的，插网线直接分配到地址，然后按教程利用hostapd和dnsmasq就可以了。\n但是网络一直有某些网页打不开的问题，edge提示dns错误。网页比如www.qq.com，login.weibo.com， mirrors.ustc.edu.cn还有知网。我一直以为是软微网络本身的问题，一直用江南大学的VPN上知网。但我今天连接TPLink WR842n架的无线网时发现这些网站都可以访问，就觉得奇怪了。于是想方设法要解决这个问题，结果到最后也没有解决。毕竟我的网络知识很薄弱。\n虽然没有解决，但是还是学到不少东西。比如一些网络命令\n1、nmap，主要用来检测网络设备运行的端口、操作系统。比如以下对北大一个网关的扫描。\n```\npi@raspberrypi:~ $ sudo nmap -O 162.105.254.18\nStarting Nmap 6.47 ( http://nmap.org ) at 2017-10-06 22:24 CST\nNmap scan report for 162.105.254.18\nHost is up (0.0033s latency).\nNot shown: 994 closed ports\nPORT     STATE    SERVICE\n53/tcp   filtered domain\n135/tcp  filtered msrpc\n139/tcp  filtered netbios-ssn\n445/tcp  filtered microsoft-ds\n1433/tcp filtered ms-sql-s\n1434/tcp filtered ms-sql-m\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: broadband router|router|switch|WAP\nRunning: Cisco embedded, Cisco IOS 12.X\nOS CPE: cpe:/o:cisco:ios:12.2 cpe:/h:cisco:870_router cpe:/o:cisco:ios:12 cpe:/h:cisco:2960_switch cpe:/h:cisco:aironet_ap1250 cpe:/o:cisco:ios:12.4\nOS details: Cisco 827H ADSL router (IOS 12.2), Cisco 870 router or 2960 switch (IOS 12.2 - 12.4), Cisco Aironet 1250 WAP (IOS 12.4)\nNetwork Distance: 5 hops\nOS detection performed. Please report any incorrect results at http://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 98.28 seconds\n```\n2、nslookup，检测dns服务是否正常。我用nslookup发现有些域名可以正常解析，但就是ping不同，浏览器打不开网页。\n3、traceroute（windows上对应tracert），用来检测发出数据包的主机到目标主机之间所经过的网关数量的工具。下面是我测试的一些结果。可以看到在访问中科大开源镜像时出现三个星号，请求失败。162开头的是北大的网关，192开头的应该是内网的网关，可以知道寝室的网络应该是经过多重路由的。\n```\npi@raspberrypi:~ $ traceroute weibo.com\ntraceroute to weibo.com (121.194.0.221), 30 hops max, 60 byte packets\n 1  192.168.200.254 (192.168.200.254)  0.607 ms  0.604 ms  0.600 ms\n 2  192.168.253.13 (192.168.253.13)  0.327 ms  0.429 ms  0.349 ms\n 3  192.168.253.17 (192.168.253.17)  0.566 ms  0.595 ms  0.609 ms\n 4  162.105.254.18 (162.105.254.18)  1.188 ms  1.323 ms  1.246 ms\n 5  162.105.252.189 (162.105.252.189)  1.168 ms  1.201 ms  1.105 ms\n 6  202.112.41.181 (202.112.41.181)  1.582 ms  1.346 ms  2.292 ms\n 7  202.112.41.177 (202.112.41.177)  2.903 ms  3.648 ms  3.573 ms\n 8  101.4.117.82 (101.4.117.82)  3.504 ms  3.422 ms  3.341 ms\n 9  101.4.112.89 (101.4.112.89)  3.392 ms  3.145 ms  3.039 ms\n10  219.224.102.230 (219.224.102.230)  3.272 ms  3.197 ms  3.118 ms\n11  hef1.cernet.net (202.112.38.126)  2.890 ms  2.958 ms 202.112.38.166 (202.112.38.166)  2.004 ms\n12  * * *\n13  121.194.0.221 (121.194.0.221)  2.585 ms  2.771 ms  2.785 ms\npi@raspberrypi:~ $ traceroute mirrors.ustc.edu.cn\ntraceroute to mirrors.ustc.edu.cn (202.38.95.110), 30 hops max, 60 byte packets\n 1  192.168.200.254 (192.168.200.254)  0.761 ms  0.626 ms  0.715 ms\n 2  192.168.253.13 (192.168.253.13)  0.254 ms  0.367 ms  0.285 ms\n 3  192.168.253.17 (192.168.253.17)  0.382 ms  0.487 ms  0.411 ms\n 4  162.105.254.18 (162.105.254.18)  1.112 ms  1.026 ms  1.056 ms\n 5  *  *\n 6  *  *\n 7  *  *\n 8  *  *\n 9  *  *\n10  *  *\n11  *  *\n12  *  *\n13  *  *\n14  *  *\n15  *  *\n16  *  *\n17  *  *\n18  *  *\n19  *  *\n20  *  *\n21  *  *\n22  *  *\n23  *  *\n24  *  *\n25  *  *\n26  *  *\n27  *  *\n28  *  *\n29  *  *\n30  *  *\n```\n4、wireshark，抓包工具。这次没有用到。\n5、netstat，显示各种网络信息的工具。我主要用来看路由表。\n关于树莓派的配置，我也折腾了很久，主要是各种设置DNS服务器，设置静态分配ip。\n修改dns直接修改resolv.conf就可以生效，这个文件由resolvconf自动生成，可以进行配置。dnsmasq分发给设备的dns地址可以通过dnsmasq.conf配置。设置静态IP有修改 /etc/network/interfaces的也有修改dhcpcd.conf 的，其实效果都一样。我发现不能使用8.8.8.8这样的公共dns，只能使用路由器提供的dns。\n折腾了半天，还是没有解决无法连接如中科大开源镜像的网站问题。最终我选择直接用网线接电脑，发现都可以访问了。可能是经过的路由太多导致的访问失败。", "filename": "2017-10-06-my-dorms-internal-network.md"}, {"id": 122, "text": "\ndate: 2017-11-08 22:00:50+08:00\nlayout: post\ntitle: 批量下载m3u8的ts文件\ncategories: 技术随笔\ntags: \n\n目标是下载欧洲委员会的翻译论坛的视频：https://webcast.ec.europa.eu/translating-europe-forum-2017-07-nov-2017\n可以知道播放的视频文件是以m3u8索引的。网上有m3u8 downloader，但是使用ffmpeg命令下载，下载速度较慢。于是我考虑直接批量下载ts流文件。测试可以用idm的批量下载功能进行下载。\n另外我想用我的linux vps进行下载，于是网上搜索了一下，发现一个用shell脚本调用wget进行批量下载的文章。但复制下来运行失败，我不懂shell，于是转用python。\npython使用os.system不是很好控制wget，于是转用python wget模块。提示SSL Certificates错误，需要pip install certif。\n具体代码其实很简单：\n```\n!/usr/bin/env python\nimport wget\ncount=0\nwhile count<5: #count的值表示总共要下多少ts文件，要查阅m3u8文件\n    try:\n        result=wget.download(\"https://stream.scic.ec.europa.eu/vod/definst/smil:11066_12470_5a01687c2dbff.smil/media_w442363958_b466000_\"+str(count)+\".ts?tracks=or&clientip=218.247.220.230&smvplayersession=80c4681f-acac-4906-5611-52d0af6818f0\")\n        count=count+1\n    except:\n        continue\n```\n更新：下载最好还是要有一个队列。我现在改用B4J来进行批量下载，使用最新增加的wait for语句，并且记录下下载失败的文件。\n下载下来的TS文件需要合并，网上有ts merger这个软件。其实ts文件直接用windows copy命令就可以合并了。不过事先要处理一下文件名，让它按播放顺序排列。主要是要把0.ts这样的补全为0000.ts这样的名字。我这次下载的ts文件总共有2946个。\n重命名：\n```\n!/usr/bin/env python\nimport os\nfilelist=os.listdir(\"./\")\nfor file in filelist:\n    orgName=file\n    file=file.split(\"\")\n    if len(file[3])<7:\n        for i in range(7-len(file[3])):\n            file[3]=\"0\"+file[3]\n        print(file)\n        filename=\"\".join(file)\n        print(filename)\n        os.rename(orgName,filename)\n    else:\n        pass\n```\n或者使用linux的rename命令，具体见此:http://blog.xulihang.me/notes-of-linux-commands/\n合并：\ncopy /b *.ts E:\\new.ts\n在linux下可以用cat命令：\ncat *.ts>out.ts", "filename": "2017-11-08-download-m3u8-ts-files.md"}, {"id": 123, "text": "\ndate: 2017-11-18 20:40:50+08:00\nlayout: post\ntitle: docker使用小记\ncategories: 技术随笔\ntags: \n\n之前也试用过docker，但安装后看着一堆命令不知道怎么用。今天因为要安装ocserv-docker（未PN服务器），就再次使用了下这个时下流行的容器技术。以前在htc g1上有用chroot进入一个debian lenny镜像，在安卓上用vnc运行linux桌面。chroot应该是最古老的容器技术。\ndocker镜像省去了复杂的配置，可以让我们专注于使用，也可以说方便了很多伸手党，对配置过程不求甚解。当然容器和系统的隔离，也避免了更中配置把宿主系统搞得一团糟。\n在实际使用过程中，我逐渐了解了docker的使用。\n1、 建立docker镜像（docker build）。可以自己写Dockerfile来生成镜像文件，这个比debian的debootstrap好使很多。\n2、 基于镜像运行一个新的容器（docker run）。容器是可修改的，而镜像是只读的。\n3、 docker的其它操作一般都是基于已经有的容器。两条命令我觉得挺重要：\n进入容器运行shell进行操作\n$ sudo docker exec -it 容器名字 /bin/bash\n查看容器，包括运行的和停止运行的\n$ sudo docker ps -a\n4、 容器的端口和系统的端口是两个概念。不像chroot，运行sshd后可以直接连接22端口。需要进行端口的绑定。\ndocker背后的技术还是挺复杂的，我光了解怎么用就费了不少功夫。\n参考链接：\n通过 Docker 部署 OpenConnect 服务器 \nwppurking/ocserv-docker \nDocker 教程\n如何进入、退出docker的container\nGet Docker CE for Debian", "filename": "2017-11-18-notes-of-docker.md"}, {"id": 124, "text": "\ndate: 2017-11-23 22:00:50+08:00\nlayout: post\ntitle: B4X笔记———使用WebSocket\ncategories: 技术随笔\ntags: B4X\n\n\n如图是一个基于websocket实现共享输入框文本的b4j应用。使用websocket主要是用来做实时的双向的消息传输。\nb4x论坛上相关的帖子主要有以下两个：\n[WebApp] Web Apps Overview\njWebSocketClient library\n前者提供了b4j后端的代码（见nosql那个文件，不需要额外的库），后者提供了b4j前端的代码。因为erel没有对代码进行具体的说明，我摸索websocket的使用花了不少时间。我这里总结一下使用的要点。\n1、官方的服务器代码里提供了*shared的这样一个代码文件，是面向所有websocket连接的，它可以保存websocket连接（用map或list保存websocket class）、同时向所有客户端发送信息。\n2、客户端需要使用WebSocketHandler这个class,用来处理各类websocket的事件。比如以下这个sub是用来给服务器发事件的。需要在服务器对应的websocket class里存在对应的sub，并且参数类型要一致，否则会提示如下错误java.lang.RuntimeException: java.lang.Exception: Sub upload_text signature does not match expected signature.。另外事件名必须要有下划线，否则不被识别。服务器端的sub是不是public似乎并不影响。\nPublic Sub SendEventToServer(Event As String, Data As Map)\n    Dim m As Map\n    m.Initialize\n    m.Put(\"type\", \"event\")\n    m.Put(\"event\", Event)\n    m.Put(\"params\", Data)\n    Dim jg As JSONGenerator\n    jg.Initialize(m)\n    ws.SendText(jg.ToString)\nEnd Sub\n3、服务器端给客户端发消息用类似如下代码\nws.RunFunction(\"refresh\",list1)\n    ws.Flush\nb4a和b4j的代码会有差异，但大致相同。", "filename": "2017-11-23-b4x-websocket.md"}, {"id": 125, "text": "\ndate: 2017-11-25 21:37:50+08:00\nlayout: post\ntitle: 将星际争霸1的剧情文字整理到了gitbook\ncategories: 随笔\ntags: \n\n玩星际1的时候就有想给游戏录像，反复听对话，但这肯定是个浩大的工程，而且网上肯定也有人做的，后来也就没怎么关注。\n最近没什么事就打开星际争霸，听听熟悉的音乐。然后突然发现国服的星际争霸2免费了，美服的自由之翼及天梯都免费了。\n我突然想把星际争霸的文本做成语料库，想着怎么给它把文字提取出来。我知道星际争霸这么流行的游戏肯定有黑客进行逆向工程，于是进行搜索。发现国内的星际MOD曾经挺火，有很多工具可以使用。其中比较有用的就是MPQWorkshop。星际的安装光盘里500多兆的install.exe其实就是一个mpq文件，里面包含了音乐、图片、文字等资源。具体的剧情文字在每个战役的scenario.chk这个文件里。该文件相当于一个地图文件，可以用chkedit打开，这个程序在github上有开源。\n但我没有直接提取战役文件里的文字，我选择了HanStar的中英对照剧情文件，它是个纯文本，比较容易处理。HanStar是韩国人ChangKyu Song开发的一款外挂程序，用来替换英文为韩文。然后中国粉丝进行了将韩文替换为了中文。说明星际争霸的程序是支持unicode的啊。对于游戏黑客们表示敬佩。\n最后按战役顺序排列做了一个星际争霸双语剧情书，放在gitbook上，链接如下：http://xulihang.gitbooks.io/starcraft-plot/content\n \n2023-06-03 更新\n因为文件名有空格的问题，Gitbook上的页面访问会有问题。我在GitHub上重新放了一份：https://github.com/xulihang/StarCraft-Plot/", "filename": "2017-11-25-starcraft-plot-book.md"}, {"id": 126, "text": "\ndate: 2017-11-29 21:37:50+08:00\nlayout: post\ntitle: ffmpeg批量合并音频文件\ncategories: 技术随笔\ntags: B4X\n\n用mpg editor提取了星际争霸的战役剧情。每个战役文件夹里有很多小的音频文件。我打算合并这些文件方便听。但是这样的文件太多了，用格式工厂等工具肯定不适合，决定直接用ffmpeg。\nffmpeg的文档太长了，我参考了这篇中文博客，以下是参考内容。\n\n方法二：FFmpeg concat 分离器\n这种方法成功率很高，也是最好的，但是需要 FFmpeg 1.1 以上版本。先创建一个文本文件filelist.txt：\nfile 'input1.mkv'\nfile 'input2.mkv'\nfile 'input3.mkv'\n然后：\nffmpeg -f concat -i filelist.txt -c copy output.mkv\n\n生成文件列表，然后运行命令合并就行了。合并音频就把命令改成如下内容：\nffmpeg -f concat -i filelist.txt -c copy output.wav\n我写了一个b4j程序，用Resumable subs协程处理，速度还是很快的。\n代码在这里：https://github.com/xulihang/misc/tree/master/b4x/b4j/mergeAudio\n  ", "filename": "2017-11-29-ffmpeg-batch-merge-audio.md"}, {"id": 127, "text": "\ndate: 2017-12-15 20:23:50+08:00\nlayout: post\ntitle: 爬取吴语学堂辞典内容做成mdx文件\ncategories: 技术随笔\ntags: 吴语\n\n前几个星期在北大未名BBS上发了一篇帖子：现在的年轻人都不说吴语了引起了广泛的讨论，并冲到十大榜首。但我们不能空谈，还是要做一些切实的事情。首先是自己得说好吧。\n目前的吴语学堂只提供在线版词典，没有离线版。其实离线版词典只要有人想做是没有什么难度的，不清楚为什么还没有。\n能够直接联系网站的站长要到资料自然是最省力的方法，我也的确联系了。但我突然想自己爬取下来，锻炼下编程技能。下面讲一下实现的思路：\n吴语学堂的词典有发音字典、词典，可以根据拼音、汉字进行检索。所以我打算词典的词条就按这个来：字、词及发音。\n因为字词太多了，还有很多生僻字，我没有办法穷尽，而拼音是有限的，却能表达一系列汉字。正好学堂的检索支持拼音，可以实现这一需要。\n我首先是检索所有韵母，获取词语表。因为只检索韵母不显示具体的字，需要将声母和韵母拼起来获取发音字表。但发现吴语中有介音的存在，比如chieu （恘），会少生成一些拼音。这时我正好发现了网站的静态文件可以直接访问，里面就有按拼音命名的语音文件，于是将文件都下载下来，补充缺少的拼音。\n以上获取的内容形式如下：繁体词条    简体词条    发音  具体的词条页面链接。\n这相当于一个索引。基于这些内容，以发音为一个Python中的字典的键值，简繁词条为值，就可以生成一个可以检索发音查看有同一发音的词的词典。\n再把每个词条的页面里的解释下载下来，和索引合并就是一个词典文件了。\n以下再说一下技术方面的内容：\n1、网站使用了ThinkPHP开发框架，页面代码比较清楚明了。检索词的时候会分页显示，切换分页用的是ajax。用调试工具可以发现一个用来post信息的地址，设置参数可以进行针对性的检索。我用这个来获取词和字的索引。我是用了b4j来下的，用了最新出来的wait for，比较方便。\n2、使用python解析html，用上beautifulsoup加上点正则，比较容易。注意正则要使用非贪婪模式，用.*？另外还要设置支持换行匹配。\n3、发音文件，直接在网站静态文件浏览页面里复制页面内容，用idm下载剪切板的所有链接即可。\n4、使用mdict自带的mdxbuilder做mdx。看了下帮助文档，选择了mdict html作为词典保存的格式。说明里讲了如何调用发音，说只支持wav，还得把下的mp3转换一下。mdd文件和mdx文件名字一样就会自动调用，所以不用重新生成mdx时再生成mdd。\n最后是词典文件的下载地址：https://pan.baidu.com/s/1boIMq6b\n最新更新\n\n\n发现网站在检索in、poq等拼音时会没有结果，导致词典缺失了不少字。用吴语学堂群的苏州话字表补上了缺失的字。\n\n\n发现拼音索引里多音字只保存了一种情况。通过解析检索内容页，将多音字的每个发音单列开来，保留了多音字的多个发音。\n\n\n目前词典收录了6076个单字、9363个词语。", "filename": "2017-12-15-crawl-and-make-a-wu-dialect-mdx.md"}, {"id": 128, "text": "\ndate: 2017-12-16 12:28:50+08:00\nlayout: post\ntitle: 一个简单的吴语苏州话语音合成程序\ncategories: 技术随笔\ntags: 吴语\n\n上一篇文章讲到了吴语词典的制作。我发现语音文件是按发音来命名的，并不用每个字都做一个录音，只要读音相同，就可以共用一个发音文件。于是我想能不能用这1000多个音频来做一个语音合成程序。\n实现方法是这样的：\n利用定时器，一个字一个字读取要朗读的文本，将文字转换成拼音，调用播放器播放音频文件，如果没有音频文件或读取的文本是标点符号，就不播放。\n当然，这样的效果是很不好的。我发现了一些问题：\n1、音频文件开头结尾有空白。这可以用goldwave批处理删除静音。\n2、有多音字的问题。另外，吴语还有比较特别的文白异读现象。吴语的连读变调也是一个问题。\n3、其它还有语音语调等问题。\n现在又有了基于机器学习的语音合成技术，应该可以比这种拼接音频的方法效果更好。\n另外，既然把文字转拼音了，那么利用html5的ruby标签，可以给文字注上吴语拼音，以后练习朗读吃不准音时比较方便。\n", "filename": "2017-12-16-wu-chinese-tts.md"}, {"id": 129, "text": "\ndate: 2017-12-26 12:28:50+08:00\nlayout: post\ntitle: 编辑距离及其回溯\ncategories: 技术随笔\ntags: CAT\n\n前言\n最近翻译技术课的内容是机器翻译。一种机器翻译方法是基于实例的机器翻译方法（EBMT）。比如有这样一对原文和译文：I love apples->我爱苹果。那么基于这个例子，可以把I love oranges翻译为我爱橘子。它需要双语语料，词典和其它分词、句法、语义等分析工具辅助。\n计算机辅助翻译软件中用到的翻译记忆就提供了句对齐的双语语料，但目前的CAT软件中只有国产的雪人CAT应用了EBMT技术。雪人CAT界面简洁、功能强大，一直是我的主要CAT软件。最近想参考雪人CAT的功能再自己实现一款CAT软件。\n而翻译记忆和EBMT的一个基础就是比较文本的相似度并算出具体差异。这时一般使用的是编辑距离算法。\n什么是编辑距离\n引用互动百科：编辑距离，又称Levenshtein距离，是指两个字串之间，由一个转成另一个所需的最少编辑操作次数。许可的编辑操作包括将一个字符替换成另一个字符，插入一个字符，删除一个字符。\n如何计算\n对于算法的原理我其实也是一知半解，尽量把我理解的讲清楚吧。\n首先是维基上的这张公式：\n\n这是使用了一个递归的方法。维基里讲的不清楚，我在quora上看了一些例子后明白了很多。递归的方法就是把算两个文本的编辑距离这一问题分解成了很多的小问题。公式中的lev(i-1,j)是删除操作，lev(i,j-1)是增加操作，而lev(i-1,j-1)说明两个文本相同或需要进行替换。\n具体的例子，比如说算sitting和kitten的编辑距离，第一步，根据公式，要进行以下三个部分的计算，并取最小值：\n这里x是sitting的长度，为7，y是kitten的长度，为6。cost是公式中后面的+1，如果对应的是公式中的第三条（lev(x-1,y-1)）且末尾字母相同则+0.\n\nlev(x, y)（sitting和kitten）算下去：\n\nlev(x-1, y): 对应sittin和kitten，编辑距离是2 cost=1\nlev(x, y-1): 对应sitting和kitte，编辑距离是4 cost=1\nlev(x-1, y-1): 对应sittin和kitte，编辑距离是3 cost=1\n对应第一条公式，删除g\n取最小值lev(x-1, y)+1=3，因此编辑距离是3。以上的编辑距离是我自己算的，实际计算还要进一步计算。下面是完整的过程。\n\nlev(x-1, y)（sittin和kitten）算下去：\n\nlev(x-2, y)：对应sitti和kitten 编辑距离是3 cost=1\nlev(x-1, y-1)：对应sittin和kitte 编辑距离是3 cost=1\nlev(x-2, y-1)：对应sitti和kitte 编辑距离是2 （末位字母相同）cost=0\n对应第三条公式，末位相同，不需操作\n\nlev(x-2, y-1)（sitti和kitte）算下去：\n\nlev(x-3, y-1)：对应sitt和kitte 编辑距离是2 cost=1\nlev(x-2, y-2)：对应sitti和kitt 编辑距离是2 cost=1\nlev(x-3, y-2)：对应sitt和kitt 编辑距离是1 cost=1\n对应第三条公式，末位不同，进行替换\n\nlev(x-3, y-2)（sitt和kitt）算下去\n\nlev(x-4, y-2)：对应sit和kitt 编辑距离是2 cost=1\nlev(x-3, y-3)：对应sitt和kit 编辑距离是2 cost=1\nlev(x-4, y-3)：对应sit和kit 编辑距离是1 （末位字母相同）cost=0\n对应第三条公式，末位相同，不需操作\n\nlev(x-4, y-3)（sit和kit）算下去：\n\nlev(x-5, y-3)：对应si和kit 编辑距离是2  cost=1\nlev(x-4, y-4)：对应sit和ki 编辑距离是2  cost=1\nlev(x-5, y-4)：对应si和ki 编辑距离是1 （末位字母相同）\n对应第三条公式，末位相同，不需操作\n\nlev(x-5, y-4)（si和ki）算下去：\n\nlev(x-6, y-4)：对应s和ki 编辑距离是2 cost=1\nlev(x-5, y-5)：对应si和k 编辑距离是2 cost=1\nlev(x-6, y-5)：对应s和k 编辑距离是1 cost=1\n对应第三条公式，末位相同，不需操作\n\nlev(x-6, y-5)（s和k) 算下去：\n\nlev(x-7, y-5)，x-7=0，停止运算，返回y-5=1\nlev(x-6, y-6)：y-6=0，停止运算，返回x-6=1\nlev(x-7, y-6)：两者都为0，停止运算，返回0。\n对应第三条公式，末位不同，需要替换\n通过以上7步运算，对编辑距离的原理应该比较清楚了。\n这个递归算法的一个缺点就是会重复运算很多编辑距离。于是维基上的一个优化方法是使用矩阵来保存计算的结果，类似于动态规划的方法。动态规划比较难懂，我这里就不具体讲了。\n最后得到这样一个矩阵\n\n\n\n\n\nk\ni\nt\nt\ne\nn\n\n\n\n0\n1\n2\n3\n4\n5\n6\n\n\ns\n1\n1\n2\n3\n4\n5\n6\n\n\ni\n2\n2\n1\n2\n3\n4\n5\n\n\nt\n3\n3\n2\n1\n2\n3\n4\n\n\nt\n4\n4\n3\n2\n1\n2\n3\n\n\ni\n5\n5\n4\n3\n2\n2\n3\n\n\nn\n6\n6\n5\n4\n3\n3\n2\n\n\ng\n7\n7\n6\n5\n4\n4\n3\n\n\n其中的a(i,j)的值对应公式，是a(i-1,j)+1, a(i,j-1), a(i-1,j-1)+temp三者中的最小值。根据生成的矩阵，我们可以回溯出进行了哪些操作。回溯从右下角开始，比较上方，左方和斜上方的数字。如果数值相同，优先级是斜上、左和上。上表示添加，下则表示删除，斜上则表示替换或相同。另外如果左上，上边，都没有值，只能比较左边的值了。\n和翻译记忆结合来说明的话，其中替换和删除操作的部分就是要翻的原文中多出来的，而增加的部分是翻译记忆原文中多出来的。\n以下是我用B4J写的一个显示文本差异的小程序。\n\n一些参考的网站：\n编辑距离及其回溯路径\n编辑距离算法(LD)详解\n机器学习中的相似性度量\nLevenshtein distance\nWhat is an intuitive explanation of the edit-distance algorithm using dynamic programming?", "filename": "2017-12-26-edit-distance-and-its-backtracking.md"}, {"id": 130, "text": "\ndate: 2018-01-19 21:08:50+08:00\nlayout: post\ntitle: 设置电信itv机顶盒烽火HG680-J\ncategories: 技术随笔\ntags: \n\n电信新的129套餐送天翼高清itv，附赠一台烽火hg680-j机顶盒。\n机顶盒是安卓系统，被设置为专门用于播放电信的iptv。刚拿到手，并不会设置，发现只能有线连接。但是我们家的网只有书房有网络端口，接着无线路由。于是我打算利用旧的tplink-wr340+来做桥接。发现340g的桥接功能太老了，需要两台路由都支持才行，于是刷成tplink wa501g无线接入器的固件，利用ap client给机顶盒提供网络。但发现不能登录iptv。\n然后我网上搜索了很多iptv如何设置的文章。大部分的文章都是针对光纤入户（FTTH）的，我了解了我家的网络是光纤入楼（FTTB），网线进户。不过其实差别并不大。\n第二天工作人员来装机，说一定要机顶盒直接接网口进行拨号才能用，宽带和itv的账号是不同的，要同时上网和看iptv要再配交换机。他给我设置了下账号，拨号是tv+itv号码+@itv，密码默认111111。业务账号是itv号码，密码也是111111。网上说电信的iptv用了组播技术，效果好，就是一定要客户端直接pppoe连接。我把账号输在路由器里，用路由拨号连接后再接机顶盒，测试能够登录，但画面是黑的。tplink有出一台支持iptv的一体机，据说可以实现一台设备既提供宽带，又提供iptv。\n接下来要研究如何让在客厅的机顶盒用无线的方式独自完成拨号来看iptv。具体的方法就是用一台无线路由器来做无线交换机，将信号转出来，然后机顶盒自己进行拨号。具体见下图：\n\n拆机发现hg680自带了rtl8188etv的无线芯片，但默认界面不支持启动无线。但机器有串口，而且还焊好了针。使用usb转ttl工具可以在电脑上对hg680进行调试，这在网上已经有很多教程了。用杜邦线接上，tx和rx要交叉接，波特率是115200。连上后安装当贝桌面，就可以设置wifi了。机顶盒默认没有开adbd，在init.rc里有相关的服务代码，但是被注释掉了。利用android kitchen重新打包一下就行了。提取和刷入boot都是用dd命令。查看分区在/dev/block某个by-name的文件夹里。\n连上wifi后发现无法利用自带的拨号设置进行连接。我懒得研究它自带的程序，找了下第三方安卓无线pppoe拨号程序，但需要root。虽然adb shell后直接就是root，但安装supersu一直没有成功。我转而打算直接运行命令。系统已经带了ppp模块，在/etc/ppp里有连接脚本和配置文件，可以直接用来拨号。\n拨上后用ifconfig可以看到ppp0，但不能上网。参考网上关于安卓pppoe的文章，发现要设置路由,命令如下：\n#ip route del default\n#ip route add default dev ppp0\n设置后发现还是不能上网，只能ping通ip地址，不能ping通域名，说明dns有问题。网上文章说要用setprop net.dns1 dns服务地址来设置dns，但我设置后没有效果。最后是在无线交换机上的dhcp设置里设置dns为拨号获取的dns后成功的。\n因为用终端输命令比较麻烦，我又编写了专门的安卓程序，利用adb shell可以获取root权限这一点运行设置命令。\n折腾了半天，iptv的效果却并不十分让人满意。首先是频道少，然后因为被我用作无线交换机的路由器的无线速率只有54Mbps，而且隔了一堵墙，连接的速度不佳，测试最快只有4Mbps。我也懒得再专门买一台无线路由器了。另外，自带的程序还有当贝桌面会不断检测网络，提示网络未连接，并修改路由，导致不能连接。再有就是虽然我写了个安卓程序，但操作还是不友好，对于家人来说很麻烦。\n现在机顶盒主要用来连接新的无线路由来当作网络盒子用了。运行各种tv应用，看网络电视也还是可以的。\n更新\n\niptv会拦截home键，使得进入iptv后不能调回当贝桌面。我发现查键盘后可以用alt+tab组合键切换出去。想通过修改键值用遥控器实现这一功能，但失败了。发现安卓的键值里有APP_SWITCH，但需要触摸操作，不能用按键切换。好在APP_SWITCH后跳出了iptv，home键就又可以用了。最后修改了遥控器一个按键的键值为APP_SWITCH，显示切换任务时再按首页键从iptv返回当贝。\n手动修改boot.img，增加init.d支持，设置开机自启adb。这样可以解决应用启动adb会不响应的问题。\n设置拨号应用开机自启，并运行一个检查连接状态的service，这样就可以较好地实现iptv的功能了。*\n", "filename": "2018-01-19-setting-up-fiberhome-hg680-j-the-china-telecom-iptv-device.md"}, {"id": 131, "text": "\ndate: 2018-02-03 17:01:50+08:00\nlayout: post\ntitle: 吾生也有涯，而知也无涯\ncategories: 随笔\ntags: \n\n最近重温eva，第一次看是2011年的寒假，现在已经7年过去了。我当年不懂日语，但暑假睡前循环放eva，也算打下了日语的语音语调的基础。学了多年日语二外后，我现在再听eva，基本上可以把每一个假名都听清楚，但很多具体的汉字怎么写我却不清楚，另外如果没有字幕，看起来还是很吃力。一时兴起，便想找eva的日语字幕。\n此前我也有找过，日本亚马逊上的dvd是带日语字幕的。其实字幕的作用主要还是针对听力障碍的人，网上日语的有关字幕的文章都是听障人士写的，但对于外语学习者也有帮助。可是我不知道怎么购买，当时就放弃了。而现在，我想肯定有国人会传到网上，我只要搜索日亚上的名称，应该会有资源下载。而我也确实找到了。\ndvd的iso下载下来，播放看看果然有字幕。但不清楚dvd的字幕如何提取成srt，后来发现dvd的字幕是以图片的形式做在视频文件里的。可以利用subrip提取（demux）图片和时间轴，然后在abbyy这样ocr软件的帮助下转换。不过原版字幕有振假名、有上下排列的，ocr识别会有错误，所以还是比较麻烦的。\n之后我便开始看纯日语字幕的eva，基本都能看懂，但长句、生词、片假名词多一点可能就不能理解了。我看了这么多年eva、学了那么多年日语，还是会有很多我不了解的东西。\n研究生阶段比本科更加强调自学的能力，我也是学了很多。主要是计算机技术（基础知识、编程实践）、语言（方言、外语、翻译练习、文化）这两方面。可以说光这两样就让我觉得有学不完的知识要学，而且还要有精通的领域。我这半年来工程实践能力在软件学院还是有提高的，但其它知识只能说泛泛了解，而且因为现在的学习都强调一个就业导向，学习时往往会有功利心，这样就会急躁。\n庄子里有一句话叫“吾生也有涯，而知也无涯”，随着我不断地学习知识，我也越来越发现知识是学不完的。每天都想学很多，但常常会有畏难情绪。另外随着年纪的增长，我就没有耐心像以前一样一步一步学习语言。所以说，学习还是要趁年轻呢。\n从小就知道有一字型人才，1型人才和十字型人才，对于注重个人发展的我，当然是想成为十字型人才。但跨学科的知识并不是那么容易学习的。我想，我应该打好人文和科学知识基础，而对于工程性的东西要了解方法。一些通过搜索就能知道的知识和技巧就不用特意去记。要把更多实践花在需要点滴积累的东西上面。\n3月2日更新\n根据Why Don't Students Like School，人在思考时要调用环境里的知识、人自身的暂时性的工作记忆和长期积累的长期记忆。只有知道了解的多，才能更快地解决问题。批判性思维的一个基础时要了解很多背景知识。\n所以不管是我们编程踩坑还是翻译练习，都是有必要的。比如我用b4x编写安卓应用，编过几个应用后，再编就会不假思索地沿用之前的解决方法，因为这更多的是调用记忆的过程，比较轻松。当然，我们时不时也要跳出某种思路，创造新的方法。", "filename": "2018-02-03-knowledge-is-infinite-and-my-life-is-limited.md"}, {"id": 132, "text": "\ndate: 2022-08-21 23:04:50+08:00\nlayout: post\ntitle: 学点人际关系的处理\ncategories: 笔记\ntags: \n\n本文主要是对戴尔卡耐基的《How to Win Friends and Influence People》一书的笔记。这本书的中文名叫《人性的弱点》。\n卡耐基在国内被营销为成功学大师。我其实对成功学这类词是比较反感的，不过他这本书我看了下还是挺好的。有很多人际相处经验，其实我自己也有总结出来，但不如这本书整理得那么细致。\n第一部分 —— 3条人际交往的基础原则\n\n不要随便批评、谴责和抱怨\n\n你问一个罪犯他认识到自己做错了吗，他可能没有意识到自己错在哪里，他反而觉得自己做了件对社会有益的事情。\n人很多时候是意识不到自己的问题的，如果有人突然言辞激烈地指出他的问题，他可能会激烈地为自己辩护，根本听不见意见。\n我们需要更深入地了解对方，理解对方这么做的原因。\n\n真诚地赞美别人\n\n人做一件事的动机是什么？很多时候是为了显得自己重要。\n比如考上很好的大学、打扮得很好看。\n而赞美则肯定了对方的重要性。\n\n发现对方的需求\n\n如果你想让一只羊进入羊圈，你会怎么做？推着羊的屁股让它进去还是用它希望得到的东西去吸引它？\n第二部分 —— 让自己受欢迎的六个方法\n\n对他人感兴趣\n微笑\n记住他人的名字\n做一个好的听众，鼓励他人谈论自己\n讨论他人感兴趣的话题\n让对方感到自己很重要\n\n第三部分 —— 说服别人\n\n避免争论。本科时一个老师上课说讯飞是哈工大的，我说不对，是中科大的。其实没有必要在老师的课上去争论这样的细节。\n尊重他人的观点，不要说“你是错的”。观点不一定完全是错的。\n承认自己的不对。比如在公共场所，因为人少就没戴口罩，别人可能会指责你，这时就大方承认自己不对吧。\n态度友好\n多得到别人肯定的回答\n让对方说更多的话\n让他人觉得是自己想出的某个主意\n尝试了解对方的观点\n与他人的观点产生共情\n基于更高尚的动机 \n具体化你的观点\n给一个能证明他人的挑战性的任务  \n\n第四部分 —— 给他人提建议\n\n先赞美再提建议\n间接地提起他人的不足\n先谈起自己的不足\n用提问的方式建议别人做某件事情而不是用命令的口吻\n让他人保存脸面\n赞美他人的进步\n给他人以好名声\n用鼓励建立自信，帮他人改正错误\n让他人乐于做你建议的事情\n", "filename": "2022-08-21-notes-on-how-to-win-friends-and-influence-people.md"}, {"id": 133, "text": "\ndate: 2018-02-19 17:32:50+08:00\nlayout: post\ntitle: 海信A2 Pro使用记录\ncategories: 电子数码\ntags: 护眼\n\n年夜饭前，我的Yotaphone2掉地上被车辗了，结果前屏内外屏都碎了。eink屏幕还可以用，但总归不方便。冷门手机没有国产的屏幕总成，只有原装拆机。闲鱼上二手的机子最低300元，拆机换屏幕也总没有原装好使，于是直接买了国产双屏手机——海信A2 Pro。海信出的第一部双屏手机是a2，a2 pro的处理器是骁龙625，性能更好。\n使用了两天，总结下海信的优点吧。\n\n作为17年出的手机，4G+64G，全网通，配置比yota2强多了，运行很流畅。\n主屏5.5寸，背屏5.2寸，屏幕更大，字大看着不费眼。重量虽然写着188g，但拿在手里并不十分沉重。\n水墨屏和yota类似，背屏有专门的界面。可以给程序设置清晰模式和流畅模式。前者类似于传统电纸书的局刷，后者则是瞬刷。局刷的质量很好，瞬刷则基本没有残影，刷新率很高。海信的launcher在切换到复制前屏模式时会将背景设置为空白，不像yota显示背景时带来很强的颗粒感。随机附赠了贴膜，因为双面都是玻璃，背屏的膜是磨砂膜。yota2的背屏是曲面的磨砂屏，褒贬不一，海信这样设计也可以接受。\n系统方面，海信的vision定制安卓还是比较符合国情的，功能也比较丰富。发现没有miracast投屏选项，用第三方软件打开设置后连接没有画面，改用dlna是可以的。\noled前屏和大家反应的一样，有闪烁，我把亮度调到最大，用手机摄像就看不出了。但亮度太大，得开夜间模式和护目镜。\n目前没有root和第三方recovery，根目录的许多文件都设置了权限，普通用户无法访问。想把kernel提取出来修改也是不行了。\n之前想过用大屏安卓eink配键盘做打字机，但9.7寸的文石太贵。现在用蓝牙键盘连a2pro，发现用键盘打字不见得比触摸打字快多少。我还有开发安卓上的cat软件的想法，如果用触摸方式的话可视面积会很小，显示原文还要再显示译文输入框就比较麻烦，这时还是需要用键盘。现在eink的生产力设备还是比较少，大上显示器虽然做的好，但还是需要另配一台电脑，总归不方便。\n\n目前对a2 pro还是很满意的，作为主力机使用了。", "filename": "2018-02-19-hisense-a2-pro.md"}, {"id": 134, "text": "\ndate: 2018-02-22 14:37:50+08:00\nlayout: post\ntitle: 免root的安卓linux环境\ncategories: 电子数码\ntags: \n\n我在使用htc g1的时候就折腾过在android上跑linux，当时建立一个debian系统的磁盘镜像，然后运行脚本chroot进去，再运行本地的vncserver，通过vnc客户端来运行lxde。\n但是手机毕竟屏幕太小，而且桌面linux都是针对键盘鼠标设计的，操作不便。唯一的用处可能就是能运行个服务器程序。但是当时只有3g网络，而且流量很贵，放在家里连wifi也有其它设备可以用。现在有4g了，但还是需要用花生壳之类的软件进行内网穿透。\n所以主要的用途就是本地跑程序玩，如果可以接上键盘鼠标和大显示器的话可以当linux电脑用。\n因为海信a2pro的电子墨水屏，我很想在它上面跑一些生产力工具看看。网上我也碰到了用13.3寸的文石max来跑linux的。\n因为海信a2pro没有root，所以只能用不需要root权限的chroot——proot来进入纯linux环境，或者使用termux这样在安卓系统分配的沙盒内运行单用户的一个linux环境。\n我试用了基于proot的ubuntu noroot，效果不好。另外还有同一个作者的xserver for android，因为xorg是c/s架构，可以在运行基于x的程序，但没有一个窗口管理器总归不方便。\n最后还是觉得termux最好用。使用termux自身提供的包就可以实现很多功能，也可以用proot登录debian、arch这样的纯正环境里。\n测试proot到debian还是会有权限的问题，毕竟它只是一个fakeroot。所以根文件系统我是在电脑上用qemu-debootsrap制作的，不然会报错。因为之前给mips的龙芯也做过，所以比较顺手。和用户相关的命令，如adduser、passwd、ssh都会有问题，因为没有root。termux支持的ssh server也不能用户登录，需要使用密钥。\n不多折腾了，鼠标键盘、windows和专业软件才是生产力。linux on android只能满足特定时候的一些特定需求，搭配superbook这样的设备才算实用一点。", "filename": "2018-02-22-linux-on-android.md"}, {"id": 135, "text": "\ndate: 2018-02-23 10:22:50+08:00\nlayout: post\ntitle: 网络抓包\ncategories: 网络\ntags: \n\n抓包是很有黑客感的一项操作，今天来讲讲。\n百度百科关于抓包的解释：抓包（packet capture）就是将网络传输发送与接收的数据包进行截获、重发、编辑、转存等操作，也用来检查网络安全。抓包也经常被用来进行数据截取等。\n之前写江大正方教务系统成绩查询软件时就用到了火狐的抓包插件httpfox，分析http post的内容。视频网站上的视频，也会用浏览器自带的调试工具进行分析，能得到单个完整的视频文件的链接自然是最好的，但现在很多都把视频文件分成多个小文件，就需要批量处理了。\n常用的抓包软件有wireshark、fiddler和charles等，功能都很强大。安卓上也有packet capture这个软件，利用系统的vpnservice来使自己成为中间人。\n一个无线网内，如果不是ap，想要截取其它客户端的包，一般可以开启无线网卡的监听模式，或者在本机架设代理，然后客户端连接那个代理。Fiddler和Charles都支持代理。\n现在https逐渐普及了，fiddler和charles都支持对于https的解密。\n最近两天做的抓包是截取海信a2pro的ota更新包和给仍然跑着ios8的iphone5C下载可以运行的旧版powerpoint的ipa。\nota包是用packet capture抓的，本来想解包boot.img的，但是发现都是patch，不知道怎么搞。海信a2pro的bootloader是有锁的，也刷不了添加root的boot.img。\n给iphone抓旧版软件包网上的教程很多了（例如：利用 Fiddler 下载旧版本 iOS App），大多是使用的fiddler在windows上抓，因为新版的itunes不能直接下载ipa了，需要下载12.6的老版itunes。这里吐槽下越狱的软件源和xx助手们居然都没有保存旧版ipa。\n使用fiddler获取包含软件各个版本号的xml文件，然后在截获下载请求（相当于断点调试啊），修改请求的包里的版本号为想要的旧版版本号，然后itnues就会下载下旧版的ipa，并对ipa进行签名处理。\n下载下来1.2.2版本的powerpoint，功能不多，但是显示效果还是比wps好不少的。", "filename": "2018-02-23-packet-capture.md"}, {"id": 136, "text": "\ndate: 2018-02-23 10:44:50+08:00\nlayout: post\ntitle: 折腾无线投屏\ncategories: 技术随笔\ntags: \n\n读研期间做的最多的一件事就是做ppt然后上台汇报，大家轮番带着自己的电脑上阵或者将文件到拷贝到一个同学的电脑上。软微的教室都没有电脑，需要自己带设备去连接投影仪。\n投影仪的接口当然是vga的。我的x62只有minihdmi和minidp接口，使用转接器发现连接不稳定，关键时刻显示不出来。另外x62的4芯电池的电量实在有限，顶多两个小时就要关机了。\n于是寒假期间我研究了以下无线投屏（同屏）器，发现这真是神器啊。\n先讲一下目前的投屏技术，主要是dlna、airplay、miracast和widi。前两者要连在同一个无线网里，后两个是使用的无线直连技术，可以投屏的同时连别的无线网。\ndlna大多数设备都支持，airplay是苹果设备使用的，miracast大多数安卓和pc都支持，应该对无线网卡有要求。widi是微软和英特尔推的，miracast基于widi的，现在用的不多，就不提了。以上技术除了dlna，基本不需要第三方软件。dlna是设备把视频传给投屏器，让投屏器自己解码播放。这也是为啥投屏器参数里讲支持的文件格式的原因。\n相比于几百元的正版苹果的有线lightening转hdmi和各种正版无线投屏适配器，国产的投屏器大概只有几十元。主要有海倍思和各种山寨ezcast。\n我选择的anycast m4 plus只要55元，使用了瑞芯微的多屏互动芯片RK3036，winbond 25Q128BVFG 16MB NOR flash ROM和samsung k4t1g164qf-bcf7 128MB RAM，支持自己建热点让用户连接，传输速率很快，可以同屏、可以放视频，效果不比有线差多少了。不过做工是一般，不知道能用多久。\n测试iphone5c、x62和moto g都能用。yota和海信a2pro因为双屏貌似用不了。我还测试了windows phone，htc8x的硬件并不支持投屏，应该只有少数wp设备支持。\n另外现在的电视盒子、智能电视也都支持无线投屏了。不过大多要额外装软件，我给烽火hg680装了个乐播投屏，手机上再装对应的客户端就可以用了。\n3月2日更新\n我在软微实际和教室的投影仪连接了一下，海信a2pro用airpincast使用dlna镜像太卡，moto g 二代配置太差，延迟严重。iphone5c的airplay和windows电脑的miracast则比较流畅，基本同步。\n3月10日更新\n关于让windows设备成为miracast的接收端（miracast server or receiever or sink），以前可以用airserver，支持mac和pc，支持airplay和miracast，就是要花钱。\n现在win10的周年更新版已经自带这一功能了，点开始菜单，打开连接这个软件就可以了。\n测试android可以投射屏幕，并输送音频。用另一台windows连接还可以设置为扩展屏幕，也可以在支持投射的视频播放软件里把视频投到server上播放。\n\n12月4日更新\nLinux上可以使用miraclecast和shairplay实现miracast sink和airplay server的功能。miraclecast还比较挑无线网卡，有的网卡并不支持，比如rtl8188eu芯片的水星mw150us，而我的ar9271芯片的tplink 322g+老无线网卡倒支持。\nAndroid在4.2后一般都不能当做miracast的接收端，不过有一款软件叫airscreen，可以让全平台的设备无线投屏到Android设备上。", "filename": "2018-02-23-wireless-display.md"}, {"id": 137, "text": "\ndate: 2018-02-25 17:21:50+08:00\nlayout: post\ntitle: 想有一台电子墨水的windows平板\ncategories: 随笔\ntags: 护眼\n\n最近入手海信a2 pro，用otg连鼠标键盘，在开启流畅模式的编辑器内配合百度输入法的效果很好。\n如果屏幕大一点，系统换成有更多生产力软件的windows就好了。\n大上显示器只是显示器，便携性不佳。而传统pc厂商可能不会出eink的笔记本电脑，毕竟相比彩色液晶，画面色彩和流畅度上还是有欠缺，大众用户对eink的需求也不大。\n现在文石出的大屏eink就是安卓平板了，也可以在上面装linux，但总归还是希望支持windows系统。\n我使用过驰为hi8 pro，x86架构的8寸平板，支持安卓和windows双系统，自带的1080p ips不闪屏效果也很好，但总归还是eink更适合文字工作。8寸的屏幕的确比较小，字也比较小，偏向于手持使用，10寸以上更适合接键盘用。\n用x86的cpu可能续航稍微差点，但应该可以做到比大多数笔记本的续航好。", "filename": "2018-02-25-eink-x86-windows-tablet.md"}, {"id": 138, "text": "\ndate: 2018-02-27 17:00:50+08:00\nlayout: post\ntitle: 在移动设备上使用ssh隧道\ncategories: 技术随笔\ntags: \n\nssh隧道外国人一般用来加密通讯，而国内则有了特殊的用途。\n我最近也用ssh隧道来使用家里的电信网络，因为软微的网络会无法访问一些网站。此前也有写用ssh进行内网穿透的文章。\n现在想在安卓和iOS等移动设备上使用ssh隧道。\n这里给出三种方法：\n1、本地运行ssh，进行端口转发，建立socks代理。再使用privoxy将socks代理转为http代理。\n运行以下命令建立socks代理：ssh -qTfnN -D 7070 xxx@x.x.x.x -p port\n在privoxy的配置文件中加入以下内容：forward-socks5   /               127.0.0.1:7070 .\n2、在vps上直接建立好http代理，直接设置代理即可。\n3、在vps上建立socks代理，在移动设备上使用pac文件配置。\n安卓已经有ssh tunnel这样的软件了，但是需要root。对于没有root的手机可以使用termux。但我测试使用termux自带的ssh和privoxy无法连接，可能proot到debian可以成功。第三种方法也没有测试成功。我转而采用第二种方法。\n因为担心直接在vps上运行相关程序会被封，所以改用家里的树莓派连接并建立http代理。然后手机上设置http代理的地址和端口就可以了。使用移动数据时可以通过修改apn里的代理来使用。", "filename": "2018-02-27-ssh-tunnel-for-mobile-devices.md"}, {"id": 139, "text": "\ndate: 2018-02-28 11:50:50+08:00\nlayout: post\ntitle: 写爬虫遇到的一点问题\ncategories: 技术随笔\ntags: \n\n最近吴语学堂改版了，主页变成一个简单的form，可以查询字音。各地的字音汇总在一起。我便想做一个包含吴语各地字音的mdx文件。\n我用rime提供的吴语码表作为查询的单字的来源。获取这些字音后其实再做一个rime的拼音方案是可行的。\n我用python requests下载失败，之后使用python2+urllib2解决了。获得的数据经过gzip压缩的话还要解压，不过可以修改Accept-Encoding控制直接获得文本。requests失败后测试用fiddler是正常的，本来以为是没有定义好header。第二天才发现是requests的参数写错了，post和get的参数不一样，一个是params，一个是data。之后测试成功，requests的高度封装的一个好处是可以直接解压gzip的结果。\n还有一个问题是在windows上的编码问题，在cmd里如果设置代码页为utf-8，直接输入的汉字编码有问题，还是要用默认的gbk代码页。所以开python交互界面调试时一不小心就会陷入坑里。\n用python和b4x的一个差别就是前者我倾向于直接使用网上提供的代码，而后者我会先找到官网论坛的tutorial，把每行代码都研究清楚。而b4x的ide也的确更加智能，看来我要换一个python ide了，自带的idle不够智能。", "filename": "2018-02-28-problems-met-using-python-to-crawl.md"}, {"id": 140, "text": "\ndate: 2018-02-28 11:50:50+08:00\nlayout: post\ntitle: 修改网页的css以支持电子墨水设备\ncategories: 技术随笔\ntags: \n\n现实网页的颜色丰富多彩，但是并不适合eink设备浏览。常常会有字体过浅，对比度不够的情况。我们就需要修改网页的css。\n这个在hipda上12年就已经有过帖子了：nook2之opera上网效果优化---瞬刷党勿入。在安卓系统的nook2上利用支持插入css的opera。\n海信a2pro的性能就强很多了，能运行firefox和chrome。可以支持插件。这里我们可以用firefox的stylish插件，安装Black and white for E-ink这个用户定义的样式，这样网页的文字和背景就可以是黑白模式了。\n另外阅读软件方面还有koreader，支持加黑字体。而且扫描版pdf也支持，加上切边功能，横屏模式下可以满足阅读扫描版pdf的需求。", "filename": "2018-02-28-use-custom-css-for-eink-devices.md"}, {"id": 141, "text": "\ndate: 2018-03-09 20:26:50+08:00\nlayout: post\ntitle: 在Vmware上安装64位凤凰OS\ncategories: 技术随笔\ntags: \n\n昨天看到了chromebook，续航好，还支持安卓应用，心水了一下。寒假习惯了在安卓机顶盒上看电视，发现windows上没有对应的软件非常不方便。实机运行了凤凰os，体验还是不错的，在富士通10.4寸的屏幕上还是移动版网页效果好，另外凤凰os基于android x86深度定制，已经非常适合作为桌面系统使用了。\n不过实机安装还是不如windows加虚拟机方便，虽然测试比windows省电。决定还是在vmware上装一个。\n其实要运行安卓应用，可以用chromeos-apk在chrome上运行或者装bluestack或者直接qemu就行了，但是实际效果还是不理想。还是用vmware player装省心。\n我下载的是凤凰os的64位版本，需要在虚拟机的设置里开启3d加速，不然可能停在android那里。\n默认vmware是不支持efi的，我们要修改vmx文件，添加firmware=\"efi\"进去，之后启动就会进入grub efi而不是isolinux。\n然后就是建立一个efi分区，建立一个系统分区，再装efi grub就可以了。\n具体参考官方教程：.iso镜像文件如何使用\n使用adb connect 凤凰os分配的ip地址可以连接上，并且可以有root权限，以后要调试安卓应用也可以用这个。\n3月10日更新\n我又在驰为hi8pro上装凤凰os，因为该win板比较特殊，只能用32位的uefi，装起来比较麻烦。最新的linux内核是支持32位efi启动64位系统的，但我测试没成功。后来装x86版本的启动成功了，但是各种应用停止运行，而且不支持无线、触摸，看来还是需要专门的适配啊。我的驰为hi8pro是早期不支持安卓双系统的，没有remix os可以用，我也懒得发回原厂升级。还是放弃了。\n不过安卓程序要显示在windows上还有另一个方法就是用安卓手机miracast投屏到电脑上。见此:折腾无线投屏", "filename": "2018-03-09-phoenix-os-64bit-on-vmware.md"}, {"id": 142, "text": "\ndate: 2018-03-15 19:54:50+08:00\nlayout: post\ntitle: 配一台模块化的笔记本\ncategories: 电子数码\ntags: \n\n最近上课用x62，深感电池不够用，只能用两个小时不到，我得带两块四芯电池。于是在51nb上看能不能改善。发现有人说想用nano-itx的intel主板来升级t61。这又勾起了我对x86迷你设备的兴趣。\n其实现在最流行x86迷你设备就是windows平板了。更加精简的有intel compute stick。我发现有人用它接moto atrix的扩展坞（laptop dock），就变成了一台笔记本。其实类似的还有superbook，支持安卓设备变成笔记本。\n那我想，用intel compute stick加上便携的显示器、键盘以及一个移动电源，不就相当于一台笔记本电脑了吗？\n具体想了下，应该这样配：\n1、intel compute stick，z8300的atom处理器就够用了。不选树莓派主要也是需要运行windows。\n2、支持usb供电的便携显示器，这个淘宝有了，10寸到20几寸都有。\n3、支持5v2a输出，带多个输出口的的大容量移动电源\n4、无线键鼠，可以用thinkpad tablet 8的蓝牙键盘，带小红点。\n我标题取的模块化笔记本，真的是“模块化”。。真正的一体化笔记本还是要方便很多，不过上面这套的定制性很强啊，价格也便宜。", "filename": "2018-03-15-diy-your-modular-laptop.md"}, {"id": 143, "text": "\ndate: 2018-03-17 17:32:50+08:00\nlayout: post\ntitle: 做一个比赛报名系统\ncategories: 技术随笔\ntags: \n\n计算机辅助翻译和技术传播大赛要开始了，这次要收报名费。之前北大翻译协会的网站都是静态页面，使用mikecrm制作问卷，然后选手把做好的题目发送到邮箱。\n我这次打算做一个自动化的报名系统和翻译作品提交系统。\n具体流程其实很简单：\n邮箱注册-验证邮箱-报名缴费-提交作品-查看分数\n这次使用的技术是b4j的abmaterial，基于websocket，我可以像写安卓应用一样来写网页，很简单，不需要太多前端技术的知识。\n首先要解决的是一个账号系统。需要支持通过smtp使用邮箱发送邮件验证邮箱地址和重置密码。不过一般的vps是封锁25端口的，digitalocean更是直接封了smtp，需要开ticket解封。验证邮件的验证码我直接生成一串随机数再用base64编码的。\n然后是收费的问题，因为译协没有营业执照，而个人不能直接使用微信和支付宝的api，我便转向使用paypal。一开始以为会很复杂，其实paypal的REST api很简单，也不用导入什么sdk。paypal有ipn和pdt两种通知交易成功的方法，网上也有中文教程。但是测试paypal时发现不能用绑定的银联银行卡付，而且paypal本身对银联的卡支持的不全。后来发现b4x的官网使用的fastspring支持各种支付方式，还包括支付宝。便转而使用这个支付平台。另一个美国的支付平台stripe也和支付宝微信有合作，但不支持中国商户。\n微信api不支持个人收款，但有第三方的payjs支持，且不是二次结算。fastspring上用支付宝则是二次结算的，用户先打给fastspring，然后商户再收到付款。不过好处是个人用户也可以用支付宝收款了。\nfastspring的使用非常用户友好，webhook的添加也比较简单，可以直接给指定的服务器url发送响应事件的json，也支持测试模式和上线模式。\n这样，一个报名系统就基本构建完成了。\n", "filename": "2018-03-17-building-a-competition-registering-system.md"}, {"id": 144, "text": "\ndate: 2018-03-24 20:44:50+08:00\nlayout: post\ntitle: 寻找建站的最佳方案\ncategories: 技术随笔\ntags: \n\n最近一直编写第七届计算机辅助翻译与技术传播大赛的报名系统。预计会有几百人参加，主要是国内用户。需要完成报名、缴费、提交作品和查看成绩等功能。\n功能实现上不算复杂，我把服务架设在digitalocean的德国节点上。现在do提供的最低5美元套餐的内存升级到了1GB，应该说性能上没什么问题了。另外带宽不受限。\n但是唯一的缺点是ping在200ms左右，存在反应速度慢的问题。\n我测试腾讯云的学生版和我家里电信百兆光纤网络下的树莓派的ping值都很低，在40~60左右，反应速度会好很多。但是它们的不足就是上行速度不高。腾讯云只有1Mbps，电信宽带则是4Mbps。另外电信封了80，443端口，只有使用花生壳或者ngrok等内网穿透服务进行端口映射。\n使用国内主机的一个问题就是备案。现在比赛快开始了，短时间内备案应该来不及。我想过用花生壳的二级域名绑定腾讯云，然后在把顶级域名cname到二级域名上，以此来实现免备案。但国家的系统应该会检测ip，终究是有风险。\ndo的服务器在德国，所以国内访问慢，那就办个日本的vps吧。但是vultr的日本节点的ip地址基本都被封了。\n最后还是回到do，目前看来还是它最稳定，速度慢点就慢点吧。听v2ex上说用最新内核开bbr，速度会改善，不过目前我也懒得冒风险去升级。另外还有开cdn加速静态文件，不过像七牛云是要求域名备案的，而且我的静态文件也不是很多。", "filename": "2018-03-24-choosing-where-to-hold-my-website.md"}, {"id": 145, "text": "\ndate: 2018-03-24 20:44:50+08:00\nlayout: post\ntitle: 本站现适配移动设备\ncategories: 技术随笔\ntags: \n\n一直使用yonsm改的webfrog这个主题，简洁明了。但是默认不支持移动设备。\n参考阮一峰的自适应网页设计，进行了适配。\n主要的修改是添加viewport元标签，并在css里添加@media。", "filename": "2018-03-24-my-site-is-now-responsive.md"}, {"id": 146, "text": "\ndate: 2018-03-31 12:21:50+08:00\nlayout: post\ntitle: 写在CATTC大赛试题发布后\ncategories: 技术随笔\ntags: \n\n之前开发的大赛系统其实很完备了，但是老师还是不放心，而且vps在德国比较慢。最后让我用mikecrm收取报名表，把大赛网页放在github pages上。提交作业的平台我换做了课堂派。都是现成的saas服务。\n试题组委会决定不公开，只有报名了的同学才能看到。因为报名表在试题发布之前就可以填了，我在试题发布当天需要给200多名选手发送邮件。\n我用b4j写了一smtp邮件批量发送程序。邮箱服务我选择的腾讯企业邮箱，免费版每天可以发送500封邮件。后来因为域名问题，老师让我用zoho mail。这个邮箱没有腾讯良心，每小时限制50封邮件，而且免费版不支持smtp。于是最后还是用的腾讯邮箱。测试一小时发上百封没有问题。当天软微的教育网光纤断了，网速只有不到1Mbps，仍然成功发送了200多封邮件。不过花了两个多小时时间，我要是在服务器上发肯定要快很多。\n第二天，既然大赛试题发布了。就可以让选手自己报名后下载了。我一开始想的方式是选手输入报名时填的邮箱，验证后获得下载地址。这个可以给已经提交了报名表的同学用。此后提交报名表的同学，将数秒后自动跳转到试题下载页面。\n试题我现在放在了七牛云上。七牛云使用了cdn，更新文件后不能及时更新缓存。这时在下载链接上加上参数就可以直接访问最新文件了。", "filename": "2018-03-31-after-the-release-of-CATTC-questions.md"}, {"id": 147, "text": "\ndate: 2018-04-05 11:08:50+08:00\nlayout: post\ntitle: Rime\ncategories: 技术随笔\ntags: \n\nrime是跨平台的输入法引擎，封装了输入法的逻辑，然后各大系统的输入法是要写个前端调用就行了。最近想用它来做一个在线吴语输入法。\n编译\n编译是一件高深的事情。没有对编译原理、各种工具的了解和c语言基础，我的感觉就是在瞎试。\n在64位linux上碰到的主要问题是动态库的问题，需要.so而不是.a，要在cmakefiles里的definition里加上-fPic。\nwindows平台最好还是用bash on windows。默认支持用vs的工具集编译，但我对windows这套工具也不熟悉，编译变量不会设。而在cygwin里安装会碰到各种错误。\nc++程序的编译真是一件复杂的事情，有各种依赖。所以能折腾linux的人都是大神啊。\n最后我在linux上编译成功了。但我发现其实用现成的库就行了。linux的发行版一般都带librime，而windows的小狼毫安装文件里有rime.dll。\n调用\nrime的文档并不是很完善，主要的api都在rime_api_console.cc这个文件里。java语言通过jni可以调用c++库来运行，安卓上的同文输入法就是这样做的。其它的python、lua等语言都可以。但目前我的水平都看不懂那个文件。要是都像rest api一样简单就好了。\n以上是讲的我编译安装的痛苦经验，以后再讲怎么用吧。", "filename": "2018-04-05-rime.md"}, {"id": 148, "text": "\ndate: 2018-04-09 19:46:50+08:00\nlayout: post\ntitle: 简单网页之美\ncategories: 随笔\ntags: \n\n\n北京经过了上个星期在一个星期内的四季变化，终于又回到了春天的轨道。在安静的夜里看书上网显得格外自在。\n今天看了下潘文国的中文危机的超星视频，里面提到了他对于文言文的倡导和他翻译《赫兹列散文》的目的。\n我便去找他翻译的这本散文集。发现网上有人贴了英文原文的地址：http://www.blupete.com/Literature/Essays/Hazlitt/FeelingImmortality.htm。这是一个外国律师自己办的收集散文的网站。我一看这界面真的很简单，基本上就是文字。虽然还嵌上了google ads和paypal等东西。\n发现这类文学性强的东西还是适合用简单原始的网页来呈现啊。\nCATTC大赛的网页我是用mobirise这个网页生成器做的，基本上就是拖拽设置下就能做出还可以的现代页面。但是不如自己全新设计页面，手写代码那样有成就感。我最近帮我一个翻译学同学改网页，她在w3cschool的教程中找了一个简单的单页面，把她希腊神话的公众号文章放上去。我主要是帮忙设计了导航栏和修改了一些布局。基于任务写网页还是很开心的。mobirise还有的另一个问题就是自己想对页面有完全的掌控需要手动去修改css文件，但是这在下次更新文件后还得手动修改，也不利于版本控制。\n各大高校的BBS，如日月光华、小百合，使用的传统的KBS，一般搭配的wForum后者nForum界面，而新版北大未名则有了很大的变化。的确kbs不易维护，前端的代码也很不优雅。但我就是喜欢那种界面。它使人专注于内容，没有太多的distraction。", "filename": "2018-04-09-the-beauty-of-simple-webpages.md"}, {"id": 149, "text": "\ndate: 2018-04-11 11:43:50+08:00\nlayout: post\ntitle: 提取viki.com视频字幕及介绍两种网页字幕\ncategories: 技术随笔\ntags: \n\n最近翻译课的展示要做美版《甄嬛传》，于是到netflix上想看看有没有中文字幕。之前的文章提取netflix上的字幕讲了如何提取字幕。但是发现netflix会检测代理，将主流的vps的ip都给封了。这下看netflix就成了问题。\n另外一个视频网站viki.com则没有这个限制。viki.com的字幕是其召集志愿者进行翻译的，支持的语种多，和netflix相似。但是质量则要差许多。\n需要下载的话，只需开启网页的开发者工具，等网页加载，然后搜索vtt就可以得到下载地址。\n类似这样的：https://api.viki.io/v4/videos/1080083v/subtitles/en.vtt?app=100000a&sig=17e06a202e2c49a97e37f5dc3e59c3b545480cb1&stream_id=67775977&t=1523350508\n下载下来的是vtt格式字幕文件，与srt类似，就是第一行多了webvtt，时间轴毫秒部分前的逗号变成了句号，另外还支持一些标签。现在windows10的视频播放器默认就支持这一格式。\n以下是例子：\n```\nWEBVTT\n1\n00:00:03.130 --> 00:00:09.660\nSubtitles brought to you by The Empresses Team@viki .com\n```\n而netflix使用的是其修改过的ttml字幕文件，一般的ttml是HH:MM:SS这样的时间轴，而它是以乘以10000000的秒存储的。\n```\nIt was here that Mei was pushedand fell into the water.\n```", "filename": "2018-04-11-extract-viki-subtitles-and-two-types-of-web-subtitle.md"}, {"id": 150, "text": "\ndate: 2018-04-15 20:38:50+08:00\nlayout: post\ntitle: 从omegat的docbook构建成品文档\ncategories: 技术随笔\ntags: \n\nOmegaT的文档使用docbook写的，使用的docbook版本距今已经有大约12年历史了。它可以从xml文件转换为html、pdf等常见文档格式。\n文档的说明见此：https://github.com/omegat-org/omegat/tree/master/doc_src。\n可以看到，只有windows和macos的操作说明，没有linux的。\nwindows下收集所需软件包是件费劲的事情，我还是直接用linux吧。\n直接把omegat的源码下载下来，进入doc_src文件夹，运行gendoc.bat里的生成中文pdf的命令：ant -Dlanguage=zh_CN pdf-cjk，失败。主要是因为一些环境配置不对。\n我们首先在debian系统上装必须的软件\n# apt-get install fop libxml2-utils docbook-xsl docbook-xml\n然后修改build.xml文件，把docbook-utf8.xsl和doc_src_paths.xml前的../../删掉。然后修改doc_src_paths.xml为以下内容：\n```\n\n\n\n\n\n\n```\n以上请根据实际情况配置。fop我是直接下载的二进制包，地址如下：https://mirrors.tuna.tsinghua.edu.cn/apache/xmlgraphics/fop/binaries/fop-1.1-bin.zip。\n另外还要修改docbook-utf8.xsl文件，把有c:\\dbk的那行改为<xsl:import href=\"/usr/share/xml/docbook/stylesheet/docbook-xsl/html/docbook.xsl\"/>\n还有build.xml的以下部分要改：\n<target name=\"pdf\" depends=\"fo\">\n        <fop format=\"application/pdf\"\n             fofile=\"${language}/PDF/OmegaT_documentation.fo\"\n             outfile=\"${language}/PDF/OmegaT_documentation_${language}.PDF\"\n             basedir=\"${language}/\"\n             userconfig=\"fop.xconf\"\n             force=\"true\" />\n    </target>\n主要是大写的PDF要改为小写，因为此前生成的.fo文件是在小写的pdf里。真是让人吐槽omegat的代码。\n另外可以看到build.xml里使用了Arial Unicode MS这一字体来显示汉字，我们需要复制windows系统下的ARIALUNI.TTF到/usr/share/fonts里。\n如果还遇到有错误就看提示解决吧，主要是文件路径问题。\n运行ant -Dlanguage=zh_CN pdf-cjk生成pdf，ant -Dlanguage=zh_CN html生成网页，都没问题了。", "filename": "2018-04-15-build-omegat-docbook.md"}, {"id": 151, "text": "\ndate: 2018-04-15 14:10:50+08:00\nlayout: post\ntitle: 搭建自己的GitHub Pages服务器\ncategories: 技术随笔\ntags: Web\n\n最近我们专业在进行OmegaT的本地化项目，其中包括了omegat的网站，是jekyll生成的。我把它放到github pages上，但生成失败，提示有不支持的tag。看来github的jekyll缺少插件。那我们就本地用jekyll生成吧。\n但是配置环境还是挺麻烦的事，还是直接配一台自己的github pages服务器方便，其它人也可以用。\n下面是具体步骤：\n1、安装jekyll\ndebian linux下用以下方法安装：\n# apt get install ruby ruby-dev make gcc g++\n# gem install bundle jekyll\n注意不要用apt装jekyll，会报错。\n2、clone远程omegat的网页仓库\n$ git clone https://github.com/omegat-org/omegat-website\n之后进入仓库，运行JEKYLL_ENV=production bundle exec jekyll build就可以生成页面了。\n3、建立本地git仓库\n首先建立一个供其它用户使用git的账户\n# adduser git\n切换到git用户\n#su git\n建立裸仓库。git的服务器端必须用--bare。\n$ git init --bare web\n这里我预期用户需要上传仓库的内容不是omegat网站的全部内容，而是zh_CN文件夹部分。\n4、配置lighttpd\njekyll生成的是静态页面，可以用lighttpd来提供服务。\n因为此后要用git账户修改www文件夹的内容，所以选择用git账户启动lighttpd。\n以下是lighttpd.conf的内容：\n```\nserver.modules = (\n        \"mod_access\",\n        \"mod_alias\",\n        \"mod_compress\",\n        \"mod_redirect\",\n        \"mod_rewrite\",\n)\nserver.document-root        = \"/home/git/www/html\"\nserver.upload-dirs          = ( \"/home/git/var/uploads\" )\nserver.errorlog             = \"/home/git/var/error.log\"\nserver.pid-file             = \"/home/git/var/lighttpd.pid\"\nserver.username             = \"git\"\nserver.groupname            = \"git\"\nserver.port                 = 8080\nindex-file.names            = ( \"index.php\", \"index.html\", \"index.lighttpd.html\" )\nurl.access-deny             = ( \"~\", \".inc\" )\nstatic-file.exclude-extensions = ( \".php\", \".pl\", \".fcgi\" )\nurl.rewrite-if-not-file = (\n  \"zh_CN/(.+)\" => \"zh_CN/$1.html\"\n)\ncompress.cache-dir          = \"/home/git/var\"\ncompress.filetype           = ( \"application/javascript\", \"text/css\", \"text/html\", \"text/plain\" )\ndefault listening port for IPv6 falls back to the IPv4 port\ninclude_shell \"/usr/share/lighttpd/use-ipv6.pl \" + server.port\ninclude_shell \"/usr/share/lighttpd/create-mime.assign.pl\"\ninclude_shell \"/usr/share/lighttpd/include-conf-enabled.pl\"\n```\n可以建立一个shell脚本来启动，内容如下：\n```\n!/bin/bash\n/usr/sbin/lighttpd -f ~/lighttpd.conf\n```\n这里我给lighttpd开启了mod_rewrite功能，主要是因为omegat的链接有的是/documentation这样的，需要补上.html。我用正则表达式试了好久，最后发现应该使用url.rewrite-if-not-file。另外用的是(.+)而不是(.*)以支持/zh_CN这样的路径。相比于用b4j写jetty的服务器程序，lighttpd给我的自定义空间要小了点。\n5、配置git hooks\n在git仓库的hooks文件夹里有很多示例的脚本，把它们文件名后面的.sample去掉就可以启动。另外，文件名会影响这些脚本在什么时候运行。比如这里我们需要的是post-update，在提交保存后进行操作。\n以下是脚本的内容：\n```\n!/bin/bash\ncd ~/git\nrm -rf web\ngit clone ssh://git@127.0.0.1:43999/home/git/web\ncd web\ncp -r * ~/omegat-website-master/_i18n/zh_CN\ncp yml/ ~/omegat-website-master/_i18n/\ncd ~/omegat-website-master/\nJEKYLL_ENV=production bundle exec jekyll build\ncp -r _site/ ~/www/html\npkill lighttpd\n~/run.sh\necho \"OKay!!!\"\nexit 0\n```\n因为服务器上的git仓库都是git objects，所以需要在本地clone一次。我还给git账户用ssh-keygen配置了公钥，免去输入密码的步骤。\n最后参考廖雪峰的教程，需要禁止git以ssh登录。修改/etc/passwd里git用户对应/bin/bash为/usr/bin/git-shell。但是我测试发现lighttpd的启动会有问题，就没有修改了。\n再具体讲一下操作流程：\n\n用户clone ssh://git@127.0.0.1:43999/home/git/web，用最新翻译出来的zh_CN文件夹的内容进行替换。\n用户提交，远程服务器将zh_CN文件夹放到jekyll项目里，生成网页到_site文件夹。\n将_site文件夹的内容替换lighttpd的www/html文件夹。\n重启lighttpd，结果生效。\n\n4.16更新\n其实OmegaT的网站开发者是有用jenkins这个持续集成（continuous integration）的工具，和git hooks的实现类似，不过更加方便。另外omegat的网站是放在github pages上的。才发现github pages有遮去路径中的html的功能。", "filename": "2018-04-15-build-your-own-github-pages-server.md"}, {"id": 152, "text": "\ndate: 2018-04-16 18:33:50+08:00\nlayout: post\ntitle: 超星的PDZ文件转PDF的一般方法\ncategories: 技术随笔\ntags: \n\n超星图书馆保存了我国很多珍贵的学术书籍，网上找不到的老书基本都能在它上面找到，而且画面质量很好。\n但是它使用了专门的格式，就不能满足我们在移动设备上使用的需求。当然，移动设备上装个超星的移动图书馆就行。但是江南大学的时候还可以登录，现在北大却登录不了，据说是没有购买这一功能。\n转换超星的pdg/pdz为pdf主要就是获取每页的图片，然后将其转为pdf，再加上书签。\n一种方法是通过windows上的xps document打印为oxps文件，再转为pdf。\n另一种方法是在阅读器打开时，进入用户的appdata/local/temp/buffer，复制生成的浏览的页面的bmp文件，我们可以用adobe acrobat将其转为pdf。获取buffer的图片，我们可以用按键精灵、autoit之类的程序控制超星阅读器进行翻页，然后复制图片。一般对于不能逆向或者挂钩子的东西，用脚本语言是比较方便的。\n另外，我们也可以直接从网页上爬取网页上的图片。只要在web上的东西，基本都能获取。注意的是，放大图片的话，生成的图片质量也会提高。\n之后还要给pdf瘦身，可以用abbyy finereader转换为可搜索的pdf。如果识别的效果好，会自动给目录加上跳转的章节的链接。\n生成书签的话，有人写出了读取pdg文件书签的程序。能够做得逆向破解是最好的，但是我技术不够。不过因为一般目录不会太多，采用人工加书签的方法也是可以的。", "filename": "2018-04-16-convert-pdz-to-pdf.md"}, {"id": 153, "text": "\ndate: 2018-04-17 19:45:50+08:00\nlayout: post\ntitle: 学写网页\ncategories: 技术随笔\ntags: \n\n大一时参加听雨技术部，气体给我们培训主要就是讲web前端开发，了解了jsfiddle这些网站，angularjs等js框架，jade/scss/coffeescript等预处理器语言。但当时对html/css/js这套东西不感兴趣，转去搞移动应用开发。当然，主要也是用的b4x。不过在项目实战中，我的编程技能还是得到了不少提升。\n有人说现在是个人人会编程的时代，如果说要学什么，还应该是网页。写了网页，挂上网，大家打开手机就能看到。而且现在的移动应用也多采用了混合模式开发。使用web技术的话进行热更新也容易。\n首先分享一些学习资源。\n\nw3cshool.cn/w3schools.com，一个中文站，一个英文站，教程和例子都很丰富，还有任务学习模式，和codeacademy类似。\ndeveloper.mozilla.org/en-US/docs/Learn。mozilla的教程很适合入门学习，它也提供高阶的教程。\n廖雪峰的JavaScript教程，访问量大，评论很多。\n\n学习路径一般都是html->css->javascript，然后进行一些实战操练。\n学了css，再学javascript时对元素选择之类的应该就没有问题了。如js里设置元素的样式(.style)里和css的属性会不一样，没有连词符，原来连词符后面的单词首字母大写。这样的不同点比较需要先了解了css。", "filename": "2018-04-17-learn-web-development.md"}, {"id": 154, "text": "\ndate: 2018-05-02 10:39:50+08:00\nlayout: post\ntitle: 反复推敲的写作\ncategories: 随笔\ntags: \n\n最近要回复老师邮件、要做汉译英翻译作业，几百个字的内容，往往要花上一小时的时间。\n回复邮件，要保证符合礼仪规范，注意不能有拼写和语法错误。翻译的话，在写作之前，往往便需要花上数小时进行前期的准备。\n最近看罗慕士翻译的《三国演义》，觉得翻译的很好。译者本身是西方的汉学家，花上十几年工夫才翻译出来，的确质量很好。而口译的话，因为时间有限，能把意思传达出来就很不错了。我有一次赶时间写笔译作业，反正不用交，只是上课会讲，于是像做口译一般把文章的意思都翻译出来。虽然意思都有了，但作为书面的资料并不严谨，要知道，书面材料是可能成为别人参考的对象的。\n同样需要反复推敲的还有朗读。昨天我试着用吴方言朗读《满江红》，因为吴语有入声，效果比普通话好。但我平时习惯的都是吴语的白话，要进行文读还是非常不适应。需要反复琢磨该怎么念。香港的梁逸峰因为用粤语朗读古诗，表情丰富成为网红。虽然对于他的表现方法不敢苟同，但是他对于原诗的琢磨还是值得学习的。\n现在社会是个快节奏的社会，往往需要在有限的时间内完成任务，质量要求还高。这是可能就没有什么闲情逸致进行反复推敲了。", "filename": "2018-05-02-refined-writing.md"}, {"id": 155, "text": "\ndate: 2018-05-04 20:31:50+08:00\nlayout: post\ntitle: 战棋游戏\ncategories: 随笔\ntags: \n\n小时候最常玩的电脑游戏除了铁甲风暴、帝国时代这样的即时战略游戏，应该就是战棋类游戏。\n当时的游戏都是买光盘来装的。新华书店里买了西山居的决战朝鲜，后来又在边上的软件店里买了三国志曹操传。曹操传装上去还是乱码，所谓的瓣B变巨肚，因为当时是台湾引进的曹操传，都是用的big5编码，到gbk编码的windows上要用四通利方等软件转码。不过小时候只知道玩，并不懂这些。\n曹操传出了很多MOD，比如岳飞传、杨家将传奇等等，当时都在轩辕春秋论坛上讨论，游戏的玩法会变得异常丰富。我读《岳飞传》和《杨家将传》还是在玩游戏之前，能够实际操作小说中的猛将的确是很高兴的事情。\n手机上的战棋只玩过拉阔的j2me版火焰之纹章，当时是装在我妈的三星j708上玩的，有一定可玩性。但2010年转用安卓后就没有接触到手机上的战棋游戏了。\n战棋游戏的正式名称叫战略角色扮演，以丰富的情节吸引玩家，往往能给人很大的代入感。\n玩曹操传时我便也把自己当作曹操，而游戏的设计也会迎合玩家心理，让我们替曹操做一些决定，并且保持曹操的一个正面形象。\n战棋游戏剧情丰富、需要考虑天时地利人和等各种因素，所需时间也长，在那个计算机刚普及的年代丰富了计算机的娱乐性。", "filename": "2018-05-04-SRPG.md"}, {"id": 156, "text": "\ndate: 2018-05-04 21:21:50+08:00\nlayout: post\ntitle: 本博客现使用HTTPS\ncategories: 随笔\ntags: \n\n在阮一峰博客上看到了Github Pages支持自定义域名使用https的消息，于是也试了下用https访问，发现可以了。\n然后按照官方的博文：Custom domains on GitHub Pages gain support for HTTPS ，设置了强制HTTPS访问。\nhttps对于github pages这个静态页面托管平台来说还是有一定的作用的，比如防止ISP篡改页面。我用移动网络访问博客时，经常会碰到广告。", "filename": "2018-05-04-my-site-now-uses-https.md"}, {"id": 157, "text": "\ndate: 2018-05-17 21:24:50+08:00\nlayout: post\ntitle: NLTK使用笔记\ncategories: 技术随笔\ntags: NLP\n\nNLTK是常用的Python自然语言处理库，因为它把算法、模型和语料等都封装好了，我们只需学会怎么使用。因此，这篇文章主要的作用是记录如何使用nltk。使用的例子都是来自nltk cookbook这本书。\n切分（Tokenization）\n切分可以分为句子切分和词切分，nltk默认用PunktSentenceTokenizer分句，用基于宾州树库分词规范的TreebankWordTokenizer分词。具体用以下命令做到：\n```\n句切分\n\n\n\npara = \"Hello World! Isn't it good to see you? Thanks for buying this book.\"\nfrom nltk.tokenize import sent_tokenize\nsent_tokenize(para)\n['Hello World!', \"Isn't it good to see you?\", 'Thanks for buying this book.']\n```\n\n\n\n```\n词切分\n\n\n\nfrom nltk.tokenize import word_tokenize \nword_tokenize('Hello World.') \n['Hello', 'World', '.']\n```\n\n\n\n默认的分词在遇到can't这样的缩写(contraction)时会分成ca和n't，如果不喜欢，可以用dir(nltk.tokenize)查看别的分词器并使用。\n我们还可以用正则来进行切分。上面提到的方法不支持中文，我们可以用正则来做一个中文分句（中文分词就太难了），方法如下：\n```\n中文正则分句\n\n\n\nfrom nltk.tokenize import RegexpTokenizer\ntokenizer = RegexpTokenizer(\".*?[。！？]\")\ntokenizer.tokenize(\"世界真大。我想去看看！你想去吗？不了。\")\n['世界真大。', '我想去看看！', '你想去吗？', '不了。']\n```\n\n\n\n词性标注\n对句子进行词性标注需要先进行切分。默认使用的标记格式是宾州树库使用的，具体见此：Alphabetical list of part-of-speech tags used in the Penn Treebank Project\n```\n\n\n\nimport nltk\nsentence = \"\"\"At eight o'clock on Thursday morning\n... Arthur didn't feel very good.\"\"\"\ntokens = nltk.word_tokenize(sentence)\ntokens\n['At', 'eight', \"o'clock\", 'on', 'Thursday', 'morning',\n'Arthur', 'did', \"n't\", 'feel', 'very', 'good', '.']\ntagged = nltk.pos_tag(tokens)\ntagged[0:6]\n[('At', 'IN'), ('eight', 'CD'), (\"o'clock\", 'JJ'), ('on', 'IN'),\n('Thursday', 'NNP'), ('morning', 'NN')]\n```\n\n\n\n命名实体识别\n命名实体识别类似于一种chunking，可以把是命名实体的部分括起来，需要在标记的文本基础上进行。\n```\n\n\n\nentities = nltk.chunk.ne_chunk(tagged)\nentities\nTree('S', [('At', 'IN'), ('eight', 'CD'), (\"o'clock\", 'JJ'),\n           ('on', 'IN'), ('Thursday', 'NNP'), ('morning', 'NN'),\n       Tree('PERSON', [('Arthur', 'NNP')]),\n           ('did', 'VBD'), (\"n't\", 'RB'), ('feel', 'VB'),\n           ('very', 'RB'), ('good', 'JJ'), ('.', '.')])\n```\n\n\n\n句法分析\nNLTK有自带宾州树库等树库，但是自身没有对生文本进行句法分析的能力，需要调用stanford parser等外部工具。\n```\n\n\n\nfrom nltk.corpus import treebank\nt = treebank.parsed_sents('wsj_0001.mrg')[0]\nt.draw()\n```\n\n\n\n\ntree类有很多方法可以调用，比如可以用fromstring从文本生成tree类。\n如何遍历tree可以见nltk的官方教程：http://www.nltk.org/book/ch07.html#code-traverse\nWordNet的使用\nWordNet可以被看作是一个同义词词典。里面的词都是以同义词集合（synset）作为基本建构单位进行组织。\n我们可以用以下方法查看某个词的近义词，并可以用来判断这个词存不存在：\n```\n\n\n\nfrom nltk.corpus import wordnet\nwordnet.synsets(\"pig\")\n[Synset('hog.n.03'), Synset('slob.n.01'), Synset('hog.n.01'), Synset('bull.n.05'), Synset('pig_bed.n.01'), Synset('pig.n.06'), Synset('pig.v.01'), Synset('devour.v.04'), Synset('farrow.v.01')]\nwordnet.synsets(\"piiig\")\n[]\n```\n\n\n\n其它还有查看上下位词、反义词，语义相似计算等功能，就不细讲了。\n词干提取和词形还原\n词干提取（stemming）就是把词的前缀后缀给去掉，使用代码如下：\n```\n\n\n\nfrom nltk.stem import PorterStemmer \nstemmer = PorterStemmer() \nstemmer.stem('cooking') \n'cook' \n```\n\n\n\n词形还原（lemmatization）则会把词转换为最基本的词，方法如下：\n```\n\n\n\nfrom nltk.stem import WordNetLemmatizer \nlemmatizer = WordNetLemmatizer() \nlemmatizer.lemmatize('cooking') 'cooking' \nlemmatizer.lemmatize('cooking', pos='v') \n'cook' \nlemmatizer.lemmatize('cookbooks') \n'cookbook'\n```\n\n\n\n我们可以发现，lemma需要根据词性来进行还原，比如cooking作为名词，它本身就是一个lemma，而做动词使用时lemma是cook。所以像斯坦福CoreNLP进行词形还原时都需要先进行词性标注。\n词干提取和词形还原的主要差别还可以从以下例子中看出来\n```\n\n\n\nfrom nltk.stem import PorterStemmer \nstemmer = PorterStemmer() \nstemmer.stem('believes') \n'believ' \nlemmatizer.lemmatize('believes') \n'belief'\n```\n\n\n\n编辑距离与拼写检查\nnltk自带了算编辑距离的代码，可以用以下方式调用：\n```\n\n\n\nfrom nltk.metrics import edit_distance\nedit_distance(\"你好\",\"你很好\")\n1\n```\n\n\n\n拼写检查需要使用编辑距离。比如across被拼成了acress，和它相近的有actress，caress等，一般编辑距离都要小于2。我们可以用pyenchant这个库来给出修改建议，并根据编辑距离进行筛选。\nnltk中的语料库\n最简单的一种语料库是词列表（wordlist）语料库，每行是一个单词。nltk中的停用词和人名语料库就是这一种类的。\n第二种语料库是标注词性（Part-of-speech tagged）的语料库，比如brown语料库。词性以类似/NOUN的形式附在单词后面。\n第三种语料库是对语块进行了分割的语料库（chunked phrase corpus），比如宾州树库。它除了有词性标注外，还有句法树的信息，利用方括号来存储在文本中。\n第四种是分类语料库（categorized text corpus），brown是分类语料库，每个分类单独存在一个文件里。\n待更新……\nNLTK官方教程，值得一读：Natural Language Processing with Python", "filename": "2018-05-17-nltk.md"}, {"id": 158, "text": "\ndate: 2018-05-18 16:41:50+08:00\nlayout: post\ntitle: TeX学习笔记整理\ncategories: 技术随笔\ntags: latex\n\n新手刚学习tex，网上资源很多，但新老不一，碰到一些坑。这里整理一下我看到的资源。\n网页\n一份其实很短的 LaTeX 入门文档（概念介绍，实战写一份文档）\n关于 CTeX 和 Tex Live（和上一篇是一个作者，讲了不推荐CTeX套件、推荐Tex Live、CTeX宏集。PS:作者在英文和中文之间加了空格，这个没有规范，我平时都是不加空格的。）\nMarkdown or LaTeX?（对于习惯了markdown的简洁的我来说，latex是很复杂的东西。但是如果要做印刷出版的产品，latex还是不二的选择。谢益辉给了了一个叫做R Markdown的解决方案。谢益辉还给LyX提供了基于ctex宏包的模板。LyX可以用来以所见即所得方式编辑tex文档）\n电子书\n《LaTeX入门》刘海洋。刘海洋还是我的北大校友。\n注意事项\n目前推荐安装Tex Live。CTeX太老了，许多宏包对它的支持也不好。Tex Live是一个tex发行版，收集了大量包，像北大毕业论文的宏包就都收录在里面。可以在CTAN上下载最新的iso文件进行安装。CTAN是一个tex宏包的中心仓库，中国许多大学的开源镜像都有收录。\n其它\n一般的标记语言如markdown、restructuredText等需要生成PDF，都会先转为latex。利用pandoc对这几个格式进行互相转换。但我测试latex转markdown后再转pdf，还是有损失的。\n2018/5/21更新：\ntex常见文件格式\n.tex：存储tex文档内容的文件，一般的编辑都在这类文件上进行。\n.cls：class文件，定义文件的结构。比如\\section，\\chapter等。通过\\documentclass{}来调用。\n.sty：补充class文件或增加latex的功能，比如graphicx包，增加插入图片的功能。\ncls和sty文件可以安装到tex的目录，也可以直接和.tex文件放一起使用。详细说明可以参考tug.org的这篇文档：What are .cls and .sty ﬁles? How are they diﬀerent?。\n.bib：是tex使用的参考文献文件。详细说明见此BibTeX Format Description。我们可以用endnote直接导出。注意bibtex是文件格式，biblatex则是一个宏包的名字。\n在实战中使用tex\n国外的期刊一般都提供word和latex两种模板，并且附带详细的说明。我们可以用latex来处理自己的论文，在实践中学。\n比如The Interpreter and Translator Trainer 这里期刊的提交说明页面有提供latex模板下载：Instructions for authors。", "filename": "2018-05-18-tex.md"}, {"id": 159, "text": "\ndate: 2018-05-20 15:16:50+08:00\nlayout: post\ntitle: 浅谈Eink的显示优化方法\ncategories: 技术随笔\ntags: \n\n我本人对显示技术并不了解，不过作为一个eink设备爱好者，也想总结下目前使用的eink设备上感受到的优化方法。\nEink显示效果优化主要从硬件和软件两方面入手。关于Eink的原理，在wikipedia上有比较好的说明。我接下来讨论的其实更多还是属于软件方面。\n早在Nook Simple Touch（nook2）的年代，极客们就想出了很多的eink显示效果优化办法，主要有以下几种：\n应用漂白：修改应用以只显示黑白两种颜色。\n局刷（partial refresh）：屏幕内容变化的不多的话，可以只刷新部分内容。特别适合看书的时候用，如果局刷多了有残影（ghost）就再全刷一次。\n瞬刷（fast refresh mode）：这个也叫a2模式，只显示黑白内容，图像只需传输1bit的内容，速度很快。\n再之后，我用的yotaphone，配备骁龙800处理器，刷新效果更加完善。\n大上显示器支持的模式更多，有A2、A5、Floyd，A16等模式。其中Floyd模式是画质和速度兼具的一个模式，根据国外网友Kev Zettler的这篇测评文章，是采用了Floyd–Steinberg dithering的算法。dithering中文叫抖动。在把图片转为gif这样只支持256色的格式时，会有颜色信息丢失。使用dithering可以优化显示效果，更为人眼所接受。电子墨水屏一般只有16级灰阶，要保证显示效果，需要这样的算法。而且图像压缩后应该可以有更快的刷新效果。\n海信的双屏手机在开启流畅模式后，图片会显示出使用抖动算法产生的条形色块，应该也是用的Floyd算法。\n但是利用图像处理来实现显示的优化，会导致处理器的负担加重。所以海信a2pro虽然有3000mah电池，经常用墨水屏的话，电量消耗还是很大的。", "filename": "2018-05-20-on-optimization-of-eink-display.md"}, {"id": 160, "text": "\ndate: 2018-05-22 12:42:50+08:00\nlayout: post\ntitle: LaTeX在参考文献中引用网页\ncategories: 技术随笔\ntags: latex\n\n一般的参考文献，期刊论文(article)、专著(book)、会议论文(inproceedings)等都有对应的存储格式，而网页就没有专门的格式了。\n我们需要使用misc，例子如下：\n@misc{RN16,\n  author = {Zanettin, Federico},\n  year = {2000},\n  url = {https://www.researchgate.net/publication/243771074_DIY_Corpora_the_WWW_and_the_Translator},\n  urldate = {March 9, 2017},\n  title = {DIY Corpora: the WWW and the Translator}\n}\n把misc换成article其实也可以用，不过生成时会报错，显示没有包含journal的名字。\n因为包含了url，我们还要使用url宏包（\\usepackage{url}），否则会生成失败。\n最后生成的结果如下：\nZanettin, F. (2000). Diy corpora: the www and the translator. Retrieved March 9, 2017, from https://www.researchgate.net/publication/243771074_DIY_Corpora_the_WWW_and_the_Translator\n以上内容主要参考了Problems with website formatting in apacite's reference page，另外还有一篇How can I use BibTeX to cite a web page?中提到了wikipedia提供的bibtex引用方法，但是和apa格式不符合。", "filename": "2018-05-22-cite-webpage-in-latex.md"}, {"id": 161, "text": "\ndate: 2018-05-22 10:24:50+08:00\nlayout: post\ntitle: 在LaTeX中显示中文\ncategories: 技术随笔\ntags: latex\n\n国外的文献的latex模板一般都有自己的class文件，不能直接支持中文，也不能切换到ctex的class。可以用cjk宏包或ctex宏包来支持中文。\n使用cjk加入以下代码，并用pdflatex编译：\n\\usepackage{CJK}\n...\n\\begin{document}\n\\begin{CJK}{UTF8}{gbsn}\n...\n\\end{CJK}\n\\end{document}\n使用ctex加入以下代码，xelatex和pdflatex都可以用来编译：\n\\usepackage[UTF8, scheme = plain]{ctex}", "filename": "2018-05-22-display-chinese-in-latex.md"}, {"id": 162, "text": "\ndate: 2018-05-22 17:37:50+08:00\nlayout: post\ntitle: 在LaTeX中插入图片\ncategories: 技术随笔\ntags: latex\n\nlatex中主要使用graphicx包插入图片，通过\\usepackage{graphicx}代码使用。不过我测试时发现有的latex的class文件里有说使用这个包，tex文件里就不需要再申明了。pdflatex默认支持常见图片格式的插入，jpg、png都是支持的，不需要转成eps或pdf。\n可以直接通过以下代码插入图片：\n\\includegraphics{fig.png}\n完整的命令是这样的：\\includegraphics*[key val list]{file}，可以再设置参数，具体可以在CTAN上查阅graphicx的文档：graphicx – Enhanced support for graphics。graphicx的功能不只插入图片，文档里对应的标题是Including Graphics Files。\n如果我们要引用指定文件夹的图片，就要用到\\graphicspath{dir-list}，比如\\graphicspath{\\{images/\\}}。注意路径是一个文件夹组的列表，需要用花括号括起来。PS：因为博客系统会识别liquid的花括号语法，我这里在花括号前加了斜杠，实际使用记得删去。\n我们这样插入的图片是插在行内的，也没有什么其它的设置，比如居中、设置图表题注。这时我们要用到figure环境。完整例子如下:\n\\begin{figure}[htbp] %设置浮动属性，不设的话，图片可能会出现在页面的顶部，而不是在文字后面。\n  \\centering %居中\n  \\includegraphics[width=4in]{image002.png} %设置宽度，一般a4纸是8inch。这里的单位也可以用cm等其它latex支持的。\n  \\caption{Translation Competence} %caption是图片的标题\n  \\label{img2} %此处的label相当于一个图片的专属标志，目的是方便上下文的引用。可以用\\ref{img2}来进行交叉引用，注意在引文中只是显示了一个第几张图片这个数字，还要自己在正文中补充其它内容。\n\\end{figure}\n关于[htbp]这个浮动设置里几个字母的含义，可以在CTAN上查看float的文档，以下是查到的解释：\nt Top of the page \nb Bottom of the page \np Page of ﬂoats \nh Here, if possible \nH Here, deﬁnitel\n但是在插入大量图片时，这样的设置效果还是不好。我们需要图片紧跟在插入的文字之后。这时我们需要使用float宏包（\\usepackage{float}）。然后[htbp]改成[H]。\n好了，一般的图片插入应该没有问题了。", "filename": "2018-05-22-insert-pictures-in-latex.md"}, {"id": 163, "text": "\ndate: 2018-05-22 19:58:50+08:00\nlayout: post\ntitle: 用国外期刊提供的latex模板进行论文写作\ncategories: 技术随笔\ntags: latex\n\n本科的时候知道气体是用latex写毕业论文的，当时没有怎么去研究。现在老师布置作业说让我们把本科论文用国外期刊的latex模板改写一遍。\n了解了我前面几篇博文提到的东西后，其实还是比较容易的，主要需要解决的是参考文献问题。原来是Endnote+word的组合，现在需要把endnote里的文献导出为bibtex文件。如果有不对应的还要进行修改。然后国外期刊一般都要使用英文，还得把作者名字改成拼音，把文章名翻译成中文。朱纯深的做法就是这样的，中文题目保留，在之后用方括号括上英文翻译。", "filename": "2018-05-22-writing-in-latex-template-designated-by-foreign-journals.md"}, {"id": 164, "text": "\ndate: 2018-05-24 22:34:50+08:00\nlayout: post\ntitle: 尝试将word自动转为latex\ncategories: 技术随笔\ntags: latex\n\n我的毕业论文用word的写的，标题的样式、列表都设置得很清楚。想想可以利用pandoc可以把word转为latex。\n但是有挺多多余的标签\n比如这个二级标题：\n\\hypertarget{cat-tools}{\\subsubsection{CAT Tools}\\label{cat-tools}}\n我们可以用正则把不需要得部分去掉，但是latex的语句和正则表达式有很多重合的符号，需要进行转义，比较麻烦。\n\\\\hypertarget\\{.*?\\}\n再比如这个endnote插入的参考文献的域代码：\nlatex\n\\textsuperscript{ {[}\\protect\\hyperlink{_ENREF_37}{37}{]} }\n正则匹配：\\\\textsuperscript\\{\\{\\[\\}\\\\protect\\\\hyperlink\\{_ENREF_.*?\\}\\{(.*?)\\}\\{\\]\\}\\}\n替换：\\\\citep\\{RN\\1\\}\n然后还有插入的图片和其题注，也是一个问题。列表倒生成得很好。\n想想太麻烦，还是直接从word里复制内容到tex编辑器里省事。", "filename": "2018-05-24-convert-docx-to-latex.md"}, {"id": 165, "text": "\ndate: 2018-05-28 20:32:50+08:00\nlayout: post\ntitle: DITA简介\ncategories: 技术随笔\ntags: 技术写作\n\n来北大上了一学年课了，这还是我第一篇正经的关于技术写作的文章。最近觉得DITA还是很有用的标准，值得介绍一下。\nDITA是什么\nDITA全称Darwin Information Typing Architecture，是一种基于XML的写作语言，由OASIS组织定义的一个开放标准。\nDITA有一系列预定义好的元素（Element），它也支持拓展，可以针对特定领域进行定制（Specialization），就像达尔文的进化论一样，DITA可以从基本的DITA文件进化。\n信息分类（Information typing）主要是指DITA是由固定的几类主题（Topic）构成的。常见的是任务（Task）、概念（Concept）和参考（Reference）。新版本又添加了两类（Troubleshooting、Glossary Entry）。任务、概念和参考都是从基本的主题进化而来的。具体的介绍见下一小节。\nDITA的几个主题\n概念（Concept）\n:  概念用来描述某个概念或者总览信息，为读者提供背景知识。通常是简单的段落和无序列表。\n任务（Task）\n:  任务用来记录完成一个任务所需要的步骤，主要由以下元素构成：\n    * context：任务相关的信息。\n    * steps：具体的步骤。\n    * result：完成后的结果。\n    * postreq：完成后还有什么可以做的。\n参考（Reference）\n:  参考主要是为用户在完成任务时提供参考的。主要是表格和属性表等内容。\n还有一个bookmap文件，是用来索引的。\nDITA的特色\n\n内容重用（reuse）。用conref和topicref可以引用现有的内容。\n同源开发（singlesourcing）。可以从同一份dita项目生成不同格式的成品，如html、pdf和chm等。另外，可以生成针对特定用户的版本。另外也支持多语种本地化。\n\nDITA CMS是什么\nDITA CMS是DITA文件的在线管理系统，一般提供在线的所见即所得的dita编辑、在线文件与历史版本管理、在线发布（基于开源的DITA-OT）等功能，还有任务流程管理等，支持多人网络协作。\n最近试用了下easydita，其实除了共享工作文件夹外用处不大。而且编辑文件还不能同时进行，一个人编辑时会锁住文件。easydita生成的代码也很混乱，不适合下下来手工编辑。\nDITA的编辑器\n可以用免费的xml编辑器，或者专业的文档工具：oxygen、Arbortext等。\nDITA的新发展——lwdita\n现在又有了新的轻量化标准，分别是使用了更少标签的xdita，使用html来写作的hdita和使用markdwon的mdita。\n我很看好mdita。很多程序文档可能使用markdown写的，但markdown没有很好的发布机制，不能输出多种格式。有了mdita后，我们就可以利用dita对于多种格式输出的支持了。\n我对于DITA的看法\nDITA的重用功能用来开发具有多重型号的产品很适合。比如一款电风扇，有很多不同的版本，那么重用就可以发挥用途了。\n而一般程序文档则不太适合用dita。dita给我的感觉对内容的划分什么要求比较严格，而且不如markdown那样轻量。像markdown和restructuredText的话可以像写代码一样写文档。\n另外，dita容易限制创意写作。有时候，技术文档的写作也是需要创意的。死板的东西大家看着也费劲。李亮的AntConc生鲜教程就很特别。当然，工业级别的文档可能是有这类严谨的要求。\n学习资源\nThe DITA Style Guide: Best Practices for Authors\nOASIS官方文档\nlearningdita（上海的TC互联做的learningdita的中文版）\nidratherbewriting.com（亚马逊的一位TW的博客）", "filename": "2018-05-28-a-brief-introduction-to-dita-.md"}, {"id": 166, "text": "\ndate: 2018-05-29 10:08:50+08:00\nlayout: post\ntitle: LaTeX中列表的使用\ncategories: 技术随笔\ntags: latex\n\n列表主要有无序列表、有序列表和定义列表，在tex中都有实现。\n无序列表\ntex\n\\begin{itemize}\n  \\item This is the first item\n  \\item This is the second item\n  \\item This is the third item\n\\end{itemize}\n\nThis is the first item\nThis is the second item\nThis is the third item\n\n有序列表\ntex\n\\begin{enumerate}\n \\item This is the first item\n \\item This is the second item\n \\item This is the third item\n\\end{enumerate}\n\nThis is the first item\nThis is the second item\nThis is the third item\n\n定义列表\ntex\n\\begin{description}\n  \\item[概念] 概念用来描述某个概念或者总览信息，为读者提供背景知识。通常是简单的段落和无序列表。\n\\end{description}\n概念\n:  概念用来描述某个概念或者总览信息，为读者提供背景知识。通常是简单的段落和无序列表。\n多级列表\ntex中用多级列表比较麻烦，需要嵌套。\n如下：\ntex\n\\begin{enumerate}\n\\item a\n\\item b\n  \\begin{enumerate}\n    \\item b.1\n  \\end{enumerate}\n\\item c\n\\end{enumerate}\n我们可以用iitem宏包，以上列表可以这样写：\ntex\n\\begin{enumerate}\n\\item a\n\\item b\n  \\iitem b.1\n\\item c\n\\end{enumerate}\nitem可以变成iitem表示二级列表，ivtem表示四级列表。\n自定义有序列表的编号\n可以使用\\renewcommand或者\\def来重新定义\\labelenum[i]（i的个数表示第几级列表）。更简单的方式是直接使用enumerate宏包：\ntex\n\\begin{enumerate}[1)]\n\\item The first item\n\\item The second item\n\\item The third item\n\\end{enumerate}\n方括号中可以填A、a、I、i和1，对应latex中的\\Alph、\\alph、\\Roman、\\roman和\\arabic。以上代码还添加了一个括号来修饰编号。", "filename": "2018-05-29-use-list-in-latex.md"}, {"id": 167, "text": "\ndate: 2018-05-30 16:40:50+08:00\nlayout: post\ntitle: 类似BT的网络云盘\ncategories: 技术随笔\ntags: \n\n最近有多人同步文件夹的需求，坚果云免费的个人版有人数限制，onedrive什么感觉不好用。\n看到有人说在linux上自己搭btsync，发现是个不错的东西。和bt一样，使用P2P技术，可以很方便地传送文件给对方，速度也有保证（软微的百兆上传带宽可以用起来了）。虽然说是serverless和去中心化，必要的用来找到彼此的discovery server还是需要有的。\nbtsync后来改叫Resilio Sync，在国内有对应的版本叫微力同步。\n当然，和bt一样，要求有在线的客户端才能提供下载。所以，我在一台vps上也运行了微力同步，保证实时都可以提供下载。\n目前它支持的客户端系统还是很多的，并提供一个基于web的管理界面，比较便于使用。\n发现有开源的实现叫做syncthing，github地址：https://github.com/syncthing/syncthing/。\n感觉还是开源项目会持续发展下去。syncthing着重解决同步的数据安全，应该比resilio要完善一点。resilio的一个缺点就是我不知道有没有同步到最新版，此时操作数据有覆盖最新提交的危险，这是不如git的地方。syncthing已经被收入debian仓库，可以用apt-get install syncthing安装。但是syncthing要求设备间互相交换设备ID，不像resilio一样给一个读写的Key就可以使用，较为麻烦。", "filename": "2018-05-30-bt-like-net-disk.md"}, {"id": 168, "text": "\ndate: 2018-06-02 11:15:50+08:00\nlayout: post\ntitle: OmegaT使用脚本导出片段并用TAUS DQF进行质量评价\ncategories: 技术随笔\ntags: CAT\n\nOmegaT使用java写的，autoit就不好使了，得用它支持的JavaScript或者Groovy写脚本。\n默认已经带了一些Groovy脚本示例了，可以供我们参考。\n我这次的目标是把原文片段和译文片段以Taus DQF要求的csv格式存储，并分成30份给同学们使用。\n```groovy\nimport groovy.json.JsonOutput\nfiles = project.projectFiles;\nsegment_count=0\nfileLoop:\ndef map1 = [:]\nfor (i in 0 ..< files.size())\n{\n    fi = files[i];\n//console.println(fi.filePath);\n\nfor (j in 0 ..< fi.entries.size())\n{\n    if (java.lang.Thread.interrupted()) {\n        break fileLoop;\n    }\n\n    ste = fi.entries[j];\n    changer=\"没有修改者\";\n    source = ste.getSrcText();\n    target = project.getTranslationInfo(ste) ? project.getTranslationInfo(ste).translation : null;\n\n    changer=project.getTranslationInfo(ste).changer;\n    if (changer==null){\n        changer=\"没有修改者\";\n    }\n    if (target==null){\n        target=\"未翻译\";\n    }\n\n    num=ste.entryNum()\n    map1.put(num, [source,target,fi.filePath]) //结果保存在map里，以便导出为json。\n\n    segment_count++;\n}\n\n}\n//获取项目路径，将结果保存为json文件\ndef prop = project.projectProperties\nif (!prop) {\n    showMessageDialog null, res.getString(\"noProjectMsg\"), res.getString(\"noProject\"), INFORMATION_MESSAGE\n    return\n}\ndef root = prop.projectRoot;\ndef srcTextFile = new File(root, 'project_source_content.txt');\ndef json = JsonOutput.toJson(map1);\nconsole.println(json);\nsrcTextFile.write(json)\nsrcTextFile.close();\n```\n通过以上groovy代码，我们可以把结果导出。\n然后我们按每人多少片段进行分割就可以了。\nTAUS的DQF（Dynamic Quality Framework ）一般是用来评估机器翻译的，我们也可以用来评价人工翻译。它有几个维度：Fluency、Adequacy和Typology Errors。\n以下是具体的介绍：\n\nFluency: captures to what extent the translation is well-formed grammatically, contains correct spellings, adheres to common use of terms, titles and names, is intuitively acceptable and can be sensibly interpreted by a native speaker.: captures to what extent the translation is well-formed grammatically, contains correct spellings, adheres to common use of terms, titles and names, is intuitively acceptable and can be sensibly interpreted by a native speaker. \n\nFluency的评分分为四级：Incomprehensible、Disfluent、Good和Flawless。\n\nAdequacy: captures to what extent the meaning in the source text is als expressed in the translation. \n\nAdequacy的评分也分为四级：None、Little、Most和Everything。\nTypology Errors更加详细，需要数译文出现的错误。具体见以下表格：\nHigh-level         |  Granular levels\n-------------------|---------------------------------\nAccuracy           |  Addition\n                   |  Omission\n                   |  Mistranslation\n                   |  Over-translation\n                   |  Under-translation\n                   |  Untranslated\n                   |  Improper exact TM match\nFluency            |  Punctuation\n                   |  Spelling\n                   |  Grammar\n                   |  Grammatical register\n                   |  Inconsistency\n                   |  Link/cross-reference\n                   |  Character encoding\nTerminology        |  Inconsistent with termbase\n                   |  Inconsistent use of terminology\nStyle              |  Awkward\n                   |  Company style\n                   |  Inconsistent style\n                   |  Third-party style\n                   |  Unidiomatic\nLocale convention  |  Address format\n                   |  Date format\n                   |  Currency format\n                   |  Measurement format\n                   |  Shortcut key\n                   |  Telephone format\nDQF需要上传翻译记忆文件，tmx或者tab分割的文件都行。生成tmx比较麻烦，我导入后还报错，我就选择的tab分割文本。但是omegat的原文片段可以包含换行，tab等信息，需要进一步处理。这个问题我反馈给了omegat，说片段是可以包含多行内容的。\n建立审校项目需要分配给别人或自己，审校完成后，便可以查看报告了。", "filename": "2018-06-02-omegat-export-segments-text-using-groovy-script-and-evaluate-using-taus-dqf.md"}, {"id": 169, "text": "\ndate: 2018-06-05 17:21:50+08:00\nlayout: post\ntitle: Sphinx生成PDF文档\ncategories: 技术随笔\ntags: 技术写作\n\nSphinx是将rst文件转为latex文件以生成pdf的，装好latex后，在项目目录下运行make latexpdf就可以生成了。\n以下是我总结的注意事项，主要是conf.py的修改：\n\n修改latex_elements里的preamble，添加ctex或者cjk宏包可以支持中文。\n修改language可以更改默认的语言，在生成的tex文件中会使用renewcommand修改原来的日期等信息为对应语言的。但默认中文的章节名没有得到更改，可以用以下代码不显示英文的Chapter。注意latex里有很多斜杠，在python中需要在引号前加r以避免转义。\n\npython\n'preamble': r'''\n\\addto\\captionsenglish{\\renewcommand{\\chaptername}{}}\n\\usepackage[UTF8, scheme = plain]{ctex}\n''',\n另外还有和readthedocs的结合的问题。readthedocs默认使用的pdflatex来编译文档，conf.py中修改了latex_engine为xelatex也没有效果。使用ctex宏包会提示错误，还是需要使用cjk宏包。\nreadthedocs默认使用的python2，在配置文件中写中文需要在引号前加u。当然可以切换为python3。\n参考：解决在readthedocs编译PDF含中文的问题", "filename": "2018-06-05-sphinx-pdf.md"}, {"id": 170, "text": "\ndate: 2018-06-12 16:21:50+08:00\nlayout: post\ntitle: 判断意译与直译\ncategories: 技术随笔\ntags: CAT NLP\n\n最近计算机辅助翻译技术的课程项目是给一个TAB分割的口语英汉语料，让我们判断它是不是采用了意译的方法。\n直译一般保持原有句子中词语的意思，比如hot line翻译成热线。意译很多时候用来处理俗语，比如A piece of cake翻译为小菜一碟。\n我们想出来的办法用英汉词典把实词（名词、形容词、代词）转中文。再用中文同义词词典，看看这个意思的词在中文翻译中存不存在。\n具体的步骤如下：\n\n文本预处理，去除原来语料中不需要的内容。（给的语料中有多余的人名和空格）\n将mdx格式的朗道英汉汉英词典转为TAB分割的txt。\n将哈工大同义词林转为TAB分割的txt。\n用NLTK对英文进行分词、词性标注和命名实体识别。\n结合词性信息，用nltk的wordnet进行词性还原，在英汉词典中找到中文释义，看看在翻译中存不存在。如果不存在再看该释义的同义词在不在翻译中。还没有就再看下一条释义，如果都没有就说明这个意思没有被翻译出来，是意译。\n\n我们可以通过计算精确率、召回率和准确率来了解结果。我人工判断了30个句子是否为意译，结果意译8句，直译22句。而输出的结果是意译17句，其中8句意译都判断出来，但是有9句判断错的。\n准确率：(8+13)/30=70%\n精确率： 8/(8+9)=47%\n召回率： 8/8=100%\n通过以上数据，我们可以知道，是意译的句子基本都能提出来，下一步要减少误判断。\n一些问题：\n\n没有处理短语。比如“All right”被译为好的，只考虑了“right”的意思，结果被判断为意译。不过这种口语中的固定表达我也不清楚算不算意译。\n词典不全。“sorry”居然没有抱歉的释义，人工给补上。\n形容词在词典中一般都解释为“什么什么的”，但是原文中可能不会出现“的”。所以我处理形容词时会把“的”去掉。不过遇到灵活翻译的情况还是会有问题。比如“the latter half of the 19th Century”译为“19世纪后半期”，“latter”在词典中没有单独的“后”这一个字的释义。\n人名被当作普通词语。遇到一个人名叫“Lane”，译为“莱恩”。但是处理时把它当作街道意思的“lane”处理。所以我默认不检测命名实体。\n中文的同义表达太多。就比如“What are you doing?”可以被翻译为“你在干啥”，“你在干嘛”，“你在干什么”等等。“this place”可以被翻译为“这地方”或者“这里”。但是“place”译为中文的“地方”时，同义词典里没有“里”这个同义词。\n原文的翻译错误。很多翻过来的词和原来的词还是有语义的差异的，比如“interrupt”，词典里是“打断”，而译文中是“打扰”。\n一些实词，比如do、make、get和have，翻译过来的方法很多，会影响结果，因此又见了一个过滤词表，默认不检测这些词。\n\n此外，我也考虑过使用word2vec这样的词向量模型来计算相似度，例如使用百度的短文本相似度API可以得到“这地方”和“这里”的相似度为0.831017，“小菜一碟”和“一块蛋糕”的相似度是0.415756，“一条狗”和“一只猫”的相似度是0.624687。但这个相似度一般用于搜索时给用户提供相关的检索词，单凭这个相似度分数不能判断每个词都被翻译出来了。而且这个相似度需要在用一个语言内进行比较，我还需要用词典或者机器翻译把原文先转换为译文语言，然后再和译文做比较。所以这个方法并不见得比上文的方法更好。", "filename": "2018-06-12-get-free-translation.md"}, {"id": 171, "text": "\ndate: 2018-06-17 14:39:50+08:00\nlayout: post\ntitle: NLTK调用Stanford NLP工具包\ncategories: 技术随笔\ntags: CAT NLP\n\nNLTK含有与斯坦福自然语言处理工具的接口，可以直接将结果转为nltk支持的数据。\n比如句法分析，可以直接生成nltk的tree类型数据。\n具体教程网上已经有不少了，现做一个收集：\n\n在 NLTK 中使用 Stanford NLP 工具包\nPython自然语言处理实践: 在NLTK中使用斯坦福中文分词器\nPython NLTK结合stanford NLP工具包进行文本处理\n\n另外还有通过REST API直接调用CoreNLP的，官方网站的源码：Source code for nltk.parse.corenlp\n具体用法：\n实例一个server并运行:\npython\nserver=nltk.parse.corenlp.CoreNLPServer(path_to_jar=\"stanford-corenlp-3.7.0.jar\", path_to_models_jar=\"stanford-corenlp-3.7.0-models.jar\")\nserver.start()\n具体用法就和上面的文章中提到的差不多了，提供分词、词性标注、句法分析和依存句法分析等功能。\n比如句法分析：\n```\n\n\n\nfrom nltk.parse import CoreNLPParser\na=CoreNLPParser()\nprint(list(a.raw_parse(\"I like you.\"))[0])\n(ROOT (S (NP (PRP I)) (VP (VBP like) (NP (PRP you))) (. .)))\n```\n\n\n", "filename": "2018-06-17-nltk-stanford-nlp.md"}, {"id": 172, "text": "\ndate: 2018-06-19 20:05:50+08:00\nlayout: post\ntitle: 计算语言学概念整理\ncategories: 技术随笔\ntags: CAT NLP\nloadmathjax: true\n\n语言出身的我还是更喜欢用计算语言学这个词。本文整理一些相关概念。\n齐夫定律（Zipf's law）\n在一个大规模的语料库，统计词频，将词按词频从高到低排序。词的词频f和序号r相乘得到k，这个k近似于一个常数。\n齐夫定律也叫省力法则，通俗的意义就是人们喜欢用少量的词表达想表达的意思。就比如诸葛亮，说话者和听者只听这一个词就能知道意思，如果再用什么孔明、卧龙，则比较费劲。\n所以语料库的一个问题就是很多冷门的词出现的频率会很低。\n词法分析\n对于词的分析，一般有词的识别（tokenization）、词干还原（stemming）和词性标注（POS-Tagging）等。\n词义计算\n可以用编辑距离、基于同义词典的方法和一个词的上下文来进行判别。\n同义词典可以判断词在上下义层级中的距离关系。上下文可以搭建一个词-上下文矩阵。\n停用词（stop words）\n常用的词，如the，a，to等在处理中会被忽略。\n词的归一化（Word Normalization）\n在检索时经常用到。比如U.S.A和USA统一用USA存。也可以把一个词拓展，比如搜索window，同时出现windows和Windows的结果。\n波特词干算法\n适用于信息检索的词干还原方法，比如automate、automatic和automation都会被还原为automat，是一种比较粗暴的办法。\n汉语离合词\n汉语动词很多现象，使得计算机难以处理。比如游泳，会说成游了一会儿泳。\n语言模型（language model）\n用来统计某个句子或者一串词出现的概率或者某个词后出现另一个词的概率。常见的有n元模型，又叫n元语法。\n估计n元模型的概率：\n\n最大似然估计（the maximum likelihood estimate），公式：\n\n$$ P(w_i\\mid w_{i-1})=\\frac{count(w_{i-1},w_i)}{count(w_{i-1})} $$\ncount表示语料库中括号里字符连续出现的次数。\n困惑度（perplexity）\n困惑度是概率的倒数。困惑度越大，概率越低。困惑度越低，语言模型越好。\n过拟合（overfitting）\n如果训练集有太多特性，在测试集上的表现会不好。因为它过拟合了，进行泛化的能力不行。\n数据平滑（smoothing）\n有时候数据会出现稀疏的情况，有的词出现次数很多，有的词一次也没出现。我们可以给这些词的次数加一，这叫做拉普拉斯平滑（laplace smoothing）。在最大似然估计的基础上给每个类型的样本加1。V表示样本种类数。\n$$ P(w_i\\mid w_{i-1})=\\frac{count(w_{i-1},w_i)+1}{count(w_{i-1})+V} $$\n还有一种古德-图灵平滑方法（Good-Turing Tuning）\n当要估计的数据在样本中没有出现时：\n$$ P_{GT}=\\frac{N_1}{N} $$\n$$ N_1 $$表示计算样本中出现一次的数据出现的次数。N表示样本中出现的数据的总次数。\n当要估计的数据在样本中有出现时：\n$$ c* = \\frac{(c+1)N_{c+1}}{N_c} $$\n噪声信道模型（noisy channel model）\n比如我们有一个拼写错误，我们要找到对应的正确的拼写。所通过的方法就是噪声信道。\n我们可以产生一系列候选的正确拼写，然后看哪个词在句子中的可能性最大，哪个词就应该是原来的正确拼写。\n文本分类（text classification）\n比如分出垃圾邮件、确定红楼梦的作者、确定评论是好是坏。\n我们可以制定规则来进行分类，或者基于标记的文本适用有监督的机器学习方法进行分类。\n有几种机器学习的分类方法，其中一种是朴素贝叶斯方法（naive bayes intuition）。它之所以叫朴素，是因为使用了词袋（bag of words）模型，认为语料库中的词语先后顺序与意义无关。这样可以简化概率的计算问题。\n一个关于择偶的实际例子：\n$$ P(嫁\\mid (帅、有钱、性格好))=\\frac{P(帅、有钱、性格好\\mid 嫁)P(嫁)}{P(帅、有钱、性格好)}\\ =\\frac{P(帅\\mid 嫁)P(有钱\\mid 嫁)P(性格好\\mid 嫁)P(嫁)}{P(帅)P(有钱)P(性格好)} $$\n自然语言处理结果的评价\n主要用到准确率（accuracy）、精确率（precision）和召回率（recall）。\n              |  correct  |  not correct\n--------------|-----------|-------------\nselected      |  tp       |  fp\nnot selected  |  fn       |  tn\n具体的例子可以见我前面的判断意义里讲的。\n精确率=tp/(tp+fp)；召回率=tp/(tp+fn)；准确率=(tp+fn+tn)/(tp+fp+fn+tn)\n生成模型（joint or generative）与条件（conditional）模型\n朴素贝叶斯是生成模型，它估计的是联合概率分布。而条件模型（也叫判别模型，discriminative）算的是条件概率分布，最大熵模型便是其中一种。\n熵又称为自信息（self-information） ， 可以视为描述一个随机变量的不确定性的数量，是由香农在信息论中提出的。 一个随机变量的熵越大，它的不确定性越大，那么，正确估计其值的可能性就越小。 越不确定的随机变量越需要大的信息量用以确定其值。一个均匀分布的色子比一个不均匀的色子熵值要大。一个词的熵越大，它所含的信息量也最大。最大熵模型通过增加特征来联立分布，并使得这种分布下的熵值最大。\n词-文档关联矩阵（term-document incidence matrices）\n这是有关信息检索的内容。举个例子，怎么找到某篇莎士比亚的文章包含了Caesar却不含Calpurnia？我们可以进行全文的搜索，但速度比较慢。这时我们可以建这样一张表，表头的栏目莎士比亚的作品名，纵列是每个单词在作品中是否出现（1表示出现，0表示不出现）。这样以后再搜索就比较容易了。但是如果文本很多的话，这个表会变得很大。因此又有了倒排索引，采用词+文档id的办法。\n注意倒排索引（inverted index）的翻译可能不是很好理解，我这里引用知乎上的解释：\n\n一个未经处理的数据库中，一般是以文档ID作为索引，以文档内容作为记录。\n而Inverted index 指的是将单词或记录作为索引，将文档ID作为记录，这样便可以方便地通过单词或记录查找到其所在的文档。\n\n如果要查的是多个词，那就要用biwords这样的作为索引了。或者在索引中把词在文档中的位置也记录下来（positional index），目前这种方法是主流。\n排序检索（ranked retrieval）\n布尔检索只反映存在与不存在，我们还需要对结果进行排序。那么怎么排序？可以根据检索词在文本中出现的次数等等。\n杰卡德系数（Jacaard coefficient）\n两个集合A和B的交集元素在A，B的并集中所占的比例，称为两个集合的杰卡德相似系数，用符号J(A,B)表示，取值在0到1之间。\n$$ jaccard(A,B) = \\frac{\\mid A \\cap B \\mid}{ \\mid A \\cup B \\mid }  $$\ntf-idf\n杰卡德系数有一个缺点就是没有考虑词频（tf，term frequency）。有词频，那也有含有这个词的文件的频率，文件频率（df，document frequence）。另外还有逆向文件频率，（idf，inverse document frequency）是总文件数目除以包含该词语之文件的数目，再将得到的商取对数得到。\n$$  idf_t=log_{10}(N/df_t) $$\ntf和idf相乘得到的TF-IDF（term frequency–inverse document frequency）是一种用于信息检索与数据挖掘的常用加权技术。字词的重要性随着它在文件中出现的次数成正比增加（tf的结果），但同时会随着它在语料库中出现的频率成反比下降（idf的结果）。\n$$ w_{t,d}=(1+logtf_{t,d}) \\times log_{10}(N/df_t) $$\n向量空间模型\n我们把词作为轴，文本作为向量，可以建立一个向量空间模型，用来进行信息检索。\n统计式机器翻译\n$$ S=\\underset{s}{argmax} P(S) P(T \\mid S) $$\nP.Brown称上式为统计机器翻译基本方程式，$$ P(S) $$ 是语言模型， $$ P(T \\mid S) $$ 是翻译模型。前者反映流利度，后者反映忠实度。\n以往基于统计的机器翻译一般都是基于IBM的模型。\n概率统计\n我不太懂这个，只做一些收集整理。\n试验：一个婴孩出生，是男是女？\n样本空间：一个试验的全部可能出现的结果的集合。\n例如一个家有两个孩子，样本空间$$ \\Omega $$={男男、男女、女女}\n事件：\n试验可能结果的集合，样本空间的子集。\n比如：\n\n事件A：至少一个男孩={男女、男男}\n事件B：至少一个女孩={男女、女女}\n\n事件运算：\n\n积：两个事件同时发生。交集：$$ A \\cap B = {男女} $$\n和：两个事件至少有一个发生。并集： $$ A \\cup B = {男男、男女、女女} $$\n差：A发生，B不发生。差集： $$ A - B = {男男} $$\n对立：事件A的对立事件。补集：{女女}\n\n联合概率：事件A和B同时出现的概率：$$ P(A \\cap B) $$，也可以表示为P(A,B)，P(AB)。\n条件概率：$$ P(A\\mid B) $$ 事件B发生的条件下，事件A发生的概率。\n贝叶斯公式：$$ P(A\\mid B)=\\frac{P(A,B)}{P(B)} $$ 或者这样表示： $$ P(A\\mid B) = \\frac{P(B \\mid A)P(A)}{P(B)} $$\n概率的乘法公式：\n$$ P(A,B) = P(B) \\times P(A \\mid B) = P(A) \\times P(B \\mid A) $$ ，如果事件独立，那么 $$ P(A,B) = P(A) \\times P(B) $$\n如果是在某个条件下发生的事件独立，就叫条件独立。", "filename": "2018-06-19-notes-of-computational-linguistics.md"}, {"id": 173, "text": "\ndate: 2018-06-26 14:42:50+08:00\nlayout: post\ntitle: 常用Linux命令整理\ncategories: 技术随笔\ntags: CAT NLP\n\nLinux自带了很多有用的命令行工具，比如要重命名segment9.ts为segment09.ts，我们可以用Python来写脚本实现，但使用Linux自带的rename命令更加方便。这里做一个收集整理，会根据我碰到的实际问题不断更新。\n更多内容可以见The Art of Commandline\nrename\n用法：\n```\nrename [options] expression replacement file...\nexpression是要替换的文本\nreplacement是要被替换进去的文本\nfile是要进行替换操作的对象文件\n可以使用正则表达式\n```\n示例：\nm3u8的视频会被分为一个个编号了的ts文件片段。我们可以用linux的cat命令或者windows的copy命令对其进行合并，但默认的命名会影响合并的顺序。\nsh-4.4$ ls -1\nsegment0.ts\nsegment1.ts\nsegment10.ts\nsegment11.ts\nsegment12.ts\nsegment13.ts\nsegment14.ts\nsegment15.ts\nsegment16.ts\nsegment17.ts\nsegment18.ts\nsegment19.ts\nsegment2.ts\nsegment20.ts\n我们需要把segment1.ts转换成segment01.ts这样的。运行以下命令，就可以转为我们需要的格式了。\n$ rename segment segment0 segment?.ts\nscp\n利用ssh复制文件\n从远程复制过来：\nscp root@hostname:/root/.ssh/pub id_rsa.pub\n从本地复制到远程：\nscp id_rsa.pub root@hostname:/root/.ssh/pub\n指定端口：\nscp -P 43999 id_rsa.pub root@hostname:/root/.ssh/pub", "filename": "2018-06-26-notes-of-linux-commands.md"}, {"id": 174, "text": "\ndate: 2018-06-28 23:04:50+08:00\nlayout: post\ntitle: 语言服务相关网站收集\ncategories: 收集\ntags: CAT 翻译\n\n鉴于平时上课学翻译技术只是学了点理论知识，实践也不多，我想得收集一些语言服务公司的网站。很多网站都会由关于翻译的博客、教程，比较实用。同时，通过这些网站可以看到关于译者的介绍，直接了解这些前辈，可以激发我对这个行业的兴趣。另外一些平台和工具类网站也进行收集。\n个人博客\n\nmultifarious SDL技术支持Paul Filkin的博客\neMpTy Pages SDL技术咨询师Kirti Vashee的博客\njealous markup memoQ产品经理Gabor的博客\nAnthony Teixeira 一个法国个人译者的网站\n\n语言服务提供商\n\nQabiria 使用OmegaT进行翻译的团队\nGlobalization Partners International  教程内容比较丰富\nvelior 一家俄罗斯的翻译公司，里面的博客内容不错\nSmartling 注重技术的一家云翻译公司\nNimdzi 为客户提供行业相关的研究、咨询和培训服务，有很多博客和播客内容。\n\n资讯与专栏类\n\nslator 业内新闻\nThe Open Mic 译者分享自己的故事\nmultilingual 有杂志、新闻网站和博客站，提供前沿的业内信息。\nGlobally Speaking 一个本地化行业的播客，RWS Moravia是赞助者。\ntranslationdirectory，以目录形式收录了很多相关文章，有很多历史悠久的内容。\n\n翻译平台\n\nfiberead 基于网站招募译者，进行翻译，按销售分成\n我译网 有试译要求，翻译报酬较高。\nproz 国外知名的翻译平台，为译者和翻译客户的提供服务。\n\n在线工具\n\n译马网 在线CAT\n一本词典 语智云帆推出的专业领域词典\nMateCAT 欧盟委员会赞助下开发的免费在线CAT平台，特点是使用机器翻译。\nSmartCAT 又一款免费在线CAT软件，它还是一个翻译外包平台。\n\n机构\n\nAmerican Translators Association 美国翻译协会\nTAUS 翻译自动化用户协会\nGALA 全球化与本地化协会\n\n开源与翻译\n\ntranslate on linux 由译员Jean Dimitriadis建立。\n\n其它\n\n翻译资源 - 吾思语 另一个收集帖。\n\n待更新……", "filename": "2018-06-28-collection-of-websites-about-language-service.md"}, {"id": 175, "text": "\ndate: 2018-06-30 14:26:50+08:00\nlayout: post\ntitle: 转换Word文档为Markdown\ncategories: 技术随笔\ntags: CAT\n\n之前尝试将word转latex，因为latex比较复杂，较难处理。这次转markdown，则相对顺利许多。\n使用以下代码转换docx为md：\n$ pandoc 1.docx -o out.md\n需要在转换的基础上在做一些查找替换操作。\n我的情况，主要需要改的是图片部分。\n将docx文件另存为网页，可以得到包含图片的文件夹，图片以image序号.png命名。而pandoc生成的markdown代码如下：\n![](media/image23.png){width=\"\" height=\"\"}\n需要用正则来进行下处理，去掉设置宽高的部分并设置正确的文件路径。pandoc转换生成的markdown有时候会在不该换行的地方换行，好在markdown是用空行来区分段落的。我们用notepad++处理的话要选择匹配新行。同时要使用非贪婪模式。\n去掉宽高：\n\\{width=.*?\\}\n替换image1.png->image0，这里用到了分组。括号内是分组一，然后替换时保留分组内的序号，用\\1表示。以下例子替换序号是个位的，两位的话要再修改下：\nfind: image(.?).png\nreplace: image00(\\1).png\n有的图片是从excel直接复制过来形成的，另存为时会被保存为emf格式，需要进行下格式转换。\n转换的结果是这篇文章：面向本地化工程师的开源CAT工具教程\n处理后的md也可以再转回docx，图片和基本的结构都是对的：\npandoc out.md -o out.docx", "filename": "2018-06-30-convert-docx-to-markdown.md"}, {"id": 176, "text": "\ndate: 2018-06-30 14:41:50+08:00\nlayout: post\ntitle: 面向本地化工程师的开源CAT工具教程\ncategories: 技术随笔\ntags: CAT\n\n本地化课的期末作业，我写了下，觉得内容比较详尽了，现在发上来，虽然很多地方我讲得很简略。\n目录\n\n前期工程\n辨识语言资源\n处理文件格式\n建立项目\n项目统计\n\n\n术语管理\n术语提取\n建立术语条目\n\n\n翻译记忆\nOmegaT的翻译记忆文件\n调用翻译记忆\n\n\n团队协作\nOmegaT团队项目\nZanata\n\n\n质量管控\n使用OmegaT自带的检查功能\n使用CheckMate\n\n\n其它辅助功能的配置\n语言词典\n拼写词典\n机器翻译\n\n\n使用脚本\n结语\n\n本地化和翻译的一个区别在于翻译内容的多样化，可能需要翻译应用软件、网页或者音视频等多媒体内容，同时还要针对译入语文化对内容适当进行修改。\n开源翻译工具对于其它开源界使用的技术有广泛支持，而且因为其开源的性质，很容易自由地进行功能上的扩展。除了商业软件中使用的格式，很多在开源软件中有广泛应用的格式，如本地化技术gettext使用的文件格式PO，开源翻译工具OmegaT、Okapi等都支持。OmegaT是专业的计算机辅助翻译软件，而Okapi是用于翻译与本地化的一套工具集。\n下面将结合本地化流程，讲解作为一个本地化工程师，可以利用开源工具做什么（主要使用OmegaT和Okapi）。\n前期工程\n辨识语言资源\n本地化工程师需要辨识语言资源，然后做成翻译项目分发给译员进行翻译。\n比如要进行软件UI的翻译，需要提取如.NET的资源文件(.resx)、Java使用的properties文件、iOS使用的strings文件和Android使用的xml文件等。网页的翻译可能需要处理htm、php和json等格式的文件。而文档的翻译，需要处理markdown、docbook、dita和restructuredText等格式的文件。\n处理文件格式\n上面提到的文件格式，OmegaT大部分都支持，可以直接导入。但是OmegaT默认不支持Markdown和restructuredText这样的格式，以下是解决办法：\n对于Markdown，我们可以使用Okapi Framework来进行处理，有两种办法。\n1、直接使用Okapi为OmegaT提供的过滤器插件\n安装说明在Okapi官网的OmegaT插件页面。需要下载如下图的插件文件，并复制到OmegaT安装目录下的plugins文件夹。\n\n安装后可以给OmegaT添加如下格式的支持，其中便包括Markdown。\n\nDoxygen-commented files (using the Doxygen Filter)\nHTML files (using the HTML Filter)\nInDesign IDML files (using the IDML Filter)\nJSON files (using the JSON Filter)\nMarkdown files (using the Markdown Filter)\nQt TS files (using the TS Filter)\nTrados TagEditor TTX files (using the TTX Filter)\nTransifex projects (using the Transifex Filter)\nWordfast Pro TXML files (using the TXML Filter)\nXLIFF 1.2 documents (using the XLIFF Filter)\nXLIFF 2 documents (see more information)\nXML files (using the XML Filter)\nXML files (using the XML Stream Filter)\nYAML files (using the YAML Filter)\n\n2、将Markdown转换为XLIFF\n另一种方法是使用Okapi的Rainbow工具将Markdown转换OmegaT支持的XLIFF格式文件。XLIFF是XML本地化数据交换格式（XML\nLocalization Interchange File Format\n）的缩写，它相当于本地化过程中使用的一种中间格式。我们可以将CAT软件不支持的源文件格式转换为XLIFF，再基于翻译后的XLIFF生成目标格式。\n我们首先将Markdown文件导入Rainbow：\n\n点击Languages and Encodings标签可以设置源语言和目标语言。\n\n然后，点击菜单栏的Utilities->Translation -Kit Creation。\n\n点击后使用默认的设置即可，然后点击Execute即可生成XLIFF文件。\n\n生成的文件夹如下图：\n\noriginal里保存的原来的文件，work里是生成的需要翻译的XLIFF文件。XLIFF可以导入OmegaT进行翻译。\nmanifest.rfm是项目的声明文件。我们把该文件导入rainbow，可以进一步生成目标文件。\n\n导入声明文件后选择Utilities->Translation Kit Post-Processing...\n\n点击执行，并继续在弹出的创建中点击继续。\n\n翻译好的目标文件就生成在项目文件夹的done文件夹里了。\n\n以上是对于Markdown的处理，还有像restructuredText这样的标记语言，OmegaT和Okapi都不支持。好在restructuredText的写作工具Sphinx支持将restructuredText的文本提取到Gettext\nPO文件。GetText是GNU项目用来本地化程序的一套工具，逐渐成为一套本地化的标准。GetText和XLIFF类似，XLIFF是基于XML的，而GetText有自己的一套文件格式。\n需要从源文件生成.pot模板文件，然后基于该文件生成对应的语言供翻译的po文件，po文件主要由msgid和msgstr构成：\n\n翻译好后进一步生成二进制的mo文件，然后在生成网页或者PDF的成品时，Sphinx可以根据不同的语言，生成对应的目标文件。具体的步骤见此：http://www.sphinx-doc.org/\\\nen/master/intl.html#sphinx-internationalization-details\n建立项目\n使用OmegaT新建项目，默认不需要进行额外设置。\n\n需要注意的是分割规则。\nOmegaT中有两种类型的规则，中断规则和例外规则。\n中断规则将源文本分割为片段。例如，\"Did it make sense? I was not sure.\"\n应该分割成两个句子。要实现这样的目的，应该在 \"?\"\n后跟着空格和大写字符时进行中断的规则。要定义一个中断规则，请选中中断/例外复选框。\n例外规则指定哪部分文本不应该被分开。不考虑句点的话， \"Mrs. Dalloway \"\n不应被分割成两个片段，因此应该为后面跟着句点的 Mrs (以及 Mr 和 Dr 、prof\n等等) 创建例外规则。要定义例外规则，请取消选中中断/例外复选框。\n对于绝大多数欧洲语言和日语来说，预定义的中断规则已经够用了。我们可以根据情况进行自定义。OmegaT的分割规则以自己的格式进行存储在项目的omegat文件夹的segmentation.conf文件里。\n之后，我们需要导入文件。如果文件的格式不支持，则会导入失败。\n\n导入完成后，就可以进行翻译了。\n\n项目统计\n点击工具->统计，我们可以查看项目的统计信息。\n\n我们可以知道总共需要翻译多少字，有哪些重复的片段等等，在进行项目计划和报价的时候都可以用到。\n术语管理\n术语提取\n本地化项目中往往存在很多专业术语，需要我们提前进行提取。我们可以使用Okapi的Rainbow进行操作。\n添加源文件后，点击Utilities->Term Extraction。\n\n下一步，可以设置输出文件的目录，输出结果是否要按词频进行排序，以及提取的词长等等。另外还可以设置停用词，这样提取出的词就会接近术语了。\n\n点击执行后就可以获得结果了：\n\n之后我们对其进行翻译，保存为源文本、译文和注释以TAB分割的glossary.txt放入OmegaT项目的glossary文件夹，便可以作为术语库导入OmegaT中使用了。glossary.txt的内容如下：\n\n建立术语条目\n使用OmegaT进行翻译时，如果碰到术语，会在下方出现蓝色的标记（需要手动开启），在词汇表的窗口里显示术语库的记录。比如下图中识别到Context\nMenu是一个术语。\n\n我们在翻译中碰到未添加的术语，可以手动添加进术语库。在词汇表窗口右键，点击增加词汇表条目。\n\n我们需要输入源词语和目标词语，另外也可以添加注释。\n\n翻译记忆\n本地化工程师还要管理翻译记忆。\nOmegaT的翻译记忆文件\nOmegaT使用tmx作为默认的翻译记忆存储格式，每翻译一个片段，就会保存一条翻译记忆。OmegaT项目含有在五个不同位置的翻译记忆文件，即扩展名为tmx的文件：\nomegat文件夹包含project_save.tmx文件，以及一些备份的TMX文件。project_save.tmx文件包含了自项目开始以来所有被保存的片段。项目中总是存在此文件。其内容总是根据源片段的字母进行排序。\n项目主文件夹中包含3个tmx文件：project_name-omegat.tmx，project_name-level1.tmx\n以及project_name-level2.tmx（project_name 是项目的名称）。\nlevel1文件仅包含文本信息。\nlevel2文件以适当的 TMX 标签封装了OmegaT的特殊标签，因此它可以在支持第 2\n级 TMX的翻译工具中使用其中的格式信息，包括 OmegaT 本身。\nOmegaT文件包含了 OmegaT 特殊的格式标签，因此该文件可用于其他OmegaT项目。\n这些文件是project_save.tmx文件的副本，即不包括被称为孤立片段的主翻译记忆。它们使用适当变化的名称，这样在其他地方使用时容易识别其中包含的内容，例如在其他项目的tm子文件夹（见下面）。\n调用翻译记忆\n本地化工程师可以把过往的翻译记忆放在OmegaT项目的tm文件夹下，这样在翻译时会自动显示匹配的翻译记忆。如果翻译记忆的质量很好，可以直接放在tm/auto文件夹下，这样100%匹配的片段会利用翻译记忆进行预翻译。而质量较差的翻译记可以放在tm/penalty-xxx文件夹里。xxx可以填写30、40等数字，表示罚分，比如原来匹配100%的，罚分后就变成70%了。\n团队协作\n一个本地化项目往往需要多人协作，开源工具对此也有支持。\nOmegaT团队项目\nOmegaT支持基于git或者svn进行团队协作。以利用GitHub建立团队项目为例，我们需要先在本地建立一个OmegaT的项目，然后将项目的内容传到GitHub上的一个仓库里。需要注意的是使用.gitignore排除一些备份文件。target文件夹也不需要放入仓库。\n完成后，点击下载团队项目，输入项目的地址，就可以将团队项目下载下来。\n\n\n译员需要提交翻译，需要使用自己的GitHub账户进行登录，当然也需要对GitHub仓库有推送修改的权限。\nZanata\n当然，除了使用OmegaT的团队功能之外，我们还可以用Rainbow生成PO文件，然后上传到Zanata或者Pootle这些在线本地化系统上进行协作。当然Zanata自己支持常见的一些格式。\n\n质量管控\n使用OmegaT自带的检查功能\n翻译完成后，点击菜单工具->Check Issues，可以对翻译进行检查。\n\nOmegaT会检测检查术语是否翻译得一致、有没有丢失标签。如果有装Language\nTools插件的话，还会提示一些语法问题。\n\n使用CheckMate\nOkapi还提供了CheckMate这一质量检查工具。我们需要把生成的翻译记忆tmx文件导入。\n\n导入后点击check就可以显示错误了，涉及译文长度、译文有没有原文中对应的符号或者数字或者比译文多出哪些内容，具体可以点击configuration进行设置。\n\n其它辅助功能的配置\n语言词典\nOmegaT支持基于StarDict或为Lingvo\nDSL格式的词典，将词典下载下来后，把dict.dz，idx和info扩展名的几个文件放到dictionary文件夹即可。\n\n拼写词典\nOmegaT内置有拼写检查器，它基于在Apache\nOpenOffice、LibreOffice、Firefox和Thunderbird中使用的拼写检查器。因此能使用在这些程序中可用的大量免费的拼写检查词典，供译员在进行翻译时就能检查拼写。点击菜单的选项->Preferences，\n\n切换到Spellchecker的设置界面，在此，我们可以设置存放词典的文件夹和下载拼写检查词典。\n\n机器翻译\nOmegaT支持调用多种机器翻译服务，可以为译员提供参考。\n进入Machine\nTranslation的设置界面，可以选择要启动的机器翻译。一般我们都需要都提供机器翻译服务的网站获取访问用的API密钥，才能使用机器翻译。Google和微软的目前要收费，Yandex是免费的。\n\n使用Yandex机器翻译的效果如下：\n\n使用脚本\nOmegaT支持使用javascript和groovy作为脚本语言编写脚本。\n点击菜单->工具->脚本，进入脚本窗口。\n\n通过脚本我们可以自动执行一些批处理任务或者快捷操作，比如以片段顺序导出原文和译文，自己建立规则进行QA检查，快速打开项目文件夹等等。\n\n结语\n目前开源软件的功能和商业软件相差并不大，本地化工程师用好开源工具，往往已经足够应付日常工作的需要。", "filename": "2018-06-30-guide-of-open-source-cat-tools-for-localization-engineers.md"}, {"id": 177, "text": "\ndate: 2018-07-02 14:43:50+08:00\nlayout: post\ntitle: 用Sphinx写API文档\ncategories: 技术随笔\ntags: 技术写作\n\n相比于给各种产品写说明书，还是写API文档的技术性更强一点。\n给Python的类、函数等写说明，可以使用docstring写在代码里，然后使用sphinx自动生成。\n具体教程托管在readthedocs上：https://sphinx-apidoc.readthedocs.io/zh_CN/latest/\n如用于生成API的文档的方案总结 讲的，生成REST API用swagger更好些，国内的阿里有开源rap这一工具。\n技术文档写作者Tom Johnson的网站有API文档写作更详细的教程：http://idratherbewriting.com/learnapidoc/", "filename": "2018-07-02-writing-apidocs-using-sphinx.md"}, {"id": 178, "text": "\ndate: 2018-07-08 14:44:50+08:00\nlayout: post\ntitle: 敏锐的语言学家\ncategories: 随笔\ntags: 语言\n\n学吴语的人都知道有新派和老派的区别，就是年轻人和中老年的发音有不同的地方。有人认为应该遵循老的发音，也有人认为这是语言的自然流变。\n很多年轻人，把吴语中oe（例子：男、安、看、穿）的音发作e，更接近普通话。可能一开始只是说“男”时，oe被发成了e，而“安”时还是发oe。但后来慢慢的，发oe的词都被念作了e。这就是王士元提出的词汇扩散理论。\n一般人只能感受到发音的变化，但语言学家则能够发现现象并总结出理论。\n我不是语言学家，只是语言的学习者，了解一点语言学知识。学过后还是能有意识地讲学的理论和现象结合起来。比如上面提到的oe和e，本来是区分意义的两个音位，但现在已经是同一音位的变体了。", "filename": "2018-07-08-acute-linguists.md"}, {"id": 179, "text": "\ndate: 2018-07-08 11:27:50+08:00\nlayout: post\ntitle: 鲤鱼打挺失败\ncategories: 随笔\ntags: 健康\n\n前天微博上看到综艺节目里明星做了一个鲤鱼打挺，觉得挺酷的，也想试一下。结果试了很多次都是团身起来的，于是又去看教程。结果练了几个小时还是没成功。甩腿后上半身不起来，起来了之后也会马上落下。背部落地容易震伤内脏。\n这个动作需要一定的力量和技巧，我自己试估计暂时试不出来。反正都是起身，乌龙绞柱的方式更加容易掌握，而且实战的用处更大。我记得苏有朋版《倚天屠龙记》里明教的一帮人被成昆打倒后就是用这一办法起身的。\n乌龙绞柱有借助双腿动作直接达到站立的，这个难度较大，我看教程里介绍做一些后滚翻的训练。滚翻还是我小学时体育课上教的，我现在做起来居然和那个时候的感觉差不多。后滚翻我很害怕扭着脖子，一般都是倚着一边肩膀过来的。滚翻的用处还是很大的，可以在摔倒时保护自己。最近世界杯上内马尔的侧滚翻动作就很火。\n鲤鱼打挺其实是一个武术动作，对于一般人来说要求还是高了。我们可以做些基础的动作。比如做臀桥、深蹲等等。有很多简单而有益的健身方法，网上有很多健身教练进行传教。我以前电视上看到赵之心讲的也都不错。", "filename": "2018-07-08-kip-up.md"}, {"id": 180, "text": "\ndate: 2018-07-08 15:16:50+08:00\nlayout: post\ntitle: iOS/macOS应用的本地化\ncategories: 技术随笔\ntags: CAT\n\niOS和macOS的应用本地化还是非常方便的，以下是具体步骤：\n\n给项目添加要本地化的语言，在项目设置里操作。可以选择本地化storyboard文件\n\n在代码中使用NSLocalizedString来调用界面中显示的文本，有两个参数，key和comment。key是主要的参数，comment可以填default。\n\nXcode中选中项目，然后点击Editor，点击Export for Localization，会生成xliff文件供译员进行翻译。storyboard和NSLocallizedString里的文本都会被导出。\n\n导入译好的xliff，完成本地化工作。程序可以正常显示系统语言设置里对应的语言。\n\n导入时会自动生成Localizable.string等资源文件。你如果想手写这个文件的话当然也是可以的。B4X也是采用的类似的key/value的本地化方案，只是它会用sqlite来存储结果。\n\n以上只是粗浅的操作步骤，更多还是看苹果的文档吧：Internationalization and Localization Guide", "filename": "2018-07-08-localize-ios-mac-apps.md"}, {"id": 181, "text": "\ndate: 2022-10-06 10:40:50+08:00\nlayout: post\ntitle: 锻炼\ncategories: 随笔\ntags: \n\n今天讲下我办健身房的卡一年多以来的锻炼体会。\n我锻炼的目的是保持身体健康，比如加强心肺功能、增强力量、改善久坐导致的前列腺不适等问题。我通常会在下班后通过跑步这样的有氧运动来放松身心和加强体能，做引体向上、俯卧撑、深蹲等抗阻训练来加强肌肉力量。跑步和力量训练其实是相辅相成的，如果力量不足，跑步可能会受伤，特别是大步幅的跑步。\n都说健身先键脑，意思是开始锻炼前，要学习一些理论知识，做到科学锻炼。这些理论知识往往是前人总结出来的经验，然后需要我们结合自己的实践去掌握和运用。下面讲下我学到的一些经验：\n\n了解身体的不同肌肉和训练方法。\n\n做一个动作前，我们应该知道这个动作会调用到哪些肌肉。这些肌肉和骨骼是如果一起作用的，力的分析是怎样的。\n比如双臂屈伸调用胸肌和三头、正手引体向上主要调用背阔肌。在做这些动作时，就要感受目标肌肉是不是在发力。\n又比如要用哑铃锻炼三角肌后束，需要弓身才能以对抗重力的方式用哑铃练到后束。\n\n通过分组训练提高训练的容量。关注运动表现。\n\n大学时我每天晚上做10个引体向上，做了三年，极限还是一次做十个。最近我采用分组训练，第一组做10个，第二、三、四、五组做5个，第六组做10个，这样加起来可以做40个引体向上。如此训练一段时间后就可以突破一口气10个的极限了。\n\n做好热身和拉伸。\n\n比如跑步，跑前要慢走热身、活动关节，跑步结束后也得慢慢走一下，拉伸放松肌肉。我之前跑步会导致脚底疼，是因为不知道放松足底筋膜。\n\n做功能性训练。\n\n我们可能还存在体态问题。比如有的人走路时，屁股一扭一扭的，往往是臀中肌的力量不够，需要做专门的功能性训练。\n健身训练的细节很多，我这里就不展开了。锻炼需要讲究科学方法，同时也需要不断的坚持。我觉得见到运动表现提高或者身体变好看后，自然而然就会继续坚持下去。\n相关资料：\n九十年代末健身教学（珍藏VCD复刻）", "filename": "2022-10-06-exercise.md"}, {"id": 182, "text": "\ndate: 2018-07-24 20:45:50+08:00\nlayout: post\ntitle: 科学、技术、工程\ncategories: 随笔\ntags: \n\n看到这篇文章：斯坦福教授James Landay：AI时代教育要培养学生用新工具解决问题的能力，我不由开始思考科学、技术和工程的关系。\n科学、技术和工程是STEM概念中的三个方面，数学是它们共同的基础。\n科学偏向于原理，技术偏向于应用，而工程偏向于运用科学原理来制造出技术产品。\n我曾经和本科同学争辩程序员需不需要会写代码。现在想来，计算机科学家和高级软件工程师们的确不需要太多实际的编码能力。这种工程方面的知识会耗费大量的时间，不利于集中精力做研究。\nScratch是图形化的少儿编程语言，利用它，孩子们不用写代码就可以做出多彩的游戏。它强调的是编程思维的训练。而计算机科学研究者们注重的即是思维，能把复杂的问题抽象出来并解决。\n我作为工程硕士，想想也要适当学点原理性的知识，掌握基本的工程设计与实践能力，解决实际工作中的问题。", "filename": "2018-07-24-science-technology-and-engineering.md"}, {"id": 183, "text": "\ndate: 2018-07-24 20:25:50+08:00\nlayout: post\ntitle: STEAM与高等教育——以CAT教学为例\ncategories: 随笔\ntags: 教育\n\nSTEAM是指融合科学、技术、工程、艺术和数学领域的知识的一种综合教育，一般教学生用编程来运用这些知识，解决实际问题。少儿使用Scratch这样的图形软件来编写程序，国内有类似的编程猫。\nSTEAM教育的一个不足在于师资的问题，因为STEAM要求老师具有跨学科的知识，所以一般STEAM教育的对象都是低龄儿童。而学生长大之后，老师的能力不足以满足学生增长的学习能力，往往需要学生自学成才。\n讲了STEAM后，再结合高等教育。就比如说教授计算机辅助翻译，要求老师具备英语和计算机的能力，最好还有具体的翻译项目的经验。\n其实，计算机辅助翻译不是教授软件的使用这么简单。翻译是内容生产的一部分，我们需要了解内容生产的过程。比如网站、文档、杂志、书、音视频，这些内容都是如何生产出来的。\n所以我们如果以掌握计算机辅助翻译为目的，那么教学的内容应该包括翻译的知识、编辑出版的知识、计算机基础与网页、脚本编写的知识、市场营销的知识等等。\n我们不能要求每门课的老师对其它课的内容都很精通，但各门课程之间应该彼此关联。这样，我们可以像STEAM教育要求的一样，融合多种知识来解决问题。", "filename": "2018-07-24-steam-and-higher-education.md"}, {"id": 184, "text": "\ndate: 2018-07-29 17:13:50+08:00\nlayout: post\ntitle: 从白箱式到黑箱式交互式翻译预测\ncategories: 技术随笔\ntags: CAT\n\n最近综合实践的项目是研究交互式机器翻译，我搜了不少文献进行阅读。对这方面也有了一点了解。\n交互式机器翻译（interactive machine translation）最早是1997年由Foster提出的，当时的项目叫TransType，此后不断发展。大抵是机器翻译提供一个参考译文，然后随着用户的输入（前缀发生变化，prefix），提供不同的参考内容（后缀，suffix）。一般机器翻译系统和翻译界面都是耦合的，机器翻译系统被修改以适应交互式机器翻译的需要。这往往需要开发者对机器翻译系统有相当深刻的了解，比如欧盟的CASMACAT系统的开发者之一就是开源的统计式机器翻译Moses的开发者。\n在2014年，Pérez-Ortiz等人提出了一个黑盒的方法。它可以使用任意机器翻译系统、翻译记忆和双语词典提供的双语资源，为翻译提供参考。该方法将原文以n-gram的办法分为多个片段，然后每个片段都利用双语资源进行翻译，然后根据一定的排序方法（目前是简单的距离方法），给用户提供有限的几个建议。用户输入一个前缀，就会做进一步筛选。因为使用了各种双语资源，再叫交互式机器翻译就不合适了，一般叫做交互式翻译预测。\nDaniel Torregrosa等人开发了Forecat这一黑盒式的交互式翻译预测系统，它最初是一个java写web工具。后来又开发了OmegaT的Forecat插件，利用了OmegaT的机器翻译与自动完成功能。\n这个插件我试用下来还是很不错的，因为机器翻译在句子级别很难做得完善，但是以语块为单位使用机器翻译，可以给翻译提供很大的帮助。\n\n不过Forecat目前还有不完善的地方，比如输入的中文需要空格才能提示下一部分的翻译，自动完成时还会在结尾处加上空格，对中文这样没有分词的语言支持的不好。我给作者提了一个issue：https://github.com/transducens/Forecat-OmegaT/issues/9\nForecat-OmegaT的使用方法：\n\n在此https://github.com/transducens/Forecat-OmegaT/releases下载插件，复制到omegat的plugins文件夹。\nOmegaT需要设置一个机器翻译，我用的Yandex，它目前是免费使用的。\n更多复杂的方法，比如自己训练神经网络，我也不太会。。\n\n参考文献：\n* Alabau, V., Bonk, R., Buck, C., Carl, M., Casacuberta, F., García-Martínez, M., . . . Tsoukala, C. (2013). CASMACAT: An Open Source Workbench for Advanced Computer Aided Translation. The Prague Bulletin of Mathematical Linguistics, 100(1), 101-112.\n* Peris, Á., Domingo, M., & Casacuberta, F. (2017). Interactive neural machine translation. Computer Speech & Language, 45, 201-220.\n* Daniel, T., Mikel L, F., & Juan Antonio, P.-O. (2014). An Open-Source Web-Based Tool for Resource-Agnostic Interactive Translation Prediction. The Prague Bulletin of Mathematical Linguistics, 102(1), 69-80.", "filename": "2018-07-29-from-glass-box-to-black-box-interactive-translation-prediction.md"}, {"id": 185, "text": "\ndate: 2018-07-29 18:39:50+08:00\nlayout: post\ntitle: Intel计算棒：随身携带的PC\ncategories: 电子数码\ntags: \n\n\n之前一篇文章讲了模块化笔记本的构想，其中主机选择的是intel compute stick计算棒。最近上班路上要花1个小时，带着笔记本电脑不方便。公司有键鼠和显示器，于是intel计算棒就成了非常合适的选择。\n320元淘宝了第一代计算棒，硬件配置是atom z3735f cpu、2g内存、32gb emmc，支持sd卡，一个usb2.0,一个hdmi公头。计算棒有带风扇，散热应该比win板好。再配上一个带有线网卡的usb hub，功能基本就全了。\n\n计算棒测试下来，基本的办公都没有问题。编辑word、查看图片和pdf、运行聊天软件、开十几个网页。偶尔用adobe illustrator查看一些素材。翻译文档使用雪人CAT，用tesseract对文档进行ocr。\n不过毕竟硬件配置较低，有时候内存不足，QQ会自动退出。打开几十兆的图片会卡。我下了ACDSee3.1看图，流畅很多。其实计算棒的性能和08年的笔记本相比，还是好很多的。\n性能不是计算棒的强项，它最大的优点还是便携。工作回来，在家里还可以继续用，不用做什么同步文档的操作。\n其它便携式设备，比如intel nuc，性能更好，不过重量上还是不如计算棒。而且计算棒用5v2a的电源即可以供电，nuc起码要19v。", "filename": "2018-07-29-intel-compute-stick-full-pc-on-the-go.md"}, {"id": 186, "text": "\ndate: 2018-08-11 22:31:50+08:00\nlayout: post\ntitle: 翻译项目中的术语管理\ncategories: 随笔\ntags: CAT\n\n术语(term)是在特定学科领域用来表示概念称谓的集合。术语可以是词，也可以是词组，用来正确标记生产技术、科学、艺术、社会生活等各个专门领域中的事物、现象、特性、关系和过程。^qdx\n在语言服务实践中，术语管理是为了满足某种目的而对术语资源进行管理的实践活动，通常包括术语的收集、描述、处理、存储、编辑、呈现、搜索、维护和分享等。在翻译项目中，术语管理可以为协作内容和翻译质量的一致性提供保障，通过在项目流程各个环节中借助术语管理系统( Terminology Management System)和术语库(Term Database)技术实现。^whs\n下面我们主要从翻译实践的角度分别讨论术语的创建、使用与分享。\n术语的创建与使用\n比如我们目前要翻译一本基于《赛车总动员》的故事讲解汽车知识的书，有哪些词应该被认为是术语？\n首先，书的后面有一个词汇表（glossary），这是书的编撰者已经收集好的术语，我们可以利用起来，做一个双语的词汇表。\n\n词汇表里都是汽车的术语，缺少关于《赛车总动员》里各种地名、人名的条目。一般的翻译甲方会提供一个对照表，没有的话需要我们在翻译过程中自行整理。\n利用术语抽取工具我们还可以让计算机帮助我们先自动提取出一些候选术语。\n术语的抽取有多种方法，比如统计n-gram的词频、对原文进行句法分析提取名词短语。对于中文，还有基于互信息和信息熵的抽取方法。提取出来后往往还要去掉停用词表内的词语，这样得出的结果和需要的术语会比较接近。用户可以选择哪些结果可以存入术语库。\n目前的CAT软件大多带有此类功能，比如SDL Multiterm、Deja Vu（Lexicon功能）、MemoQ和Okapi Rainbow。\nCAT软件要存储术语，首先得建立一个术语库。建立术语库时，可以选择语言对、设置术语库等领域的元信息以及术语库的字段设置。下图为MemoQ建立术语库的界面。\n\n建立术语对时，除了添加原文和译文，还可以添加备注、设置单词或短语的词性、设置术语匹配的方式等。\n\n设置术语匹配里可以选择是否大小写敏感，这在如原文由PDF转存时大小写混乱的情况下很有用。\n术语的共享\n术语可以从术语库中导出，用于和其它人或其它CAT工具进行交换。导出的格式可以是TAB分割的文本或者TBX等格式。\n很多CAT工具都支持术语库的在线共享。比如雪人CAT的网络协作平台。设置好服务器地址和账户后，具体的操作和平常操作本地术语类似。可以实时和他人共享一个在线术语库。\n当然，在线术语共享要考虑一个审核的问题，术语需要由高一级的管理人员审核才能使用。\n\n项目完成后的术语管理\n在项目完成后，应该对翻译项目的术语进行进一步整理，以备下一次使用。\n很多公司没有好的资源管理，结果下次在翻译时找不到过去的资源，造成很多不必要的重复劳动。\n在线的术语服务\n欧盟的TAAS（Terminology as a service）是一个在线术语服务平台，可以获取最新的术语对、利用API分享术语。MemoQ和OmegaT有集成这一服务。", "filename": "2018-08-11-terminology-management-in-translation.md"}, {"id": 187, "text": "\ndate: 2018-08-19 16:53:50+08:00\nlayout: post\ntitle: 使用机器翻译来辅助人工翻译\ncategories: 随笔\ntags: CAT\n\n机器翻译可以直接运用于以获取信息为目的，允许译文存在错误的场景。而对于要求较高的，比如出版物的内容的翻译，往往需要人工译者。\n那么机器翻译可以给人工翻译提供什么帮助呢？\nPhilipp Koehn认为目前主要有两种模式[^pk]：译后编辑与交互式机器翻译。\n译后编辑\n给出机器翻译，由译员在此基础上进行修改，这叫做译后编辑模式。机器翻译可以让译员快速地了解原文的大致意思，如果结果不错，译员只需进行一点润色便可以完成翻译。\n大多数CAT软件都支持调用机器翻译。在线CAT平台MateCAT，以译后编辑为主，并且除了机器翻译，还支持调用在线翻译记忆服务MyMemory进行辅助翻译。在创建项目时还需要选择领域，以利用针对性更强的资源。\n\nMateCAT还可以根据用户译后编辑的结果修改背后的机器翻译的模型参数，做增量式学习，这样一个机器翻译的错误被纠正后，下次就不用再纠正了。SDL Trados 2017的Adaptive MT功能和此类似。\n但是机器翻译有时不能输出一个很好的句子结果，另外这种在机器翻译上修改的模式显得没有创造性。而译后编辑的模式也并不是一个很好的人机交互模式[^atanet]。于是就有了另一种模式。\n交互式机器翻译\n机器翻译系统根据用户输入的内容，提供翻译的建议，由用户选择是否采用，这叫做交互式机器翻译，或者叫交互式翻译预测。最早做出的项目是1997年的TransType，后来又涌现了CASMACAT、Forecat等交互式机器翻译系统。\nTransType\n使用在线机器翻译的用户一般不知道统计式机器翻译系统可以生成一串备选翻译，TransType根据用户的输入对备选翻译列表进行筛选，得到合适的翻译建议。结果会以下拉列表的形式呈现。\n\nSDL Trados的AutoSuggest提供了相似的功能，不过除了机器翻译，它还可以根据上下文、翻译记忆和定义的词典生成翻译建议。\n\nCASMACAT\nCASMACAT（Cognitive Analysis and Statistical Methods for Advanced Computer Aided Translation）[^casmacat]基于MateCAT开发。它使用了一个专门的统计式机器翻译系统，和翻译界面的耦合程度高。用户输入一部分翻译后（前缀），系统会给出一个机器翻译结果（后缀），单词还可以设置用颜色来表示置信程度。\n\nCASMACAT可以记录用户的翻译过程，以便进行相关研究。\nForecat\n和CASMACAT与机器翻译相耦合的方式不同，又有人提出了一个以黑箱的方法利用机器翻译等双语资源的方法，开发出了Forecat这一软件。黑箱的方法更容易理解，运行成本低，可利用资源多，试验结果显示比CASMACAT这样的白箱方法效果更好。[^compare]\nForecat将原文拆分为若干片段，片段的最大长度可以定义，默认为4个词。然后，它使用机器翻译或者翻译记忆翻译这些片段，然后根据用户输入匹配译文片段。匹配译文开头时，如果开头一样，还要根据输入框中的位置和对应原文的位置进行排序。这样得到的片段会很多，很多距离较远的片段其实提供的参考价值更大，所以一般采用所处编辑位置最长和最短的片段。\n建议以下拉列表的方式提供，默认显示4个建议。\nForecat使用Java编写，除了提供Web应用外，还可以集成到开源CAT工具OmegaT中使用。\n\nPTM\n白箱式交互式机器翻译也在不断地完善中。斯坦福大学开发的预测型翻译记忆（Predictive translation memory, PTM）系统[^ptm]，基于混合主体（mixed-initiative）人机交互设计原则，在拥有之前的交互式翻译系统的特性的基础上上更加注重交互界面的设计。\n比如它强调减少眼球的移动。传统的CAT工具都是采用的双栏表格形式，PTM使用的一行原文，一行译文相互交叉的模式。它认为分栏阅读时眼球移动的距离较大，而后者更加符合阅读习惯。因为原文和译文交叉，对于英语和法语这样都是由字母构成的语言不易区分，于是译文使用了等宽字体。\n\n上图是PTM的界面截图，A是原文，B是翻译了的整句，C是当前进行翻译的句子，如果原文的单词已经被翻译（通过词对齐实现），颜色会变为蓝色，D是翻译是用来给出建议的下拉列表，E是在输入框中给出的翻译。在原文的单词上悬停鼠标，还可以查看释义。\nPTM对译者的帮助主要在三个方面：\n\n通过查词和显示已翻译的词，了解原文。\n给出粗略的机器翻译。\n利用下拉列表提供翻译的自动完成功能。\n\nPTM还有一个特点是利用斯坦福的句法分析工具提取短语，以此来确定翻译建议的单元。\nPTM的作者现已开办公司，推出了Lilt这一款商业化的计算机辅助翻译工具。\nTransmart\n腾讯AI Lab的交互式机器翻译项目，目前提供一个在线翻译页面，融合辅助翻译输入法。\n具体可以看黄国平博士在译直播上的讲座：《译者与人工智能辅助翻译的约会 – 黄国平》\nBasicCAT\nBasicCAT对原文做分词处理，并利用Stanford CoreNLP做句法分析以获得短语片段，提取出来的单词和短语会调用机器翻译进行翻译，在翻译时如果输入的内容有匹配，会以下拉列表的形式提示。\n使用说明：自动完成（交互式机器翻译）\n原理介绍：BasicCAT开发笔记（九）：交互式机器翻译\n结语\n机器翻译主要通过直接提供译文或翻译建议，帮助用户了解原文，减少输入时敲击键盘的次数以提高翻译效率，实现人与机器合作完成翻译任务。\n译后编辑与交互式机器翻译两种模式也并没有优劣之分，随着机器翻译质量的提高，两者的实用性都会大大加强。\n另见：机器翻译译后编辑注意事项\n2019/05/26更新\n机器翻译的使用带来了新的定价模式，比如有人提出按编辑距离计算价格。而很多人认为，既然是基于机器翻译完成的，应该打一个折扣。Lilt的CEO Spence Green认为[^green]，这样的话，技术是给译员增加了成本，让翻译变成血汗劳动。新的时代，我们需要探索合适的商业模型。\n2019/10/02更新\n现有的机器翻译提供商一般都提供定制化机器翻译功能，以适用于不同领域和文体的文本，以下是一个列表：\n\n阿里云自学习平台\nmodernmt\nKantanMT\nGoogle AutoML Translation\nMicrosoft Custom Translator\nIBM Watson Customizing your model\nAmazon Custom Terminology\n\n另外还有很多开源项目，这里列出支持交互式机器翻译及增量学习的：\n\nnmt-keras\nmodernmt github repo\n\n参考文献\n[^pk]: Computer Aided Translation[EB/OL]. https://www.microsoft.com/en-us/research/video/computer-aided-translation/, 2016/2018-8.19.\n[^atanet]: Beyond Post-Editing: Advances in Interactive Translation Environments[EB/OL]. http://www.atanet.org/chronicle-online/?p=2448, 2016/2018-8.19.\n[^casmacat]: Alabau V, Bonk R, Buck C, et al. CASMACAT: An Open Source Workbench for Advanced Computer Aided Translation[J]. The Prague Bulletin of Mathematical Linguistics, 2013, 100(1): 101-112.\n[^compare]: Torregrosa D, Pérez-Ortiz J A, Forcada M L. Comparative Human and Automatic Evaluation of Glass-Box and Black-Box Approaches to Interactive Translation Prediction[J]. The Prague Bulletin of Mathematical Linguistics, 2017, 108(1): 97-108.\n[^ptm]: Green S, Chuang J, Heer J, et al. Predictive translation memory: a mixed-initiative system for human language translation[A]. Association for Computing Machinery Symposium on User Interface Software and Technology[C], 2014: 177-187.\n[^green]: THE RISE OF THE MACHINE: AI, ML, MT AND MORE[EB/OL]. https://trends2018.memoq.com/ai-ml-mt-and-more/, 2018/2019-5.26.", "filename": "2018-08-19-use-machine-translation-to-help-human-translation.md"}, {"id": 188, "text": "\ndate: 2018-08-25 19:31:50+08:00\nlayout: post\ntitle: Markdown引用参考文献\ncategories: 技术随笔\ntags: \n\n使用Markdown引用参考文献，主要使用它的脚注功能。\n用法如下，和latex的方式差不多：\n```\ntext[^referenceID]\n[^referenceID]: Computer Aided Translation[EB/OL]. https://www.microsoft.com/en-us/research/video/computer-aided-translation/, 2016/2018-8.19.\n```\n之后，我们可以利用pandoc将其转换为Word。\n$ pandoc input.md -o output.docx\n可以在Word中操作，把脚注转换为尾注。\n\n具体的效果可以见此：使用机器翻译来辅助人工翻译", "filename": "2018-08-25-markdown-reference.md"}, {"id": 189, "text": "\ndate: 2018-08-26 14:50:50+08:00\nlayout: post\ntitle: 翻译InDesign文件\ncategories: 技术随笔\ntags: CAT 出版\n\nInDesign是常用的排版软件，我翻译的许多儿童绘本都是用它来制作的。\n最新的InDesign默认使用indd格式保存，并不被大多数CAT软件支持。我们需要将其转换为idml格式文件。idml基于xml，可以用来兼容旧版的InDesign，而开源的scribus1.5版也支持了idml。\n生成idml后，就可以直接导入Trados等CAT软件了。我们也可以使用Okapi将其转换为XLIFF文件，这样所有主流CAT软件都支持这一格式。如何使用Okapi可以参见此文：面向本地化工程师的开源CAT工具教程\n最后生成目标语言的idml文件，使用排版软件打开查看结果。\n注意事项：\n\nTranslating Indesign Files - Sending back IDML to the INDD format https://forums.adobe.com/message/4130893 这里提到了indd文件如果使用了内嵌图片，需要先取消内嵌，改为链接本地图片。\n使用Scirbus打开生成的idml文件，会无法显示中文，这时需要手动修改中文字体。\n用CAT软件打开后，文本的顺序可能和原文有差别。比如第二页的文字出现的垂直位置比第一页的靠前，结果在第二页的文字会被排在前面。这点在自由性上不如直接翻译纯文本，纯文本可以随便调顺序。\n\n其它：\n\nRedokun支持在线将Indesign文件导出为xlsx或者xliff文件。https://forums.adobe.com/message/8744798#8744798\nIncopy是Adobe允许作家、编辑和设计共同编辑一个indesign文件的软件，更加适合文字编辑工作。\n\n2018-09-04更新：\n打开一个idml中的story文件，我们可以看到以下内容。可以发现，正文的文字会因为格式不同被分割开来。比如标题中每个单词的首字母大写。这样导入CAT软件中，会有标签过多，以及一句话被分为多个片段的问题。\nmemoq便选择丢弃部分CharacterStyleRange信息。我测试Trados需要勾选“允许打开未支持的版本”来打开cs4之后版本的indesign导出的idml文件。而memoq没有问题。Omegat使用Okapi的话，会生成大量标签，而且如果标签处理得不好，很可能无法生成目标文件。商业软件还是有它强大的地方的。\n```\n\n\n\n\n\n\n\nColor/C=100 M=100 Y=31 K=22\n\n\n\n53.33563679789722\nBurbank Big Regular\n\nTh\n\n\n\n53.33563679789722\nBurbank Big Regular\n\ne \n\n\n\n53.33563679789722\nBurbank Big Regular\n\nRea\n\n\n\n53.33563679789722\nBurbank Big Regular\n\nl \n\n\n\n53.33563679789722\nBurbank Big Regular\n\nScienc\n\n\n\n53.33563679789722\nBurbank Big Regular\n\ne \n\n\n\n53.33563679789722\nBurbank Big Regular\n\nof\n\n\n\n\n47.11735130636342\nBurbank Big Regular\n\nSupers\n\n\n\n\n```", "filename": "2018-08-26-translate-indesign-files.md"}, {"id": 190, "text": "\ndate: 2018-08-26 14:26:50+08:00\nlayout: post\ntitle: 翻译与排版\ncategories: 技术随笔\ntags: CAT 出版\n\n翻译本来应该只是纯文字的工作，但是大多数情况下，文本内容和样式都是高度耦合的，我们在翻译时需要处理样式。我们在用CAT软件翻译word文档、网页等以标记语言格式存储的内容时，往往需要处理原文中的标签。CAT软件能够处理这些文件格式已经为排版提供了很大的帮助，如果不支持，往往需要手动进行替换。处理用InDesign排的几十页的图书还不算麻烦，关键是几百页的手册，还经常会进行更新，重新排版的工作会很繁琐。\n我在出版社翻译图书，一般都是照着英文PDF进行翻译，将结果保存到Word里。如果要使用CAT软件，需要把文字转录下来。如果PDF的文字可复制还好，不可复制的话还要使用OCR软件进行识别。而即使可复制，也会存在空格、换行、内容不按原文顺序等问题。利用ABBYY FineReader或者Microsoft Word的PDFREFLOW功能可以将PDF转换为Word等格式文件，效果还可以。我自己基于pdfbox和tesseract写了pdf转txt的免费工具，可以将pdf的文字提取出来，并去掉多余的内容。提取出来后，还需要人工进行审校。\n翻译完成后，我们要生成目标文件。如果没有用CAT软件，需要打开word、indesign等文件，手动进行文字替换。使用CAT软件一般可以直接生成目标文件，但也要检查是不是和原来的格式一致。有时候，替换成中文后还需要修改字体为中文字体，否则不显示中文。另外，译文和原文长度不一样，还要考虑会不会字体大小、会不会越界等问题。\n我在的出版社一般请人完成翻译后，再把译文给美编进行排版。这样，翻译工作和排版工作相分离，也不失为一个好办法。", "filename": "2018-08-26-translation-and-desktop-publishing.md"}, {"id": 191, "text": "\ndate: 2018-08-28 20:40:50+08:00\nlayout: post\ntitle: 在出版公司期间写的一些工具\ncategories: 技术随笔\ntags: CAT 出版\n\n在出版公司实习时，碰到不少需要批量处理的工作，写个程序出来虽然会费不少工夫，但写完后就一劳永逸，可以节省挺多时间。涉及到文字转录、图片与PDF的处理。\n文字转录\n文字转录的主要目的还是导入计算机辅助软件进行翻译，我一般看着PDF，对一遍转录的原文，理解原文后再进行翻译。\n1、截图转文字\n一开始要翻译小熊维尼的漫画，因为文字存在扫描版PDF里，用Word转会保留原文的表格，不是很方便。所以我基于tesseract写了一个截图转文字的程序。\n\n其它的第三方软件，ABBYY也支持截图转文字，而知网CAJ阅读器支持选中PDF区域进行识别。\n2、PDF按章节转文字\n利用pdfbox可以提取PDF的图像和文字。\n如果PDF的内容是单纯的图片，就把图片提取出来，用tesseract进行文字识别。如果支持复制文字，就可以直接提取。\n将文字按页导出，然后输入章节的页码信息可以提取出按章节分割的txt文件，方便翻译。\n代码见此。\nPDF处理\npdfbox支持PDF的分割、合并、图像与文字提取等操作。\n利用它，写了PDF转图像的工具。\n而图像转PDF稍微麻烦一点，改使用Python+PyMuPDF库实现。\n其它文字处理\n1、词汇表按拼音顺序排列\n将以下从英文翻译过来的词汇表重新按拼音顺序排列。主要利用了java的pinyin4j库来实现文字转拼音。将纯文本进行结构化这一步的代码比较麻烦一点。代码见此。\nA\nAtmosphere 大气层\n包裹着行星或者卫星的气体层。\nB\nBarrier 屏障\n阻止某物从一个地方进入另一个地方。\nBunker 地堡\n战争中用来为士兵提供掩护的工事。\nC\nCamouflage 伪装\n和周边环境相融合的能力。伪装可利用皮肤颜色、材质和身体形状实现。\nCartilage 软骨\n人和动物体内一种坚韧的组织。不像骨头，软骨可以非常容易地进行弯曲。\n结果：\nD\n大气层 Atmosphere \n包裹着行星或者卫星的气体层。\n地堡 Bunker \n战争中用来为士兵提供掩护的工事。\nP\n屏障 Barrier \n阻止某物从一个地方进入另一个地方。\nR\n软骨 Cartilage \n人和动物体内一种坚韧的组织。不像骨头，软骨可以非常容易地进行弯曲。\nW\n伪装 Camouflage \n和周边环境相融合的能力。伪装可利用皮肤颜色、材质和身体形状实现。\n2、生成索引\n根据上述的词汇表，还可以生成索引。词汇后面显示在正文中出现的页码。\n我们可以将生成的PDF每页的文字导出，设置正文页与PDF实际页数之差和要索引的页码，然后就可以生成索引了。\n\n3、比较字表中的重复\n分级阅读有不同等级的字表，每个字表的内容不能有重复。\n用Python写程序，将每个字表的内容存为一个列表，然后进行比对，导出重复的结果。", "filename": "2018-08-28-tools-written-in-publishing-house.md"}, {"id": 192, "text": "\ndate: 2018-09-02 09:39:50+08:00\nlayout: post\ntitle: 在出版公司实习\ncategories: 随笔\ntags: 出版\n\n来实习也快两个月了，也来谈点体会吧。\n实习的动力\n出版业的实习工资很低，每天只有70元，不像互联网公司能有200元以上。但对于现阶段的我来说，钱并不重要。而且70块钱也已经足够我的生活费了。另外就像研究生的课程一样，我在意的并不是分数，而是能真正学到什么、做点什么。每个人都看书，但并不是每个人都了解出版行业。我之前并不了解出版行业，来了后可以接触新的东西，是件很有趣的事情。我还关注了一些编辑的博客，出版业相关的网站。\n对于编辑这样创造性的工作，金钱的激励其实并不明显。这个视频（Dan Pink-Drive: The surprising truth about what motivates us）中提到，对于重复性的机械劳动，金钱的奖励是有效的。而对于需要思考的工作，金钱的奖励往往会起到负面影响。人还有其它的动机。人们希望有一定的自主性、可以不断提高自己的技能，然后创造价值。Linux、Apache这样的开源软件，Wikipedia这样的非盈利性网站，不赚钱，但影响了整个世界。当然，这些项目的志愿者在现实中往往是有工作的。\nEgmont的口号是“We bring stories to life”。我们的编辑主要还是做故事的。而我主要是把这些故事翻译成中文。遇见好的故事是一件让人开心的事情。我来公司，最初就是因为小时候看的《米老鼠》杂志，有着有趣的故事。而碰见好的故事，自然想分享给别人。\n编辑出版的流程\n实习期间，我主要做的翻译。对于书的编辑出版，我是在公司的环境下耳濡目染加上网上查阅资料进行了解的。 \n一本书首先从选题开始，选题要填一个选题申请表，进行报批。我们可以来看看要填哪些内容，每家出版社的设置会不一样，以下只是例子。\n\n基本信息：书名、类别、作者\n作者简介\n读者对象\n选题思路\n内容及特色\n市场分析\n卖点分析\n\n除此之外，可能还有开本设计、估计定价、投资核算、销售预期（首印数、首印C1毛利率、滞销率）等内容。\n一般选题都是由策划编辑来做的。策划编辑有了想法，就会寻找作者。当然，也有是作者主动来找编辑的。一般作者应该在动笔写书之前就和编辑联系，看看别人对自己的书的想法，然后合作完成书籍的创作。\n如果出版社做的是引进书，除了联络版权方，还得找译者。有的公司和国外的公司长期合作，可以很方便地引进外国的书。\n有了稿件后，出版的流程一般为三审、三校、申请书号、排版、印刷、出版。\n2018-09-12更新：\n咨询了我们领导后，流程如下：\n\n有了稿件之后的流程一般为：排版、一校、二校、三校、二审、专家二审、三审、申请书号、申请CIP、出数码样、出蓝纸、印刷、入库、上市\n\n三审要给三个人进行审核。初审一般由负责图书的编辑完成，对原书进行检查，并进行编辑修改。然后再交给更高职位的人继续完成复审和终审。二审可能会交给外面的专家进行外审。\n三审完成后，就可以把作者交来的电子稿以及三审完成的打印稿（现在编辑还是把稿件打印出来，然后用笔在上面修改）交到排版公司，进行设计排版以及改正错误，与排版公司还要签订协议。另外版面设计、封面设计、采用的纸张、开本等也都要进行考虑。\n三校也是需要不同的人校对三遍。三校看着打印出的稿件进行校对的，除了看文字的问题，还要看输出的图片、样式有没有问题。一般在印刷制片前，先用数码打样的方法出一个数码样给编辑校对。二校和三校一般不再看全稿，直接看有问题的页。\n校对完成后再处理书号、CIP数据，确定定价，进行征订和提印、印刷入库、发行。图书终于要卖给读者了。\n在网店销售，一般编辑还要做个详情页，有时还要做专题。我参与了一本性格养成绘本的专题制作，想了好几天，才想出一个解决孩子入学问题的专题。然后还有群分享，主要是宝宝地带、喆妈公益阅读之类的QQ群里，给妈妈们介绍书。重点书籍，还要开发布会。编辑从选题到销售，要做的事情真不少。还有很多的细节我是不清楚的。\n研一的信息产品设计课里主要介绍了印刷知识，比如字体、色彩、装订、折页，当时觉得无聊，了解了出版行业后，觉得还是挺有意思的。\n出版流程部分参考了以下资料：\n\n图书出版的主要流程有哪些？ - 知乎\n如何出版一本书2：编辑约稿和出书流程 - 简书\n如何出版一本书？- 知乎\n图书出版的专业术语\n\n翻译总结\n翻译技术的使用\n翻译是需要静下心来慢慢完成的，但是翻梦工厂上万字的故事书时我为了加快翻译速度，还是使用了机器翻译+译后编辑的模式。它有几点好处：\n1、 提高翻译的速度。现在机器翻译的质量已经不错了，译文只需稍作修改，不用一个字一个字敲译文了。另外，机器翻译还可以使我迅速了解原文意思。\n2、 丰富中文的表达。机器翻译是根据别人的翻译结果训练出来的，生成的译文会有不少不错的表达，很多是我没想到的。英译汉其实挺看重中文水平，我的中文水平还有待提高。\n另外，关于文字转录、使用CAT软件、处理文件格式，我在之前的博文中有提到，就不细讲了。\n翻译的细节问题\n我平时主要翻译绘本故事，原文一般都比较简单易懂。这时比较考验中文水平。像重点图书，一般都是请名家翻译的，比如任溶溶翻译了《奇先生妙小姐》。下面我试着总结一些问题。\n1、对话。对话翻译时要注意一个标点符号的问题。如果前后两句是连在一起的，英文里前一句结束使用了句号，中文里得用逗号。\n\n\"I'm not sure we should leave the puppies,\" Perdita said. \"Will Nanny be able to handle all fifteen of them by herself?\"   \n“我不确定我们应不应该离开小狗崽们，”白佩蒂说，“保姆能够一个人照顾好15只小狗吗？”\n\n2、意译。英语和汉语还是有很大的差别，特别是下例中big heart和no bones about it等表达时，照字面意思翻译过来，会显得佶屈聱牙。下面的例子主要是介绍雪宝的性格，我们可以采用意译的方法。其实，我们也完全可以摆脱原文进行再创作。\n\nOlaf is a curious and trusting snowman with a big heart. No bones about it, Olaf is all about embracing life to its fullest! From warm hugs to summertime daydreams, Olaf is filled with optimism and happiness. \n雪宝是一个亲切可爱的雪人，他好奇心强、对别人充分信任。雪宝热爱生活，积极乐观，始终保持开心的一面。\n\n了解英语汉语的差别，可以看看连淑能的《英汉对比研究》。\n3、译名统一问题。人名、电影名、地名等，如果之前有过翻译，需要沿用之前的翻译。比如超人总动员里的弹力女超人Helen Parr，在之前出的书里被翻译为芭荷莉。这时，如果有电子版的语料库就很方便了。\n没有的话，还得翻之前的书。再没有，得搜索引擎上搜。如果都没有，就得自己想翻译了。人名的翻译往往采用音译。英语人名还好办，碰到西班牙语、法语，都不知道怎么发音。而日语还得去确认对应的汉字。\n另外还需要能体现性别的差别，比如《马达加斯加》里的雌性河马Gloria被翻做格洛丽亚而不是格洛里亚。\n人名翻译是有词典的，比如《世界人名翻译大辞典》，不过也会有收录不全的问题。\n4、创造性翻译。有很多原书具有创造性的表达，翻译过来，也需要一定的创造性。比如介绍怎么画米老鼠的一书中，有对背后故事的介绍和角色的介绍，分别是inside story和personality plus，怎样翻为中文，需要一定的创造力。我简单地把它们翻译为故事背后和人物解析。\n待更新……", "filename": "2018-09-02-being-an-intern-in-publishing-house.md"}, {"id": 193, "text": "\ndate: 2018-09-04 22:40:50+08:00\nlayout: post\ntitle: Python+Selenium自动化操作网页\ncategories: 技术随笔\ntags: 网络\n\n最近听我所在出版公司的编辑说用erp系统填表单，书籍名字前多了个空格被退回。我想系统没有对文本做strip，只有自己来实现了。\n本来想这种自动化操作可以用autoit，但autoit的语言风格我现在实在不适应，而且没有java和python这样有众多的类库。于是转用python。\n用python自动操作网页，就可以用selenium了。官网介绍现在的浏览器都附带了对它的支持，可以利用webdriver api来操作网页。\n安装：\n1、Python下安装Selenium。\npip install selenium\n2、下载对应的浏览器的webdriver。\n使用：\n以下代码检测所有输入框中的文本，如果开头和结尾有空格就进行输出。\n```\nfrom selenium import webdriver\ndriver = webdriver.Chrome(\"e:\\chromedriver.exe\")\ndriver.get(\"https://forum.51nb.com/forum.php\")\nprint(driver.title)\ninputs = driver.find_elements_by_tag_name(\"input\")\nfor inp in inputs:\n    if inp.is_displayed():\n        value=inp.get_attribute(\"value\")\n        if value.startswith(\" \") or value.endswith(\" \"):\n            print(value+\" has redundant spaces.\")\n            driver.execute_script(\"document.getElementById('\"+inp.get_attribute(\"id\")+\"').style.background='red';\")\n        else:\n            driver.execute_script(\"document.getElementById('\"+inp.get_attribute(\"id\")+\"').style.background='';\")\ndriver.close()\n```\n配置：\n我的目标是使用绿色版的Chrome，要进行一些路径的配置。\n官方说明见此：https://sites.google.com/a/chromium.org/chromedriver/capabilities#TOC-Using-a-Chrome-executable-in-a-non-standard-location\nPython如何使用参见此：selenium+python配置chrome浏览器的选项\n添加的Python代码如下：\noptions = webdriver.ChromeOptions()\noptions.binary_location=\"F:\\Programs\\ChromePortable\\App\\Google Chrome\\chrome.exe\"\ndriver = webdriver.Chrome(\"e:\\chromedriver.exe\",chrome_options = options)", "filename": "2018-09-04-python-selenium-website-automation.md"}, {"id": 194, "text": "\ndate: 2018-09-06 19:01:50+08:00\nlayout: post\ntitle: Python+Selenium切换iframe\ncategories: 技术随笔\ntags: 网络\n\nselenium对于有iframe的网页，需要切换iframe再进行进一步操作。\n方法：\n输入help(driver.switch_to)查看帮助文档可以得知，可以根据iframe的index、name或者selenium的webelement切换到iframe。\ndriver.switch_to.frame(1)\ndriver.switch_to.frame('frame_name') \ndriver.switch_to.frame(driver.find_elements_by_tag_name(\"iframe\")[0])\n如果要切换回来，使用以下代码：\ndriver.switch_to.default_content()\n参考网页：Selenium webdriver定位iframe里面元素两种方法", "filename": "2018-09-06-python-selenium-switch-to.md"}, {"id": 195, "text": "\ndate: 2018-09-12 21:13:50+08:00\nlayout: post\ntitle: 翻译与编辑\ncategories: 随笔\ntags: CAT 出版\n\n翻译与编辑，在中文中，两个词都可以既做动词，又做名词。\n翻译做动词意为把一种语言文字的意义用另一种语言文字表达出来，做名词意为做翻译工作的人。编辑做动词意为对资料或现成的作品进行整理、加工，做名词意为做编辑工作的人。以上内容来自现代汉语词典。\n图书的出版需要翻译与编辑共同合作。\n首先是图书的选题，可以是翻译主动提出，比如许钧教授在北大的演讲中讲到译者要善于发现，并以巴金十六七岁时的主动翻译为例，强调一个译者必须主动挖掘翻译任务，发现有价值的翻译对象。^xj但更多时候还是要由编辑提出，并引进版权。然后，出版社作为甲方，寻找个人译者签订协议，完成翻译。译者一般享有署名权，而出版社享有著作权，可以对译文进行自由的修改。\n选题上，更多还是编辑主动。而稿件的翻译则是译者主导。编辑之后在译稿上进行润色和修改。但是，如果翻译质量太差，达不到预期效果，编辑完全可以选择推翻重来，找另一个译者进行翻译。当然也会有不负责任的编辑，拿到译稿后只对着中文进行通读，忽视了很多翻译错误的地方。所以，作为译者一定要有责任感，高质量地完成翻译工作。而编辑也应该遵循慢工出细活的原则，静下心来好好出书。翻译与编辑需要互相成就彼此。\n也有编辑兼做翻译的，这是好的。作为译者，会对原文和译稿有着深刻的认识，后期的编辑也更加容易。著名儿童文学翻译家任溶溶便身兼编辑、翻译和作家等身份。\n中文中还有一个词叫做编译，就是编辑后进行翻译的意思。往往是需要在掌握原文意思的前提下精炼地将意思用另一语言表达出来。\n翻译与编辑的工作还有一个共同点就是工作比较独立，需要专注，耐得住寂寞。", "filename": "2018-09-12-translator-and-editor.md"}, {"id": 196, "text": "\ndate: 2018-09-15 10:05:50+08:00\nlayout: post\ntitle: 出版公司内部Mac服务器的用途构想\ncategories: 技术随笔\ntags: 出版\n\n之前公司的文字编辑要想查看使用stuffit压缩的素材文件，都需要联系美术编辑。让美术编辑在mac电脑上替她们解压。同样的情况还有indesign文件，因为文字编辑的windows上没有安装adobe的系列软件，需要美术编辑打开并导出pdf。\n另外对于翻译而言，会有实时查看翻译的indesign文件效果的需要。\n这时，如果内网架设一台mac服务器就可以比较方便地实现了。\n当然，还有pdf的各种合并、压缩、转换图片等操作，也可以由服务器来提供。", "filename": "2018-09-15-internal-mac-server-for-publishing-company.md"}, {"id": 197, "text": "\ndate: 2018-09-17 14:17:50+08:00\nlayout: post\ntitle: IDML格式分析\ncategories: 技术随笔\ntags: 出版\n\nIDML是Adobe开发的桌面出版软件InDesign使用的文件格式，基于XML，由INX发展而来。INDD是现在版本InDesign的默认格式，导出IDML可以供旧版InDesign使用。\n因为IDML基于XML，可以较为方便的为其它软件读取，并自动进行文件生成和处理。开源的DTP工具Scribus在1.5版中添加了对IDML的支持。而主流的CAT软件也都支持翻译IDML文件。\n关于IDML的具体信息，可以参见Adobe Indesign CS6 SDK的相关文件：\n\nIDML Cookbook: http://wwwimages.adobe.com/content/dam/acom/en/devnet/indesign/sdk/cs6/idml/idml-cookbook.pdf\nIDML Specification: http://wwwimages.adobe.com/content/dam/acom/en/devnet/indesign/sdk/cs6/idml/idml-specification.pdf\n完整的SDK：https://www.adobe.com/devnet/indesign/sdk/eula_cs6.html\n\n相关概念\n一些InDesign中使用的术语：\nSpread：一个对页，可以由1到n页组成。一般是两页。创建文件时，需要勾选facing pages来启用两页一个对页的模式。\nStory：文字框中的文本。\n示例\n我们这里新建一个5页的Document，使用对页，然后在第二、三页上画5个文字框，然后导出为IDML。\n\nIDML文件是一个zip压缩的文件夹，里面包含了功能不同的xml文件。解压IDML，可看到文件的结构如下：\n.\n├── META-INF\n│   ├── container.xml\n│   └── metadata.xml\n├── MasterSpreads\n│   └── MasterSpread_udd.xml\n├── Resources\n│   ├── Fonts.xml\n│   ├── Graphic.xml\n│   ├── Preferences.xml\n│   └── Styles.xml\n├── Spreads\n│   ├── Spread_uc8.xml\n│   ├── Spread_uce.xml\n│   └── Spread_ucf.xml\n├── Stories\n│   ├── Story_u106.xml\n│   ├── Story_u11d.xml\n│   ├── Story_u134.xml\n│   ├── Story_u151.xml\n│   └── Story_ued.xml\n├── XML\n│   ├── BackingStory.xml\n│   └── Tags.xml\n├── designmap.xml\n└── mimetype\n我们需要关注的是designmap.xml、Stories和Spreads。\ndesignmap.xml包含了一个Document标签，里面又用idPkg标签包含了spreads、stories和resources里的各种设置文件。\n导出的idml里的内容很啰嗦，其实一个简单designmap.xml只需以下内容（例子来自cookbook）：\n```\n\n\n\n\n\n\n```\n然后是stories文件，内容也很简单。其中Self属性可以便于不同文本框引用同样的内容。\n```\n\n\n\nHello World!\n\n\n```\n如果Content是页码，对应的内容是<?ACE 18?>。\n最后是Spread文件：\n```\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n```\n其中PageCount代表这个对页里有多少页，TextFrame里的ParentStory对应的使用的Story的ID。注意，这里TextFrame出现的顺序是按生成TextFrame的顺序来的，不是页面中从左上到右下这样的位置顺序。\nIDML里的定位（geometry）比较复杂，有ItemTransform和PathPoint这些概念。首先，idml里是以中心为原点的，如下图所示：\n\n坐标是ItemTransform属性中后面的两个数值，分别是x坐标和y坐标。而前面的1 0 0 1表示方向。而PathGeometry的内容则定义了形状的大小。\n以上只是大致的介绍，在上面列出的资料中有更详细的说明。", "filename": "2018-09-17-dissection-of-idml.md"}, {"id": 198, "text": "\ndate: 2018-09-17 16:23:50+08:00\nlayout: post\ntitle: 使用Applescript自动导出Indesign文件为PDF\ncategories: 技术随笔\ntags: 出版\n\n因为专业人士大多是在mac上使用InDesign的，我主要研究了如何在mac上批量处理indesign文件。以下是appplescript代码，实现打开idml并导出为pdf：\napplescript\ntell application \"Adobe InDesign CC 2018\"\n    set theDesk to path to desktop as string\n    set filePath to theDesk & \"test.idml\"\n    set outPath to theDesk & \"out.pdf\"\n    set myDocument to open filePath\n    tell active document\n        export format PDF type to outPath without showing options\n    end tell\n    close active document saving no\nend tell\n在终端运行代码文件：\n$ osascript exportIndesign.scpt\n更多复杂操作见Adobe的文档：Adobe InDesign CS6 Scripting Guide: AppleScript  https://www.adobe.com/content/dam/acom/en/devnet/indesign/sdk/cs6/scripting/InDesign_ScriptingGuide_AS.pdf", "filename": "2018-09-17-use-applescript-to-export-indesign-files-to-pdf.md"}, {"id": 199, "text": "\ndate: 2018-09-19 16:30:50+08:00\nlayout: post\ntitle: 导出IDML格式的InDesign文件为文字\ncategories: 技术随笔\ntags: 出版 CAT\n\n使用InDesign导出文件为HTML可以取得文字。不过，为了能直接修改IDML文件，我研究了如何用B4J编写程序进行转换。\n步骤如下：\n\n选择IDML文件路径，复制IDML文件到工作目录，然后进行解压。\n利用xml2map将xml文件转换为map。xml2map是Erel写的基于XmlSax的解析库。\n首先解析designmap.xml，获得spreads列表。\n获取spreads列表后，进一步获取每个TextFrame元素（注意有的TextFrame内嵌在别的元素里），并根据ItemTransform的坐标信息进行排序。X坐标小于0的是左边页，大于0的是右边页，然后再比较Y坐标，Y坐标越小，它排的顺序越靠前。这里因为涉及对二维坐标排序，比较麻烦一点，我使用了冒泡排序，然后对原来比较数字大小的部分写了一个函数。\n对TextFrame进行排序后，再读取对应的story文件。有的TextFrame彼此是链接在一起的，他们的ParentStory属性是一样的，这时需要删除后面的那个story。\nstory读取时，处理content里的内容，还要处理换行等问题。最后生成的文本也要再进一步去除多余的空行和空格。\n为了方便，我还加上了页码信息。\n\n最后生成类似这样的结果：\n```\nPage 1\nThe Real Science of\nSupers\nA Discovery Book\nPage 2\nForeword\nTo me, The Incredibles has always been about nostalgia.\n```", "filename": "2018-09-19-idml-to-text.md"}, {"id": 200, "text": "\ndate: 2018-09-21 20:34:50+08:00\nlayout: post\ntitle: 团队建设\ncategories: 随笔\ntags: \n\n当学生的时候，参与和组织各种班级活动。小学到高中4、50个人、大学20几个人，同学们可以得到展示自己和了解别人的机会。组织的好对于凝聚集体还是很有帮助的。\n但你要说彼此之间能不能走心，则难说。人待在一起久了会有感情，会对彼此熟悉，但也有可能产生矛盾。性格相投的人很容易走在一起，而有的人彼此看上一眼就知道不是一类人。\n有的科技公司组织新入职员工狼人杀，其实是挺没劲的事情。同事没有必要通过这种娱乐活动来增进了解，更多地还是要从公司的团队项目中入手。偶尔组织旅游、运动会什么也都是可以的。\n同事通过合作，完成一项彼此认可的任务，是一件既有成就感，又能满足和他人合作需要的事情。当翻译和编辑的缺点就是工作时常常会有孤军奋战的感觉，这时边上有一个性格开朗的同事会让工作开心很多。有可能能感染一群人。", "filename": "2018-09-21-team-building.md"}, {"id": 201, "text": "\ndate: 2018-09-24 16:28:50+08:00\nlayout: post\ntitle: B4X笔记\ncategories: 笔记\ntags: B4X\n\n主要记录开发中遇到的问题及解决方法。\n控件类\n\n删除SplitPane的Layout，链接：SplitPane Layout Removing?\n用css修改元素的属性，可以用代码，也可以在Designer里修改Extracss。\n\ntxtaReport.Style = \"-fx-font-family: Consoma;\"\n\n使用javaobject给textarea添加keypressed和selectionchanged事件。\n根据文本自动调整textarea的大小。链接：textarea automatic resize in listview\n\n语言类\n\nCallSubDelayed。在Form_Resize这样的事件结束后再调用别的函数。\n异步加载。利用Resumable Subs实现异步加载\n书写路径时，为了跨平台，需要注意大小写。\n\n第三方类库\n\nb4j自带的sqlite jrdc库太旧，在mac下不支持wal模式。我发的贴子：sqlite wal mode on Mac OS X 。\n增强自带的文件选择器，支持选择多种特定格式的文件：File Chooser Utils\n\n学习资源\n\nB4J HowTo's，收集了很多问题的解决办法\n", "filename": "2018-09-24-b4x-notes.md"}, {"id": 202, "text": "\ndate: 2018-10-07 21:38:50+08:00\nlayout: post\ntitle: 在家里运行服务器要考虑的功耗问题\ncategories: 技术随笔\ntags: 网络\n\n家里的网络是浙江电信100M光纤入楼，100M下载，4M上传，用来运行常见的网络服务还是没什么问题的。\n我家里的设备是一块树莓派、一台三代i3台式机，一部二代i3笔记本，无线路由器是小米3A。\n树莓派的功耗只有五瓦，很低，可以24小时运行。而台式机平时有五十多瓦，笔记本也要有二三十瓦。50瓦其实一年电费也就200多。每年365x24个小时，1度电（千瓦时）50瓦的设备可以运行20小时，那一年下来消耗438度电。1度电算它0.5元，一年大约220元，平均一天6毛钱。不过和树莓派差了十倍，看一年的总价还是感觉比较心疼。\n树莓派其实已经可以完成大部分家用服务器任务，我平时也只会测试一些应用。但是用来跑stanford corenlp时性能就不够了，而转换indesign为pdf需要windows或者osx系统，对性能要求也不低。这时像mac mini这样的设备是很合适的，性能足够，而且haswell架构的mac mini 2014闲置时只有6w功耗。我还看了很多su9400的本子以及atom的mini主机，但性能都比较孱弱。\n我手头的台式机功耗高了点，而笔记本散热是个问题。台式机用的技嘉h61还不支持睡眠唤醒（wol, wake on lan）。\n开启睡眠唤醒的话，平时计算机没有请求就进入睡眠模式，但给网卡单独通电，之后可以通过其它设备对其发送幻数据包（magic packet）来进行唤醒（睡眠时设备是ping不通的），可以省电。需要在bios开启这一功能，然后windows的话在设备管理器的有线网卡的设置里允许该设备唤醒计算机，mac在节能的设置里开启允许网络唤醒。如果想从外网进行远程唤醒，还要设置动态域名，并开放一个端口，然后向任意端口发送一个udp包就行，代码可以参考以下网站：低碳mini: Apple Remote & Wake On LAN。不过现在家里设备都是通过无线连接的，但支持无线局域网唤醒的设备并不多。\n另外对于硬件不支持局域网睡眠唤醒的台式机，我还想了个办法，就是用树莓派控制舵机按电源键或者连接着的键盘。\n10月8日更新:\n发现技嘉h61虽然bios里没有wol的设置，其实主板是支持的。这样进windows10后睡眠可以进行唤醒了。不过黑苹果系统就比较麻烦了，睡眠问题我一直没有去解决。", "filename": "2018-10-07-server-at-home.md"}, {"id": 203, "text": "\ndate: 2018-10-12 10:31:50+08:00\nlayout: post\ntitle: 树莓派用作无线AP以唤醒连接的主机\ncategories: 网络\ntags: \n\n上两篇文章讲到如何通过有线局域网远程唤醒主机，但是目前大多数设备并不支持通过无线网络进行唤醒。\n于是我想到了利用树莓派作为无线AP，用网线连接树莓派和主机，把wifi网络桥接给主机。树莓派功耗低，平时可以一直开着，要用主机时再进行唤醒。\n首先配置树莓派为一个无线AP，以下操作默认使用raspbian系统：\n\n\n安装bridge-utils\n$ sudo apt install bridge-utils\n\n\n创建网桥\n$ sudo brctl addbr br-lan\n$ sudo brctl addif br-lan eth0\n$ sudo ifconfig br-lan 192.168.1.1 up\n$ sudo ifconfig eth0 0.0.0.0 up\n\n\n配置IP转发，用文本编辑器打开/etc/sysctl.conf修改以下配置\nnet.ipv4.ip_forward = 1\n\n\n配置iptables，添加NAT\n$ sudo iptables -t nat -A POSTROUTING -o wlan0 -j MASQUERADE\n\n\n安装并配置dnsmasq作为dns和dhcp服务器\n$ sudo apt install dnsmasq\n修改/etc/dnsmasq.conf，添加以下内容，设置动态分配ip的范围，并给主机指定固定的ip地址。\ndhcp-range=192.168.1.50,192.168.1.150,255.255.255.0,12h\ndhcp-host=（填主机有线网卡的MAC地址，形如XX:XX:XX:XX:XX:XX）,192.168.1.55\n\n\n设置开机启动\n修改/etc/rc.local，添加第2、4两步的命令。rc.local默认是root权限，不用sudo。\n\n\n然后还需要配置主机支持网络唤醒，以下介绍ubuntu系统的设置。\n\n\n安装ethtool\nsudo apt-get install ethtool\n\n\n开启有线网卡的wol\nsudo ethtool -s eth0 wol g\n\n\n修改/etc/init.d/halt的以下内容为no，这样休眠后保持网络接口不被关闭。\nNETDOWN=no\n\n\n主机使用pm-hibernate进行休眠或者pm-suspend挂起之后，在树莓派上使用wakeonlan命令就可以进行唤醒了，注意ip地址并不是主机的ip地址，而是所处网段的广播地址。因为树莓派和主机所处的网段可能不一样。\nwakeonlan -i 192.168.1.255 mac地址\n另外需要注意的是，主机同时连上了无线网和有线网，如果家里路由器进行端口转发的话，主机的服务因为网关的问题会无法外网访问。这时需要用以下命令删掉有线网关：\n$ sudo route del default gw 192.168.1.1\n参考链接：\n\n【树莓派】在Raspbian下将wifi中继为有线网络：https://blog.csdn.net/wr132/article/details/78986190\n实战Ubuntu远程开机 (Wake on Lan)：https://www.linuxidc.com/Linux/2012-07/64696.htm\n解决Linux下同时使用有线和无线网络时，网络连接的优先级问题：<https://blog.csdn.net/qq547276542/article/details/78713893\n\n", "filename": "2018-10-12-raspberry-pi-as-wireless-ap-to-wake-on-lan.md"}, {"id": 204, "text": "\ndate: 2018-10-12 09:09:50+08:00\nlayout: post\ntitle: 树莓派控制舵机\ncategories: 技术随笔\ntags: \n\n上篇提到用树莓派控制舵机来远程按按钮开机，我也买回了sg90舵机尝试。\n需要买的配件除了sg90，还有公对母杜邦线。\nsg90有三条线，黄色是控制线，棕色是地线，红色是电源线。可以参见树莓派的40Pin引脚对照表进行连接，注意编号是从远离USB口的那端开始的。舵机需要PWM信号来驱动，控制线我们可以随意接一个GPIO引脚，然后用树莓派进行PWM软件模拟。不过树莓派3的GPIO.1口是支持硬件PWM的，优先使用这个。\n通过设置不同的占空比，可以控制舵机转动的角度。", "filename": "2018-10-12-raspberry-pi-control-a-servo.md"}, {"id": 205, "text": "\ndate: 2018-10-12 14:37:50+08:00\nlayout: post\ntitle: 管控主机的休眠状态\ncategories: 技术随笔\ntags: \n\n继续前三篇的内容，可以控制主机的开启与休眠状态后，我们要让它在需要提供服务的时候开启，不需要的时候休眠。\n我们可以在树莓派上编写一个服务器程序，程序提供两个接口，一个是进行网络唤醒，一个是发送休眠命令。\n程序运行一个定时器，每隔几秒检测上次进行网络唤醒的时间和当前时间的差，比如大于5分钟，那就进行休眠。\n前台程序在使用时，为了避免主机进入睡眠状态，则需要在5分钟内再次发送网络唤醒请求，改变上次记录的时间，以避免主机睡眠。\n树莓派给主机发送休眠命令，可以使用ssh，不过因为要执行休眠命令，需要root用户。另外，为了避免输密码，我们需要使用密钥登录。\n在树莓派上生成公钥和密钥，需要在用户的.ssh目录下运行，注意这里我们为了登录时不输密码，也不给密钥设置密码：\nssh-keygen -t rsa -b 4096\n然后将公钥复制到主机上，这里用scp命令，如果root用户没有.ssh文件夹，还要自行建立：\nscp id_rsa.pub root@hostname:/root/.ssh/pub\n接下来，在主机上进行以下操作，将公钥内容添加到authorized_keys文件中：\ncd /root/.ssh\ntouch authorized_keys\nchmod 600 authorized_keys\ncat pub >>authorized_keys\n好了，这样就可以在树莓派上控制主机睡眠了：\n$ ssh root@hostname pm-suspend", "filename": "2018-10-12-remotely-suspend-or-keep-alive-a-server.md"}, {"id": 206, "text": "\ndate: 2018-10-15 16:05:50+08:00\nlayout: post\ntitle: 在Office里运行的CAT软件\ncategories: 技术随笔\ntags: CAT\n\nTrados和Wordfast等CAT软件早期都是在Office界面里工作的，但后来都发展成了集成式的翻译环境。\n现在还有用这种模式工作的CAT软件，如Felix、Anaphraseus。这些软件的用户喜欢能够在原来的软件界面里进行翻译，而不喜欢Trados这样用表格显示分割的文本的模式。毕竟，这样的方法更加直观，你可以直接看到最终翻译的结果。\nFelix是c++写的一款CAT软件，从前是商业软件，后来作者因为身体原因，选择了开源。\n下面讲一下Felix翻译Word文件的方法。\n首先打开Felix，然后打开要翻译的Word文件。\n在工具栏里点加载项，可以看到felix的操作菜单和快捷按钮。\n\n平时翻译的话，点Look up Next，会寻找当前光标到下一个句子结束位置的内容并选中，然后在felix的翻译记忆和术语窗口中显示匹配的内容。输入翻译，覆盖之前选中的原文，然后点Set And Next就会自动保存翻译记忆，并跳转到下一句。如果使用匹配的翻译记忆覆盖，则选择Get And Next。\n在Word中选中原文，然后可以添加术语。匹配的术语可以用快捷键ALT+数字来调用。下图是使用时的截图。\n\n总的来说，Felix的设计主要是为了译员能够使用翻译记忆并管理术语。虽然下一句，保存翻译记忆的操作挺麻烦，但熟悉快捷操作后效率还是不错的。\n下面说说这种模式的缺点吧：\n\n依赖于Office这样的软件\n依赖快捷键提高效率，要记的快捷键还比较多\n自动化程度不高\n没有自己的编辑界面，扩展性不佳\n不能跨平台\n", "filename": "2018-10-15-CAT-Tools-working-with-microsoft-office.md"}, {"id": 207, "text": "\ndate: 2018-10-15 09:43:50+08:00\nlayout: post\ntitle: 自己开发了一款CAT软件\ncategories: 技术随笔\ntags: CAT\n\n商业CAT软件太贵，作为一个有版权意识的人，我都用的免费版CAT软件。雪人CAT只支持TXT格式，但基本够用。OmegaT我也有了相当的研究，但用起来总归没有雪人CAT顺手。\n在给出版社翻译indesign制作的童书时，我是直接从成品PDF导出文本，调整文本后再用markdown的标记添加标题等信息，最后用pandoc转换为word供排版人员排版。这时我发现雪人CAT生成的TXT文件会删去多余的空行，而markdown是以空行区别段落的。说明生成译文这一步雪人还是有略去原文的一些格式信息。但是因为我无法修改雪人CAT，只好直接去处理生成的译文。另外雪人CAT的搜索替换对正则的支持不加，不能在替换内容中使用正则。\n后来我又尝试直接翻译idml文件，因为很多出版物并不是一段一段文字这样排下来的，比如一张介绍角色的图片，边上会有各个角色的题注，这样不方便排版人员对应译文和需要充填的内容。而且如果CAT软件可以自动替换译文，那也可以省掉不少排版的工夫。\nCAT软件对于indesign文件的支持，我在前文中讲过，商业CAT软件对idml的支持尚佳，memoq表现得很不错。而okapi+omegat在翻译时碰到的标签太多，而标签一旦不对，就会影响目标文件的正确生成。另一款CAT软件CafeTran则完全没有对story文件进行排序，而且它的界面太难看了。\n我感到有必要写一款能够自己控制的CAT软件。Omegat用java开发，修改稍有困难，而且在别人的基础上改很难有大的创新。于是我选择B4J重新开发一款。B4J将Basic语言转换为Java，生成Java程序。我们可以方便地利用javafx库开发跨平台的桌面应用。\n经过一个月的开发，软件目前有以下功能：\n\n翻译记忆\n术语管理\n语言检查\n交互式机器翻译\n支持常见机器翻译服务的API调用\n支持常见源文件格式：txt, idml\n支持使用Git进行版本控制\n\n因为使用的是Basic语言，所以软件名字暂定BasicCAT。我打算开放源代码，相信通过易于学习的Basic语言，即使是普通的译员也可以定制出适合自己工作流程的CAT软件。现在代码公开在此处：https://github.com/xulihang/BasicCAT，不过我还没确定用什么开源许可证。\n对于软件的实现细节，我也会写相应的开发日记，供大家参考和批评。", "filename": "2018-10-15-I-wrote-a-cat-program.md"}, {"id": 208, "text": "\ndate: 2018-10-15 14:27:50+08:00\nlayout: post\ntitle: 在移动硬盘上安装完整操作系统\ncategories: 技术随笔\ntags: 启动\n\n我08年就喜欢安装各种操作系统，制作启动U盘、光盘镜像。到现在这个癖好还是没变。但是折腾这些东西真的需要耗费很多时间。\n之前买的ssd闲置了下来，连上硬盘盒使用。看到有人在淘宝上说买ssd回去做windows to go，不由研究了下是什么。原来是可以利用windows to go把windows安装到高速移动存储设备上，在不同的机器上使用。这一功能自windows8.1开始有的。需要在企业版的系统上进行制作。不过有人开发了WTGA这一软件，可以在非win10企业版上制作wtg。\n得益于usb3.0和ssd的速度，安装后的系统启动很快，运行也很流畅。\n将系统装在移动硬盘的好处是可以把占空间的visual studio等软件装在里面，而不用占用本机ssd上宝贵的空间。\n另外，最新版的Linux和macOS都是天生支持从USB设备直接启动的。我本地的黑苹果因为分区格式是hfs，一直没更新使用apfs分区格式的新系统。这次把最新的macOS mojave也装在了移动硬盘里。\n当然，平时维护还是得用PE系统，而且PE系统运行速度快，常见的软件也都能运行。", "filename": "2018-10-15-install-operating-systems-on-external-ssd.md"}, {"id": 209, "text": "\ndate: 2018-10-18 21:52:50+08:00\nlayout: post\ntitle: 基于Slax构建译者专用Linux\ncategories: 技术随笔\ntags: CAT 启动\n\n针对译者的linux已经有tuxtrans了。它基于ubuntu打包了很多译者需要的软件。适合追求使用自由软件的用户使用。\n现在我要基于Slax打造一个新的译者专用Linux。为什么的？主要是因为Slax的便捷性：\n\n可以从U盘等移动介质Live启动，启动后对系统进行的修改可以保存。\n模块化，可以方便地把软件打包，做进启动盘里。\n轻量级，启动快。\n\n在Slax下运行如下命令：\n# savechanges out.sb\n即可把启动后进行的修改打包成squashfs格式的sb文件，然后放入光盘的modules目录即可使用。\n去年出的Slax 9是基于Debian的，有包管理系统，更适合小白进行操作。之前的版本基于slackware，安装软件要解决各种依赖关系，不过手动安装对于包的管控倒是比较清楚。\n下面讲一下制作过程：\n\n\n添加中文支持。\n安装文泉驿中文字体：\n# apt install fonts-wqy-microhei fonts-wqy-zenhei\n安装输入法：\n# apt install ibus ibus-pinyin ibus-qt4\n这里因为slax缺少一些组件，我们需要补充上，另外默认桌面不能用中文输入法，改使用xfce桌面管理器，用lightdm登录管理器。\n# apt install dbus-x11 task-xfce-desktop\n安装im-config，可以强制设定输入法。\n# apt install im-config zenity\n\n\n安装常用CAT软件\n# apt install translate-utils\n然后OmegaT和Okapi需要手动安装，OmegaT自带安装脚本，运行即可。Rainbow可以参考OmegaT的脚本安装。主要是把它复制到/opt里，然后软连接执行文件到/usr/bin，并在/usr/share/applications里建立对应的desktop文件，把项目添加到系统的菜单里，把png图标放到/usr/share/icons/hicolor/32x32/apps里。\n还有heartsome translation studio是中国公司开发，后来开源的CAT软件，也是java写的，和rainbow的安装方法类似。\n\n\n安装其它辅助工具\n# apt install gpicview okular libreoffice calibre tesseract default-jre openjfx xfce4-screenshooter\n\n\n另外还可以安装visual studio code编辑器、scribus桌面出版软件等等。\n这样，slax for translators就完成了。\n不过这样的slax适合熟悉linux操作的用户使用，对于普通用户，易用性肯定是不佳的，就比如普通用户默认不支持fat32分区的写入。\n还有就是linux下还是挺缺少软件的，有时候可能还得自己编写程序。比如我就给tesseract写了一个前端，可以把利用系统快捷键截取的图片进行OCR，并自动去掉多余的空行和回车。\n\n这套系统的实用性还是有的，制作的过程也是充满乐趣。\n这个网站整理了linux上可以使用的翻译软件：https://translateonlinux.org/。可以作为参考。\n我这里再给常用软件做一个列表：\nCAT工具：\n\nOmegaT （全功能CAT）\nOkapi （三大组件：Rainbow负责文件格式转换、术语抽取等，checkmate负责质量检查，Ratel负责分割规则）\nHeartsome Translation Studio （还自带了TMX、TBX编辑器等工具）\nTranslation Toolkit （Python写的，支持PO、XLIFF等文件格式转换，亦有字数统计、术语抽取等功能）\nLanguage Tool。语言质量检测工具，支持拼写、语法等问题的检查。\n\n文字转录\n\ntesseract Google开源的光学字符识别引擎，可以将图片转成文字\ngImageReader，tesseract的一个图形化前端。\naegisub，做字幕的软件，可以辅助音频的文字转录\n\n项目管理\n这里想到Git，还可以顺便做版本控制。\n办公软件：\n\nLibreOffice\nWPS for linux\n\n桌面出版：\n\nScribus（最新的1.5版支持打开InDesign的IDML文件）\ncalibre，可以编辑和查看各种电子书格式\nokular，支持查看chm、pdf、epub等格式文件\n\n中文环境：\n输入法：Fcitx、iBus。可以搭配Rime和搜狗拼音等后端。\n中文字体：开源的思源黑体、文泉驿，以及免费的字体，比如方正书宋。\n技术写作：\n技术文档也常是要翻译的内容，比如dita、latex、docbook、restructuredText等格式也需要进行处理。根据具体需要可以自行安装，Linux的一个好处就是这些软件安装都比较方便。\n\ndita open toolkit\ndocbook\ntexlive\nsphinx\njekyll\n……\n\n另外还需要一个好的编辑器，可以选用sublime text和visual studio code。当然emacs和vim也行。", "filename": "2018-10-18-slax-live-linux-for-translation.md"}, {"id": 210, "text": "\ndate: 2018-10-19 15:10:50+08:00\nlayout: post\ntitle: 基础不牢，地动山摇\ncategories: 随笔\ntags: \n\n最近基于Slax构建译者专用Linux，深感没有对Linux组件的深入了解，会碰上各种问题。我也不看文档，网上搜索遇到的问题。自己瞎试耗费的时间和精力真是不少。\n08年那会儿我妈买了个手机支持运行j2me程序，于是我网上看视频去学j2me开发，照猫画虎倒是写了款乘法软件安装了上去。但是我对于java、面向对象这些概念一无所知，编程还是用autoit入的门，在学习的过程中急于做出成品，有点浪费时间。\n现在人工智能很火，往往需要统计学、数学等知识支撑你去理解原理。很多人往往忽视这些，直接想怎么应用。这就像一座摩天大楼没有打好基础，是个低质量的产物。\n我们还是应该沉下心来学好基础知识，然后在实践中应用并进行拓展。学好内功，然后即使再平常的武功招式都能发挥巨大的威力。", "filename": "2018-10-19-a-skyscraper-cannot-be-built-without-a-good-foundation.md"}, {"id": 211, "text": "\ndate: 2018-10-20 10:11:50+08:00\nlayout: post\ntitle: BasicCAT开发笔记（一）：用户界面\ncategories: 技术随笔\ntags: CAT\n\n编写CAT软件，首先要考虑一个界面的设计，然后进行功能上的实现。\n以下是目前设计的一个界面。\n\n左边是项目区，中间是编辑区，右边是术语区。下方是提供翻译记忆、片段搜索等功能的区域。最下面有状态栏，最上面有菜单栏。\n项目区\n项目区是一个TreeTableView，可以在此给项目添加或删除文件，查看翻译记忆、术语库，查看项目统计信息，查看预览等。\n编辑区\n编辑区是一个customlistview，每个列表项是一对textarea，左边原文，右边译文。\n因为编辑区要加载成千上万的片段，为了加载不卡顿，需要使用一个延迟加载的技术。即只填充可见区域的列表项，如果区域不可见，就把上面的控件删除，以节约内存，加快加载速度。不可见的列表项需要设置一个高度，使得滚动条的长度大致符合加载全部片段时的长度。\n平时翻译的操作都会修改segment这一列表全局变量，编辑区只是把可见区域的片段的内容从segment中读取出来并进行修改。\n另外，输入框要能根据文本的长度自动调整自己的高度。所以每次用户输入内容，或者调整窗口，都需要计算适合的文本高度。\n编辑区承担了主要的翻译交互。用户可以选中原文的单词查看释义，并添加术语。在输入时，还会根据输入的内容提供翻译建议。翻译完后，如果有错误还会弹出提示。这些主要是利用contextmenu实现的。contextmenu继承自javafx的popup类，，会出现一个下拉列表一样的东西，符合此类操作的需要。\n术语区\n术语区主要是显示术语的，比较简单，由一个listview来显示匹配的术语，然后下方可以添加术语。编辑区选中的词会自动填入输入框。\n翻译记忆等功能区\n该区域左边是一个webview，用于显示匹配的翻译记忆和原文的不同，同时也便于查看结果。\n右边是一个TabPane，平时以TableView表格的形式展示翻译记忆、片段搜索的结果。也可以点击右边的按钮切换，用WebView或TextView显示文字，这样文字字体更大，片段搜索的内容还可以高亮，便于查看。\n状态栏\n状态栏主要显示进行了什么操作，当前片段的序号等信息。\n以上便是主界面的设计。界面很大程度上参考了雪人CAT，主要也是我已经习惯了雪人这种简单的界面风格。\n上述各功能区都是基于SplitPane进行分割的，可以自由调整宽度。我并没有采用dockable windows这样更自由的设计，也是splitpane更为简单，功能基本够用了。\n界面和功能都是紧密关联的，更具体的细节还是在分功能的笔记中讲吧。", "filename": "2018-10-20-basiccat-developing-notes-1-user-interface.md"}, {"id": 212, "text": "\ndate: 2018-10-20 11:05:50+08:00\nlayout: post\ntitle: BasicCAT开发笔记（二）：句段分割\ncategories: 技术随笔\ntags: CAT\n\n句段分割是要把成段的原文以句为单位进行分割。\n一个基本的想法就是以句号、感叹号和问号等句子结尾用的标点为依据进行分割。\n可以写出这样的一个正则操作：Regex.Split(\".|!|?\",text)。然后，你可以得到一个句子的列表了：\n[sentence1,sentence2,sentence3]\n但是采用分割的方式会删去这些句号和叹号，更合适的方式是进行替换。\n我们常常会见到这样的内容：\n---------华丽的分割线-----------\n这可以用来作为分割符。然后我们的正则操作是这样的：Regex.replace(\".|!|?\",text,\"$0\"&CRLF&\"-------------\"&CRLF)\n得到的结果类似这样：\n```\nsentence1.\n\nsentence2!\nsentence3?\n```\n然后，要使用时，就可以再根据分割符把分好的句子导入。\n接下来，我们要考虑特殊的情况了。比如英文中的缩写\"Mr.\",\"Prof.\"，还有很多句尾的省略号\"……\"，会影响分割的正确性。\n错误分割的结果类似这样：\n```\nMr.\n\nTang is a prestigious professor.\nSee you soon!\n!\n!\n```\n首先，我们可以添加一个例外列表，保存Mr.等信息。\nMr.\nMrs.\nMs.\nDr.\nProf.\n在句段分割结束后，再删去Mr.这样例外情况后面的分割符。\n结果就变成这样了：\n```\nMr. Tang is a prestigious professor.\n\nSee you soon!\n!\n!\n```\n然后针对重复的叹号导致的多次分句的问题，可以修改正则，匹配1到多个感叹号。表达式如下：Regex.replace(\"!{1,}\",text,\"$0\"&CRLF&\"-------------\"&CRLF)\n```\nMr. Tang is a prestigious professor.\n\nSee you soon!!!\n```\n另外还有一个问题就是引号。引号通常位于句号的后面，这样进行分句时结果会是这样：\n```\n\"I love you!\n\n\", he said.\n```\n解决办法是先分割.\",!\",?\"这样的内容，然后才轮到.!?，而且.!?前面不能是引号。\n最终的正则表达式规则是这样的，程序按行读取表达式对原文进行分割。\n[\\.\\?\\!]\"\\s\n\\.{1,}(?!\")\n\\?{1,}(?!\")\n\\!{1,}(?!\")\n当然，还会有很多复杂的情况，需要修改规则。\n相关源文件：\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/segmentation.bas\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/Files/segmentation_en.conf\n更新：这样的方法还是显得比较粗糙，句段分割还是应该使用srx格式文件存储规则，并用它提供的算法。使用SRX进行分割的方法见此。", "filename": "2018-10-20-basiccat-developing-notes-2-sentence-segmentation.md"}, {"id": 213, "text": "\ndate: 2018-10-22 16:02:50+08:00\nlayout: post\ntitle: XLIFF简介\ncategories: 技术随笔\ntags: CAT\n\nXLIFF (XML Localization Interchange File Format)，是一种基于XML的文件格式，旨在为不同翻译工具提供一种存储和交换可翻译数据的中间格式。我们可以把不同格式的文件都转换为XLIFF，以后翻译只要在XLIFF文件操作即可。\nXLIFF由oasis组织制定，oasis还制定了DITA等标准。1.0版在2002年提出，为广大CAT软件使用并修改出自己的版本，比如sdlxliff(trados)，mxliff(memoq)。2.0版2014年提出，并不向后兼容，目前主流软件尚没有很好的支持。\n一个基本的XLIFF文件如下：\n```xml\n\n\n\n\nHello world\nBonjour le monde\n\nHola mundo\n\n\n\n\n```\n可以看到，首先有一个根元素xliff，然后每个文件是一个file元素。语言句对存储在trans-unit元素里。alt-trans用来存储来自翻译记忆或者机器翻译的结果。trans-unit标签里还可以存储不少属性，比如该片段是不是需要翻译的片段。\nXLIFF比较复杂的另一点在于行内标签。如何用标签表示原文的格式，XLIFF提供了继承自opentag的一系列标签。比如以下是使用okapi从idml文件提取出的一个片段：\nxml\n<file original=\"Stories/Story_u1c52c.xml\" source-language=\"en-US\" target-language=\"zh-CN\" datatype=\"xml\">\n    <body>\n        <trans-unit id=\"NE9BA6C2E-tu1\" xml:space=\"preserve\">\n            <source xml:lang=\"en-US\"><g id=\"1\">Conte<g id=\"2\">n</g>ts</g></source>\n            <target xml:lang=\"zh-CN\"><g id=\"1\">Conte<g id=\"2\">n</g>ts</g></target>\n        </trans-unit>\n    </body>\n</file>\n主要使用g标签来表达原来文件中的一对标签，其中的id表示其在原文标签中的顺序。g标签是一种占位性质的抽象标签，还有一种是封装标签，包含bpt、ept等。以下是两种标签的例子。\n抽象标签：\nxml\n<trans-unit id=\"1\">\n<source>This is <g id=\"1\" ctype=\"bold\">bold</g>.</source>\n</trans-unit>\n封装标签：\nxml\n<trans-unit id=\"1\">\n<source>This is <bpt id=\"1\" ctype=\"bold\">\\b</bpt>bold<ept id=\"1\">\\b0</ept>.</source>\n</trans-unit>\n抽象标签的好处是针对不同格式，抽象出来的内容可以一样。比如html、rtf中表示加粗，html是<b>，而rtf中是\\b，抽象之后都变成了g标签。但是抽象之后，原文标签中的含义也被隐去了。\n这些标签能起到占位的作用，不同的软件处理后可能会删去一些标签的信息，但只要这些标签能让CAT软件知道对应的标签内容，比如加粗和斜体，一般就还是有效的。\nxliff还提供了用于句段分割的标签，我觉得这个应该交由CAT软件完成，存储在trans-unit里即可。\n1/2更新\n关于分割的句段，因为CAT软件直接将数据存储在xliff文件中，所以还是有必要的。seg-source标签一般配合mrk标签使用。\n另外xliff还有skeleton标签，指定skl文件的地址。比如你打开heartsome translation studio翻译idml文件，可以看到项目文件里存放的skeleton文件。其实就是删去了要翻译的文件后重新压缩的idml。在opentag格式的时候，skeleton里会存放翻译内容的ref信息，方便重新把内容填回去。不过heartsome 似乎并没有添加ref信息，可能是有别的办法替换译文，那这样在我看来生成skeleton文件没有什么意义。\n\n相关链接：\n\nXLIFF Version 1.2 http://docs.oasis-open.org/xliff/v1.2/os/xliff-core.html\nUse XLIFF to translate documents https://www.ibm.com/developerworks/library/x-localis2/index.html\nXLIFF 2.x… the translator’s panacea? https://multifarious.filkin.com/2018/08/23/xliff-2-x-the-translators-panacea/\nOASIS XML Localisation Interchange File Format TC https://www.oasis-open.org/committees/xliff/faq.php#inlineFormatting\n", "filename": "2018-10-22-a-brief-introduction-to-xliff.md"}, {"id": 214, "text": "\ndate: 2018-10-23 08:53:50+08:00\nlayout: post\ntitle: BasicCAT开发笔记（三）：项目创建\ncategories: 技术随笔\ntags: CAT\n\n项目需要建立一个项目文件夹，然后有管理项目信息的项目文件以及各个子文件夹。子文件夹包括源语言文件夹、目标语言文件夹、翻译记忆文件夹、术语文件夹以及工作文件文件夹。另外还有一个备份文件夹，每隔一分钟进行备份。\n大多数CAT软件在创建项目时都有一个向导，让你选择语言对，添加项目文件，设置翻译记忆库等等，操作繁琐。我们要做的是一个简单易用的汉英版CAT软件，可以直接选择建立英语到汉语或者汉语到英语的项目。然后，我们默认是使用记忆库、术语库的，可以直接建立。目前记忆库和术语库使用sqlite存储，利用b4j的keyvaluestore以键/值的形式保存。\n而工作文件，存储了CAT软件从源文件中抽取的可翻译数据，平时的翻译操作主要在这个文件上进行。\n工作文件的格式大多数软件都是采用的xliff，因为常见的文件格式都是以xml格式存储的，而且xliff作为一个标准应该得到广泛采用。\n不过我决定使用json格式进行存储。\n下面是一个工作文件的内容：\njson\n{\n    \"filename\": \"int_978DPWINER263.idml\",\n    \"files\": [\n        {\n            \"Story_u1de62.xml\": [\n                [\n                    \"The Real Science of Supers\",\n                    \"超人背后的真科学\",\n                    \"<p1><c0 id=\\\"0\\\">The Real Science of Supers<\\/c0><\\/p1>\",\n                    \"Story_u1de62.xml\"\n                ]\n            ]\n        },\n        {\n            \"Story_u1de4b.xml\": [\n                [\n                    \"A Discovery Book\",\n                    \"一本发现书\",\n                    \"<p1><c0 id=\\\"0\\\">A Discovery Book<\\/c0><\\/p1>\",\n                    \"Story_u1de4b.xml\"\n                ]\n            ]\n        },\n        ]\n}\n和xliff的内容其实类似，有file，trans-unit等内容，不过我在file里放的是一个列表，列表里依次是原文、译文、带格式信息的原文、所属的文件名。利用带格式信息的原文，可以判断片段合并时需不需要添加空格，可以方便地生成译文。最后带上文件名信息，主要是便于以片段为单位进行操作时方便确定所属文件。\n使用json的好处是操作简单，生成的文件可读性较强。当然，不像xml文件那样有schema，标准化程度低是缺点。\n另外还有项目文件，也使用json，主要存储项目设置信息，上次操作的信息等。\njson\n{\n    \"settings\": {\n        \"tmList\": [\n            \"out.txt\"\n        ]\n    },\n    \"lastEntry\": 407,\n    \"files\": [\n        \"超人总动员_新版原文.txt\",\n        \"超人总动员_short.txt\"\n    ],\n    \"source\": \"en\",\n    \"lastFile\": \"超人总动员_新版原文.txt\",\n    \"target\": \"zh\"\n}\n下面是一个项目的树状结构：\n│  project.json\n│\n├─bak\n│      project.json\n│      超人总动员_short.txt.json\n│      超人总动员_新版原文.txt.json\n├─source\n│      超人总动员_short.txt\n│      超人总动员_新版原文.txt\n├─target\n│      超人总动员_short.txt\n│      超人总动员_新版原文.txt\n├─Term\n│      term.db\n├─TM\n│      externalTM.db\n│      out.txt\n│      TM.db\n└─work\n        超人总动员_short.txt.json\n        超人总动员_新版原文.txt.json", "filename": "2018-10-23-basiccat-developing-notes-3-creating-a-project.md"}, {"id": 215, "text": "\ndate: 2018-10-23 09:37:50+08:00\nlayout: post\ntitle: BasicCAT开发笔记（四）：翻译记忆\ncategories: 技术随笔\ntags: CAT\n\n翻译记忆是CAT软件的核心功能，而怎样快速地进行模糊匹配是需要解决的一大算法问题。\n一般翻译记忆相似度的计算是根据编辑距离算法计算，我这里也采用的这一办法。我测试了自己完成的编辑距离算法与调用fuzzywuzzy java库的运行效率，发现后者较高，我便采用了后者。相似度结果计算都是一样的。\n影响模糊匹配速度的除了算法，还有存储。毕竟要进行迅速的读取操作。目前我使用的sqlite作为翻译记忆的数据库格式，并且开启wal模式。我测试下来，导入1000个翻译记忆，显示结果所需的时间是在毫秒级别的。\n另外我还尝试了把模糊匹配做成后端，以REST API的形式进行调用，不过效率不高，于是放弃。我还研究了如何利用多线程进行计算，发现用b4j wait for语句的协程处理结果已经很不错了。\n但是在预翻译时，还是显出了模糊匹配效率的问题，900多个片段的计算可能要花几分钟的时间。我把每对匹配的结果都存在了map里，下次就可以直接调取相似度，不过改善有限。模糊匹配的效率是目前有待完善的一点。不过，如果片段是完全匹配的，即翻译记忆库中的键就是原文，那可以直接填充，不用计算相似度。\n再有外部翻译记忆的处理。外部翻译记忆我认为不能导入项目的翻译记忆库里，而应该作为只读性质的存在。在显示匹配时还要显示这条匹配来自于哪个翻译记忆库。\n翻译记忆导入导出的格式，一般使用TMX、TAB分割的文本等格式。而为了让导出的TMX在导入其它软件时也能保持标签信息有用，我们要把标签转换为TMX标准的标签。比如TMX的行内标记比XLIFF支持的要少，XLIFF中的<g>、<x>等标签内容在保存为TMX时需要转换为TMX中的<bpt>、<ept>和<ph>标签，这样才能在Trados等软件中发挥作用。\n对于匹配的翻译记忆，要设置一个最小相似度，一般在0.5以上。匹配的结果是一个列表，还要按照相似度进行排序。因为要对列表进行排序比较复杂，我使用了一个简单的冒泡排序算法实现。在显示匹配翻译记忆时，还要显示和当前原文有哪些区别。利用编辑距离回溯可以知道哪些字是需要进行删除、增加或替换操作的，不过不是很直观。可以参考一些diff软件的设计。\n下面是模糊匹配结果的截图：\n\n下面是片段搜索功能的截图，在翻译记忆库中搜索匹配的内容，搜索内容用绿色加以高亮显示。\n\n另外，除了原文和译文，根据TMX标准，翻译记忆还需要存储翻译记忆创建者、创建时间、备注等额外信息。\n更新：\n使用全文检索提高翻译记忆的匹配效率：BasicCAT开发笔记（十五）：全文检索 \n使用事务提高导入数据的速度\n相关文件：\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/TM.bas\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/TMX.bas\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/TMEditor.bas\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/TMManager.bas", "filename": "2018-10-23-basiccat-developing-notes-4-translation-memory.md"}, {"id": 216, "text": "\ndate: 2018-10-24 15:04:50+08:00\nlayout: post\ntitle: B4J开发心得\ncategories: 技术随笔\ntags: B4X\n\n最近使用B4J开发越来越顺手了，我也整理下心得体会。\n首先，我们能利用B4J快速开发应用，而且不管是服务器应用还是桌面应用，都有很好的支持。所以，平时要想快速写一些小工具，B4J是不二的选择。\nB4X的论坛有很多活跃的用户，有问题可以在上面发帖询问。B4J的作者Erel也是个非常勤劳的人，会及时地回复问题。而如果B4X论坛上找不到解决方案，还可以去stackoverflow上看看有关java的问题。\n比如，我遇到一个压缩zip的问题，通过stackoverflow上这一问题了解到zip4j这一库，然后使用b4j的javaobject可以非常容易地调用，使用zip4j的代码我发在此处：https://www.b4x.com/android/forum/threads/zip-multiple-files-and-folders-using-zip4j.98550/。", "filename": "2018-10-24-my-tips-about-b4j.md"}, {"id": 217, "text": "\ndate: 2018-10-25 21:05:50+08:00\nlayout: post\ntitle: 学点BAT\ncategories: 技术随笔\ntags: \n\n有人问我windows下如何快速批量转换word为html。我想到用pandoc转换word为html。但是如何批量操作呢？我熟悉Python等编程语言，写一下很容易。\n但是要在别人的电脑上运行Python却是件麻烦的事。这种情况下，使用较为通用的bat批处理文件则方便很多。我使用以下命令完成的批量转换任务：\ncmd\n@echo off\nfor /r .\\ %%i in (*.docx) do @pandoc --standalone --self-contained \"%%i\" -o \"%%~ni.html\"  | echo %%i\necho 转换结束\npause\n把文件存储为bat文件后交给被人用也很方便。\n另外还有vbs，可以直接操作windows的对象，虽然不像Python这样是个热门语言，但是需要用到时还是很有用的。使用下面的代码，可以利用word以静默的方式批量转换doc文档为html。\n```vb\nDim FSO,s\nSet FSO=CreateObject(\"Scripting.FileSystemObject\")\nSet AllF=FSO.GetFolder(fso.GetParentFolderName (WScript.ScriptFullName ))\nFor Each file In AllF.Files\nif right(file,3)=\"doc\" and left(file,1)<>\"~\" then zhuanhuan file\n\nNext\nsub zhuanhuan(filename)\nname=fso.getbasename(filename)\n\nSet objWord = CreateObject(\"Word.Application\")\n\nobjWord.Visible = False\n\nConst wdFormatText = 10  ' 10是保存的类型，详见https://docs.microsoft.com/en-us/office/vba/api/word.wdsaveformat\n\nfilePath =   AllF & \"\\\" & name & \".doc\"\n\nSet objDoc = objWord.Documents.Open(filePath)\n\nobjword.ActiveDocument.SaveAs AllF & \"\\\" & name & \".html\",wdFormatText\n\nobjword.quit\n\nset objword=nothing\n\nend sub\n```\n当然，Jeff Atwood在《高效能程序员的修炼》提到尽量不要用脚本语言，缺少正经程序语言的谨密性，一旦写的东西多了，就会难以维护。\n2008年那会出的很多PE系统，用的工具都是下图这样一个界面，获取用户输入，执行下一步操作。后来也都转而使用图形界面了。\n\n相关链接：\nBAT 批处理脚本教程: https://www.cnblogs.com/mq0036/p/3412171.html", "filename": "2018-10-25-learn-some-bat.md"}, {"id": 218, "text": "\ndate: 2018-10-26 10:45:50+08:00\nlayout: post\ntitle: TMX、TBX、SRX，LISA的三大翻译标准\ncategories: 技术随笔\ntags: CAT\n\nLISA OSCAR(Open Standards for Container/Content Allowing Re-use)主要包括TMX、TBX、SRX、GMX和xml:tm五种标准。\nLISA在2011年破产后，指定欧洲电信标准化协会继续维护系列标准，同时其它人或组织也可以遵循CC 3.0标准进行分享。\n现在可以在GALA的网站上查询标准的技术说明：https://www.gala-global.org/lisa-oscar-standards\nTMX\nTMX（Translation Memory eXchange）是可以用于在不同CAT软件之间交换翻译记忆的格式，一个TMX的文件例子如下：\n```xml\n\n\n\n\nHello world!\n\n\nBonjour tout le monde!\n\n\n\n```\nheader里列出的属性都是必须填写的。其中adminlang不太好理解，意思是header标签里说明性内容所用的语言。而o-tmf指转换为tmx前是以什么格式存储的。\ntu元素表示一个翻译单元(trans-unit)，里面可以包含多个语言的对应文本。如果文本有特殊格式，例如加粗和斜体，需要使用bpt和ept这类行内标签进行处理。每个tuv还可以设置创建或修改该条内容的人的名字、操作的时间等等。\n可以用note元素添加备注，另外也可以用prop标签自定义一些属性。\nTBX\nTBX（TermBase eXchange）是术语交换格式，现在已经成为了ISO标准。以下截取自微软提供的术语库文件。\n```xml\n\n\n\n\n\nMicrosoft Terminology Collection Export\n\n\nMicrosoft Terminology Collection\n\n\n\n\n\n\n\n\nA printed circuit board that enables a personal computer to use a peripheral device, such as a CD-ROM drive, modem, or joystick, for which it does not already have the necessary connections, ports, or circuit boards. Commonly, a single adapter card can have more than one adapter on it.\n\n\n\nadapter\nNoun\n\n\n\n\n\n\n适配卡\nNoun\n\n\n\n\n\n\n\n```\nMartif是Machine Readable Terminology Interchange Format的缩写。martifHeader里包括对文件的描述信息，sourceDesc是关于文件的任意描述信息，titleStmt里包含文件的名字的定义。\ntbx的主体还是看termEntry元素，langSet子元素包含了每种语言相关的内容。descripGrp里是对术语条目的描述信息，比如描述术语的概念、术语的领域，它可以包含在langset里，也可以包含在ntig里。ntig(nesting term information group)里可以存放包含术语的文本、备注信息。tig和ntig的区别是tig适用于简单的情况。\n通过在langSet里并列存放tig元素，可以用来表示同义词、缩写等情况。\nxml\n<langSet xml:lang=\"de\">\n  <tig>\n    <term>Abtastglied</term>\n  </tig>\n  <tig>\n    <term>Abtaster</term>\n  </tig>\n</langSet>\nxml\n<langSet xml:lang=\"de\"> \n  <tig>\n    <term>Proportionalglied plus Integrierglied</term>\n  </tig>\n  <tig>\n    <term>PI-Glied</term>\n    <termNote type=\"termType\">abbreviation</termNote>\n  </tig>\n</langSet>\n如果术语由多个单词组成，还可以在里面存放每个单词的信息，例子如下：\nxml\n<langSet xml:lang=\"fr\">\n<ntig>\n <termGrp>\n   <term>table des transitions d'états</term>\n   <termCompList type=\"termElement\">\n     <termCompGrp>\n       <termComp>table</termComp>\n       <termNote type=\"grammaticalGender\">feminine</termNote>\n     </termCompGrp>\n     <termCompGrp>\n       <termComp>des</termComp>\n       <termNote type=\"partOfSpeech\">other</termNote> \n     </termCompGrp>\n     <termCompGrp>\n       <termComp>transitions</termComp>\n       <termNote type=\"grammaticalNumber\">plural</termNote>\n       <termNote type=\"grammaticalGender\">feminine</termNote>\n     </termCompGrp>\n     <termCompGrp>\n       <termComp>de</termComp>\n       <termNote type=\"partOfSpeech\">preposition</termNote>\n     </termCompGrp>\n     <termComp>états</termComp>\n   </termCompList>\n </termGrp>\n</ntig>\n</langSet>\n因为TBX的格式较为复杂，解析起来会比较困难。\nSRX\nSRX（Segmentation Rules eXchange）是专门用于表示句段分割规则的格式。关于句段分割，我在此文有一个基本的思路：BasicCAT开发笔记（二）：句段分割。SRX的实现方法其实和我的类似。它也直接将正则表达式作为规则进行存储，而且处理的先后顺序很重要，另外它也有分例外规则和分割标准。\n当然SRX想得要详细的多。比如分割规则，它有分在分割前出现的内容（beforebreak）和分割后出现的内容（afterbreak）。比如对于以下内容，句号是一个要分割的字符，但是句号前后如果是数字，或者后面是引号，就应该是例外规则。这时区分句号前后的内容可以方便地进行正确的分割。\n\nMr. Xu is an English teacher. He is 1.7m tall.\nHe likes teaching knowledge about CAT tools. For me, He is like a \"Super.\" \n\n这样的设定和它的算法有关。下面是进行句段分割的伪代码：\nfor each inter-character position in the text \n   for each <rule> element in the list \n      if the current  <rule> matches the inter-character position then \n         if the <rule> element specifies a break then \n            break the text at this point \n         end if \n         exit for \n      end if \n   next \nnext\n代码一个字符一个字符地读取文本，读取每一字符时，对每条规则进行匹配，如果匹配，则根据break属性决定是否进行断句，并跳到下一个字符上继续操作。\n以下是一个来自SRX标准文件的SRX文件的示例，包含了英、法、日三语的规则。\n```xml\n\n\n\n\n\n\n\n\n\n\n\n^\\s*[0-9]+.\n\\s\n\n\n\\n\n\n\n[.\\?!]+\n\\s\n\n\n\n\n\n\\s[Ee][Tt][Cc].\n\\s[a-z]\n\n\n\\sMr.\n\\s\n\n\n\\sU.K.\n\\s\n\n\n\n\n\n\\s[Mm]lle.\n\\s\n\n\n\\s[Mm]lles.\n\\s\n\n\n\\s[Mm]me.\n\\s\n\n\n\\s[Mm]mes.\n\\s\n\n\n\n                <!-- Rules for breaking on Japanese punctuation\n            \\xff61: Halfwidth ideographic full stop\n            \\x3002: Ideographic full stop\n            \\xff0e: Fullwidth full stop\n            \\xff1f: Fullwidth question mark\n            \\xff01: Fullwidth exclamation mark\n            -->\n            <rule break=\"yes\">\n                <beforebreak>[\\xff61\\x3002\\xff0e\\xff1f\\xff01]+</beforebreak>\n                <afterbreak></afterbreak>\n            </rule>\n        </languagerule>\n    </languagerules>\n    <maprules>\n        <!-- List exceptions first -->\n        <languagemap languagepattern=\"[Ee][Nn].*\" languagerulename=\"English\"/>\n        <languagemap languagepattern=\"[Ff][Rr].*\" languagerulename=\"French\"/>\n        <!-- Japanese breaking rules -->\n        <languagemap languagepattern=\"[Jj][Aa].*\" languagerulename=\"Japanese\"/>\n        <!-- Common breaking rules -->\n        <languagemap languagepattern=\".*\" languagerulename=\"Default\"/>\n    </maprules>\n</body>\n\n\n```\n我们看body标签里，有languagesrules标签，里面的每个languagerule包含一种语言的分割规则。rule标签里是breakbreak和afterbreak标签，用正则表示分割的字符前后的内容。如果rule的break属性是no，说明是例外，不进行分割。\nmaprules里根据语言代码指定使用哪种语言的分割规则，比如en-US对应使用英语的分割规则。\n然后我们再看header。利用formathandle属性，可以设置断句的前面或者后面有格式标记时，要不要进行包括。segmentsubflows表示一个断句单位里包含另一个单位时要不要进行分割，比如html的img元素里的alt属性。cascade设为yes时，如果匹配到一条规则，那么其它的规则就不再生效。\n利用srx进行句段分割，这里还有一个开源项目segment可供参考：https://github.com/loomchild/segment\n语言代码\n上述标准都会用到如zh-cn这样的语言代码。\n一般语言代码有两种表示方法，一种是en、zh这样遵循ISO 639标准的语言代码，另一种是在前者的基础上添加ISO 3166标准定义的国家代码而构成的代码，如en-us，zh-cn。\nBasicCAT提供对上述三种标准的支持，可以参见我写的开发笔记了解其对这三种算法支持的实现。", "filename": "2018-10-26-TMX-TBX-SRX-Three-Lisa-oscar-standards.md"}, {"id": 219, "text": "\ndate: 2018-10-28 15:48:50+08:00\nlayout: post\ntitle: BasicCAT开发笔记（五）：搜索与替换\ncategories: 技术随笔\ntags: CAT\n\nCAT软件也应该是一个好用的文本编辑器，搜索与替换功能必不可少。试用过的软件里，觉得OmegaT的搜索功能设计很符合我的要求，实现起来也不算困难。\n\n需要搜索的结果进行高亮显示，并显示替换后的结果（这个OmegaT没有），另外还要支持正则表达式。结果以列表的形式呈现，在项目上右键还可以调出右键菜单，选择跳转到该片段。\nUI：\n建立两个TextField，findTextField和replaceTextField，用于填写搜索的内容和替换的内容。regexCheckBox和searchSourceCheckBox两个勾选框，用于是否开启正则和在原文中搜索。\n结果是一个ListView。带格式的文本需要用到java的Text类，b4j中有对应的TextFlow库。\n普通搜索\n普通搜索需要遍历当前打开文件的片段，检测片段的原文、译文是否有对应的内容。使用String类的Contains方法即可。\n然后生成对应的Textflow。这里比较麻烦的是，如果一句话里有多个匹配，需要将其都显示出来。\n我们可以把文字根据匹配的内容分成片段。比如搜索school，那么\"He is a high school student and his sister is a middle school student.\"片段是[\"He is a high \",\"school\",\" student and his sister is a middle \",\"school\",\" student.\"]。这样可以较为方便地高亮所有匹配的内容。\n正则搜索\n首先因为允许用户输入正则，要用try...catch...处理用户输入的正则表达式错误的情况。\n其它地方其实和普通搜索类似，只不过改用Regex.Matcher(pattern,source)来构建Matcher以检测是否匹配。同样需要将文字进行分段。\n替换\n因为替换前和替换后的结果都直接保存在结果显示的列表里了，所以只需直接调取文字内容进行replace就可以了。可以选择替换一条或者全部条数，全部的话操作完成后显示替换了多少条内容。\n最终的界面如下。\n\n相关文件：\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/searchAndReplaceDialog.bas", "filename": "2018-10-28-basiccat-developing-notes-5-search-and-replace.md"}, {"id": 220, "text": "\ndate: 2018-10-29 16:30:50+08:00\nlayout: post\ntitle: BasicCAT开发笔记（六）：SRX的算法实现\ncategories: 技术随笔\ntags: CAT\n\n前文介绍了Lisa的三大翻译标准，我发现分割句段还是应该使用SRX提供的方法。毕竟它是一个标准，可以直接利用前人做好的规则文件，与其它CAT软件也可以进行分割规则的交换。\nSRX提供的伪代码看起来很简单，但实现起来我感到有点难度。主要是它需要检查分割点前后的内容，这可以用正则的lookahead和lookbehind来实现，但遍历文本时后面有多少长度的文本要作为afterbreak检测的对象则不能确定。\n于是我找了一些开源项目，主要有segment、omegat以及heartsome。其中omegat使用的规则文件并不是正宗的srx格式，但基本保持了srx的设计。\n下面讲一下我参考OmegaT的源码得出的自己的SRX算法实现。\n先读取SRX文件，然后依次遍历这些规则，将符合要求的断句位置存放进一个字典，并存储其在规则列表中的序号，断句情况和例外情况分开存放。有些规则可能没有beforebreak或者afterbreak，这时处理很简单，匹配到后直接将位置信息进行存储即可。而如果两个break齐全的话，先寻找所有的beforebreak匹配的内容，匹配到一条beforebreak，就开始寻找afterbreak的匹配，然后看看这两个匹配是不是接壤。如果是则记录位置信息。\n```vb\n'break attribute: yes or no,\nSub getPositions(break As String,text As String) As Map\n    Dim breakPositions As Map\n    breakPositions.Initialize\n    Dim index As Int=-1\n    For Each rule As Map In rules\n        index=index+1\n        If rule.Get(\"break\")<>break Then\n            Continue\n        End If\n        Dim beforeBreak,afterBreak As String\n        beforeBreak=rule.Get(\"beforebreak\")\n        afterBreak=rule.Get(\"afterbreak\")\n    Dim bbm As Matcher\n    bbm=Regex.Matcher2(beforeBreak,32,text)\n\n    If beforeBreak<>\"null\" Then\n        Do While bbm.Find\n            If afterBreak=\"null\" Then\n                addPosition(bbm.GetEnd(0),breakPositions,index)\n            End If\n\n            Dim abm As Matcher\n            abm=Regex.Matcher2(afterBreak,32,text)\n            Do While abm.Find\n                If bbm.GetEnd(0)=abm.GetStart(0) Then\n                    addPosition(bbm.GetEnd(0),breakPositions,index)\n                    Exit\n                End If\n            Loop\n        Loop\n    Else if afterBreak<>\"null\" Then\n        Dim abm As Matcher\n        abm=Regex.Matcher2(afterBreak,32,text)\n        Do While abm.Find\n            addPosition(abm.GetStart(0),breakPositions,index)\n        Loop\n    End If\nNext\n\nReturn breakPositions\n\nEnd Sub\n```\n得到需要断句和不需要断句的位置的字典后，我们对两个字典进行比对，得到一个去除例外位置了的断句位置列表。如果cascade模式是False，那么比较时如果断句规则排在非断句规则之前，就不进行去除。这样就可以根据位置信息确定片段了。\nvb\nDim finalBreakPositions As List\nfinalBreakPositions.Initialize\nFor Each pos As Int In breakPositionsMap.Keys\n    If nonbreakPositionsMap.ContainsKey(pos) Then\n        If cascade=False Then\n            If breakPositionsMap.Get(pos)<nonbreakPositionsMap.Get(pos) Then\n                finalBreakPositions.Add(pos)\n            End If\n        End If\n    Else\n        finalBreakPositions.Add(pos)\n    End If\nNext\n这一方法不需要使用复杂的正则表达式，比较简单明了，但效率不高。如果遇到大段文字，需要先把文章分成段落等小的片段，这时的断句效率还是很可观的。我测试80000词的《哈利波特与魔法石》需要18秒时间。因为考虑了所有的规则，所有相当于cascade没有勾选。\n而要实现cascade勾选的模式，需要按照SRX给出的算法，在每个字符串的位置上都匹配一遍规则，而且是优先匹配例外规则，效率会更低。\n2018/12/10更新\n删去log后，分句速度快了不少，哈利波特只要4秒左右时间。\n相关文件：\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/SRX.bas\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/segmentation.bas\n2020/03/12更新\n更新了SRX的算法。", "filename": "2018-10-29-basiccat-developing-notes-6-srx-implementation.md"}, {"id": 221, "text": "\ndate: 2018-11-01 11:27:50+08:00\nlayout: post\ntitle: java操作Word\ncategories: 技术随笔\ntags: java\n\njava操作微软的Office文档主要有两个类库，一个是Apache POI，另一个是docx4j。POI对excel的支持较好，而docx4j从名字上就看得出，对Word的支持好。\ndocx4j使用JAXB将xml转换为java中的类，而apache poi使用的xml-beans。docx4j也利用了POI来支持doc、xls、ppt等旧版二进制格式。\ndocx4j提供了在线工具来解析Word格式，我们可以用它来了解docx文件的内部结构，这在使用docx来操作文档时很重要，我们要先了解有哪些元素，元素是怎么组合起来的，才能修改docx文件。\n比如以下word/document.xml文件里的内容：\nxml\n<w:document>\n    <w:body>\n        <w:tbl>\n            <w:tblPr>\n                <w:tblW w:w=\"5000\" w:type=\"pct\"/>\n                <w:tblBorders>\n                    <w:top w:val=\"single\"/>\n                    <w:left w:val=\"single\"/>\n                    <w:bottom w:val=\"single\"/>\n                    <w:right w:val=\"single\"/>\n                    <w:insideH w:val=\"single\"/>\n                    <w:insideV w:val=\"single\"/>\n                </w:tblBorders>\n            </w:tblPr>\n            <w:tr>\n                <w:tc>\n                    <w:p>\n                        <w:r>\n                            <w:t>col1, row1</w:t>\n                        </w:r>\n                    </w:p>\n                </w:tc>\n                <w:tc>\n                    <w:p>\n                        <w:r>\n                            <w:t>col2, row1</w:t>\n                        </w:r>\n                    </w:p>\n                </w:tc>\n            </w:tr>\n            <w:tr>\n                <w:tc>\n                    <w:p>\n                        <w:r>\n                            <w:t>col1, row2</w:t>\n                        </w:r>\n                    </w:p>\n                </w:tc>\n                <w:tc>\n                    <w:p>\n                        <w:r>\n                            <w:t>col2, row2</w:t>\n                        </w:r>\n                    </w:p>\n                </w:tc>\n            </w:tr>\n        </w:tbl>\n    </w:body>\n</w:document>\n不过，只是为了达成某些操作，我们可以不用太深入地了解这些。比如要实现创建一个带表格的word，可以用以下代码调用POI库来实现：\n```java\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport org.apache.poi.xwpf.usermodel.XWPFDocument;\nimport org.apache.poi.xwpf.usermodel.XWPFTable;\nimport org.apache.poi.xwpf.usermodel.XWPFTableRow;\npublic class Test {\npublic static void main(String[] args) throws IOException {\n    // TODO Auto-generated method stub\n    XWPFDocument document= new XWPFDocument(); \n       //Write the Document in file system\n    XWPFTable table = document.createTable();\n    //create first row\n    XWPFTableRow tableRowOne = table.getRow(0);\n    tableRowOne.getCell(0).setText(\"col one, row one\");\n    tableRowOne.addNewTableCell().setText(\"col two, row one\");\n\n    //create second row\n    XWPFTableRow tableRowTwo = table.createRow();\n    tableRowTwo.getCell(0).setText(\"col one, row two\");\n    tableRowTwo.getCell(1).setText(\"col two, row two\");\n\n    //create third row\n    XWPFTableRow tableRowThree = table.createRow();\n    tableRowThree.getCell(0).setText(\"col one, row three\");\n    tableRowThree.getCell(1).setText(\"col two, row three\");\n\n    table.setWidth(\"100%\");\n    FileOutputStream out = new FileOutputStream(new File(\"D:\\\\createdocument.docx\"));\n    document.write(out);\n    out.close();\n    document.close();\n    System.out.println(\"createdocument.docx written successully\");\n\n}\n\n}\n```\n创建后，再进行读取操作：\n```java\npublic class Read {\npublic static void main(String[] args) throws IOException {\n    // TODO Auto-generated method stub\n    InputStream is= new FileInputStream(new File(\"D:\\\\createdocument.docx\"));\n    XWPFDocument document= new XWPFDocument(is);\n\n    XWPFTable table = document.getTables().get(0);\n\n    for (XWPFTableRow row:table.getRows()){\n        System.out.println(row.getCell(0).getText());\n        System.out.println(row.getCell(1).getText());\n    }\n    document.close();\n}\n\n}\n```\n以上主要是为了实现BasicCAT将片段导出到Word里供外部审校使用。\n相关教程：\nApache POI Word Tutorial", "filename": "2018-11-01-java-manipulating-word.md"}, {"id": 222, "text": "\ndate: 2018-11-07 15:34:50+08:00\nlayout: post\ntitle: 用jekyll构建多语言网站\ncategories: 网络\ntags: CAT\n\nBasicCAT的网站打算利用jekyll做一个双语的版本放在github pages上。之前我做英文版博客是直接另建一个仓库，然后把中文的界面内容翻译为英文，再绑定二级域名en。\n这次我打算做一个可以在页面点击语言进行切换的版本。\n网上搜到一个方法是在post文件开头的yaml配置里加上lang：语言代码，通过不同的语言代码来切换显示的内容。原文在此。\n代码类似这样：\n```yaml\ntitle: Hello world!\nlang: en\nref: hello\n\n\ntitle: 你好，世界！\nlang: zh\nref: hello\n\n```\n```liquid\n{% raw %} \n{% assign posts=site.posts | where:\"lang\", page.lang %}\n\n{% for post in posts %}\n    \n{{ post.title }}\n\n{% endfor %}\n\n{% endraw %} \n```\n但这样的坏处是不同语言的文件都要放在同一个_posts文件夹里，而且还不能重名，也不能通过/zh这样的路径来进行区别。\n于是我研究了下jekyll的文档，发现可以用collection结合permalink实现。\n建立Collection\n首先看一下什么是Collection。\n\nCollections are a great way to group related content like members of a team or talks at a conference.\n\n同一语言的文档正好可以作为一个集合。\n我们在根目录建立一个_zh文件夹，将index.md、原来放在_posts里的文档还有其它feed.xml之类的文档都放进去。\n修改_config.yml，添加以下内容：\nyaml\ncollections:\n  zh:\n    output: true\n    permalink: /:collection/:title/\n添加zh集合，并开启该集合下文件的生成(output)，然后链接设置为集合的名字加上文件的标题，这里就是/zh/post文件名去掉日期。\n然后修改index.md，让其添加在zh里生成的post文件。下面第一行代码是我添加的内容，利用layout过滤掉其它文件。\n```html\n{% raw %} \n{% assign posts=site.zh | where:\"layout\", \"post\" %}\n{% for post in posts  %}\n\n{{ post.title }} {{ post.date | date: \"%b %d, %Y\" }}\n\n{% endraw %} \n```\nfeed.xml除了要做上述一行代码的添加，还要添加permalink，指向/zh/feed.xml。\n修改模板文件\n下面还要修改_layouts和_includes里的内容。为了方便翻译，我们不能采用修改default.html为default-zh.html这样的办法。我们可以把要翻译的内容存放进_data文件夹。在根目录存放英文内容的text.yml，在zh目录存放中文对应的text.yml。\n根据html文件里的内容制作类似这样文件：\nyaml\nhome: 首页\nintro: 使用Basic开发的CAT软件\nabout: 关于\nrss: 订阅\n然后修改html，让其根据当前路径是否包含/zh/来自动加载对应的语言文本。\n例如以下是nav.html导航栏部分的内容：\n```html\n{% raw %} \n  {% if page.url contains '/zh/' %}\n   {% assign home=site.data.zh.text.home %}\n   {% assign about=site.data.zh.text.about %}\n   {% assign rss=site.data.zh.text.rss %}\n   {% assign homelink='/zh/' %}\n  {% else %}\n   {% assign home=site.data.text.home %}\n   {% assign about=site.data.text.about %}\n   {% assign rss=site.data.text.rss %}\n   {% assign homelink='/' %}\n  {% endif %}\n\n{{home}} / \n{{about}} / {{rss}}\n\n{% endraw %} \n```\n我们还要在右上角添加一个语言切换器，让用户选择使用哪种语言。可以在default.html里添加以下内容：\n```html\n{% raw %} \n  {% if page.url contains '/zh/' %}\n    {% assign enurl=page.url | replace:'/zh/','/' %}\n    {% assign zhurl=page.url %}\n  {% else %}\n    {% assign enurl=page.url %}\n    {% assign zhurl=page.url | prepend:'/zh' %}\n  {% endif %}\n\nen\nzh\n\n{% endraw %} \n```\n对应的css：\ncss\n.language-chooser{\n    float:right;\n    margin: 2rem;\n}\n最终的效果可以看这个网站：https://www.basiccat.org\n相关参考教程：\n\nLiquid 语言：https://liquid.bootcss.com/\njekyll 文档：https://jekyllrb.com/docs/\n\n12/30更新\n搜索jekyll multilingual和jekyll localization等关键词，找到了jekyll-multiple-languages-plugin这个项目，对本地化的支持应该更加方便合理。", "filename": "2018-11-07-jekyll-multilingual.md"}, {"id": 223, "text": "\ndate: 2018-11-08 14:43:50+08:00\nlayout: post\ntitle: BasicCAT开发笔记（十）：机器翻译与插件的编写\ncategories: 技术随笔\ntags: CAT\n\n机器翻译功能的添加是比较简单的一件事情，切换到新的片段时，调用机器翻译API即可。\n比如以下是调用谷歌翻译的例子：\n```vb\nSub googleMT(source As String,sourceLang As String,targetLang As String) As ResumableSub\n    Dim target As String\n    Dim su As StringUtils\n    Dim job As HttpJob\n    job.Initialize(\"job\",Me)\n    Dim params As String\n    params=\"?key=\"&Utils.getMap(\"google\",Utils.getMap(\"mt\",Main.preferencesMap)).Get(\"key\")& _ \n    \"&q=\"&su.EncodeUrl(source,\"UTF-8\")&\"&format=text&source=\"&sourceLang&\"&target=\"&targetLang\njob.Download(\"https://translation.googleapis.com/language/translate/v2\"&params)\nwait For (job) JobDone(job As HttpJob)\nIf job.Success Then\n    Try\n        Dim result,data As Map\n        Dim json As JSONParser\n        json.Initialize(job.GetString)\n        result=json.NextObject\n        data=result.Get(\"data\")\n        Dim translations As List\n        translations=data.Get(\"translations\")\n        Dim map1 As Map\n        map1=translations.Get(0)\n        target=map1.Get(\"translatedText\")\n    Catch\n        target=\"\"\n        Log(LastException)\n    End Try\nElse\n    target=\"\"\nEnd If\njob.Release\nReturn target\n\nEnd Sub\n```\n有些机器翻译可能还要使用md5生成16进制编码的密钥，会复杂一点。\n机器翻译的API一般需要设置密钥等信息，我们需要在设置界面里添加设置选项。\n因为机器翻译很多，我把它做成了可以用插件来开发的形式。主要使用了ABPlugin这一个库。\n在程序开始运行时扫描插件目录里的插件：\n```vb\nPublic Sub loadPlugins\n    Dim dir As String\n    If preferencesMap.ContainsKey(\"pluginDir\") Then\n        dir=preferencesMap.Get(\"pluginDir\")\n    Else\n        dir=File.Combine(File.DirApp,\"plugins\")\n    End If\n    plugin.Initialize(\"plugin\",dir, \"MyKey\")\n    plugin.Start(1)\n    Log(plugin.GetAvailablePlugins)\nEnd Sub\nSub plugin_PluginsChanged()\n    Log(\"plugins have changed!\")\n    Log(plugin.GetAvailablePlugins)\n    plugin.Stop\nEnd Sub\n```\n然后根据插件的名字，判断其功能，将其加入MT列表。如果调用的MT不是内建的MT引擎，则调用对应的插件。\n```vb\nSub getMTPluginList As List\n    Dim mtList As List\n    mtList.Initialize\n    For Each name As String In Main.plugin.GetAvailablePlugins\n        If name.EndsWith(\"MT\") Then\n            mtList.Add(name.Replace(\"MT\",\"\"))\n        End If\n    Next\n    Return mtList\nEnd Sub\nSub getMT(source As String,sourceLang As String,targetLang As String,MTEngine As String) As ResumableSub\n    ......\n    If getMTPluginList.IndexOf(MTEngine)<>-1 Then\n        Dim params As Map\n        params.Initialize\n        params.Put(\"source\",source)\n        params.Put(\"sourceLang\",sourceLang)\n        params.Put(\"targetLang\",targetLang)\n        params.Put(\"preferencesMap\",Main.preferencesMap)\n        wait for (Main.plugin.RunPlugin(MTEngine&\"MT\",\"translate\",params)) complete (result As String)\n        Log(\"pluginMT\"&result)\n        Return result\n    End If\nEnd Sub\n```\n以上是主程序需要做的。然后是插件的内容，以下是添加的小牛机器翻译的例子，其中NiceName就是插件的名字，用MT结尾表示其功能，初始化时的key用以保证安全性。\n```vb\nSub Class_Globals\n    Private fx As JFX\nEnd Sub\n'Initializes the object. You can NOT add parameters to this method!\nPublic Sub Initialize() As String\n    Log(\"Initializing plugin \" & GetNiceName)\n    ' Here return a key to prevent running unauthorized plugins\n    Return \"MyKey\"\nEnd Sub\n' must be available\npublic Sub GetNiceName() As String\n    Return \"niutransMT\"\nEnd Sub\n' must be available\npublic Sub Run(Tag As String, Params As Map) As ResumableSub\n    Log(\"run\"&Params)\n    Select Tag\n        Case \"getParams\"\n            Dim paramsList As List\n            paramsList.Initialize\n            paramsList.Add(\"key\")\n            Return paramsList\n        Case \"translate\"\n            wait for (translate(Params.Get(\"source\"),Params.Get(\"sourceLang\"),Params.Get(\"targetLang\"),Params.Get(\"preferencesMap\"))) complete (result As String)\n            Return result\n    End Select\n    Return \"\"\nEnd Sub\nSub translate(source As String, sourceLang As String, targetLang As String,preferencesMap As Map) As ResumableSub\n    Dim target As String\n    Dim su As StringUtils\n    Dim job As HttpJob\n    job.Initialize(\"job\",Me)\n    Dim params As String\n    params=\"?apikey=\"&getMap(\"niutrans\",getMap(\"mt\",preferencesMap)).Get(\"key\")&\"&src_text=\"&su.EncodeUrl(source,\"UTF-8\")&\"&from=\"&sourceLang&\"&to=\"&targetLang\n    job.Download(\"http://api.niutrans.vip/NiuTransServer/translation\"&params)\n    wait For (job) JobDone(job As HttpJob)\n    If job.Success Then\n        Log(job.GetString)\n        Try\n            Dim json As JSONParser\n            json.Initialize(job.GetString)\n            target=json.NextObject.Get(\"tgt_text\")\n        Catch\n            Log(LastException)\n        End Try\n    Else\n        target=\"\"\n    End If\n    job.Release\n    Return target\nEnd Sub\nSub getMap(key As String,parentmap As Map) As Map\n    Return parentmap.Get(key)\nEnd Sub\n```\n插件需要编译为库来使用。\n另外，我在开发亚马逊机器翻译插件时，发现它的签名算法过于复杂，于是直接使用了它提供的java sdk（文档）。但这带来的问题是需要在主程序里包含需要引用的第三方jar。aws translate使用的jar加起来有4MB。插件的话最好是在不改变主程序的情况下就能使用。我采取的解决办法是这样的：写一个命令行工具来调用亚马逊的机器翻译，然后使用插件来运行这个工具，把结果传回主程序。\n相关文件：\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/MT.bas\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/MTParamsFiller.bas\nhttps://github.com/xulihang/BasicCAT/blob/master/plugins/niutransMT/niuTransMTPlugin.bas", "filename": "2018-11-08-basiccat-developing-notes-10-machine-translation-and-plugins.md"}, {"id": 224, "text": "\ndate: 2018-11-08 11:31:50+08:00\nlayout: post\ntitle: BasicCAT开发笔记（七）：术语管理\ncategories: 技术随笔\ntags: CAT\n\n作为普通译者，术语管理的功能其实很简单，主要就是便于整理词语，统一译文，加快输入效率。\n而Lisa提出的TBX标准则定义了单词的领域、定义、用法、词性、阴阳性、缩写、同义词、与其它词语的关联等一系列标签，较为复杂。SDL Multiterm和MemoQ的术语模块都参考了TBX的设计。\n\n\n另外还有把TBX转换为RDF用于描述实体（ontology），就更为复杂了，适合相关研究人员使用。\nBasicCAT术语管理使用起来很简单，足够满足一般需求。\n首先是基本的划词添加。在原文和译文输入框中划取要添加的术语，然后在右边的术语区点击添加术语。\n\n这里要注意的是，术语原文一样，但表达的概念可能不一样。比如test，可以表示试验，也可以表示测试。所以，一个原文键值可以存储多个对应的译文。这对应TBX中的多个termEntry。\n添加后的术语可以在术语管理器中进行进一步的管理。可以删除条目、修改条目、快速检索、添加标签和备注。\n\n另外还要支持TBX和TXT格式的导入导出。TXT以Tab分隔，依次是原文、译文、备注和标签。\nTBX的话，标签对应subjectField，备注放在note标签里。一个生成的TBX文件如下：\n```xml\n\n\n\n\n\n\nExported Term\n\n\n\n\nCreated by BasicCAT\n\n\n\n\n\n\n\n\n\nIncredibles\n\n\n\n\n\n\n超人一家\n\n\n\n\n\n\n\n\nScience\n\n\n\n\n\n\n科学\n\n\n\n\n\n自然\n\n\n\nsuperpowers\n\n\n\n\n\n\n超能\n\n\n备注\n\n\n\n\n\n自然\n\n\n\nsuperpowers\n\n\n\n\n\n\n超级力量\n\n\n备注\n\n\n\n\n\n\n```\n另外还有术语的匹配问题，如果添加的术语有屈折变化，在检索时需要对其进行词型还原。比如动词的第三人称单数和复数形式。这里我采用opennlp对原文进行分词、词性标注，并最终调用lemma词典得到单词的原型。就是opennlp的模型不多，不过有英文的就够了。\n再有就是术语匹配的效率问题，目前我想了两种术语匹配方法。一种是遍历术语库，看看哪个条目在原文中存在。另一种是把原文做成ngam，默认长度是1-8个，然后在术语库中匹配，因为使用的hashmap，效率会高很多。这适用于术语库条目很多的情况。一个缺点是不能对条目中的原文进行词性还原。\n相关文件：\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/Term.bas\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/TermEditor.bas\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/TermManager.bas\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/opennlp.bas", "filename": "2018-11-08-basiccat-developing-notes-7-terminology-management.md"}, {"id": 225, "text": "\ndate: 2018-11-08 12:47:50+08:00\nlayout: post\ntitle: BasicCAT开发笔记（八）：idml格式文件的支持\ncategories: 技术随笔\ntags: CAT\n\nidml是翻译书籍、手册的出版物必须要面对的格式。对这一格式具体的分析可以见我写的系列文章：\n\nIDML格式分析\n翻译InDesign文件\n导出IDML格式的InDesign文件为文字\n\n我们接下来要做的是做到对样式的保留。idml的样式分为本地样式和全局样式，本地样式定义在story文件里，而全局样式定义在resources/styles.xml文件里。\nstory文件里主要有两类元素，paragraphstylerange和characterstylerange。两者都需要有一种全局样式的属性，然后可以在此基础上定义本地样式。\n以下是一个story的例子，其中段落定义了Head Main这一全局样式，并添加了居中对齐这一本地样式。段落里的第一个characterstylerange使用了默认的[No character style]，没有全局样式效果。有本地样式StrokeWeight描边、Capitalization大写和StrokeColor描边颜色。\n```xml\n\n\n\n\n\n\n\nConte\n\n\nn\n\n\nts\n\n\n\n\n\n\n\n\n\n\n```\n我们要对样式保留，可以参考其它CAT软件的做法，将其转为标签。\n全局样式存放在styles.xml里，是按顺序进行存放的。我们把这些样式的名字存为一个列表，可以按序号读取，这样我们可以用<p0>、<p1>、<c0>、<c1>这样的标签表示全局样式。而本地样式的话，可以读取story，对每个characterstylerange或paragraphstylerange进行排序，序号保存为id，以后生成文件时读取id对应的characterstylerange或paragraphstylerange获得本地样式。当然，只有存在本地样式时才需要添加id属性。\n最终，上述文件可以转为以下带标签的文本。\n```\nConte\nn\nts\n\n\n\n\n\n```\n我们发现，contents这个词，因为不同的字符的本地样式的原因被拆开了。在英到中翻译时，原文单词内的字符的样式是没有得到保留的意义的。所以，对于相邻的标签，如果全局样式一样，但本地样式不一样的话，可以进行合并。合并后得到以下结果：\n```\nContents\n\n\n\n\n\n```\n然后是要将结果保存到工作文件了。以上内容，保存到工作文件的结果是这样的。\njson\n{\n            \"Story_u1c52c.xml\": [\n                [\n                    \"Contents\",\n                    \"\",\n                    \"<p15><c0 id=\\\"0\\\">Contents<\\/c0><c0>\\n<\\/c0><\\/p15><p19><c13><\\/c13><\\/p19>\",\n                    \"Story_u1c52c.xml\",\n                    {}\n                ]\n            ]\n        },\n呈现给用户的是没有标签的文本，其它的格式信息完全可以隐去。而对于一个句子中有特殊格式的情况，我们要把标签给它显示出来。比如以下这句中有进行斜体设置的标签：\njson\n [\n    \"Two types, the <c4>smooth<\\/c4> muscles (muscles found in your organs) and the <c4>cardiac<\\/c4> muscle (your heart), work automatically.\",\n    \"其中<c4>平滑肌<\\/c4>（存在于器官中）和<c4>心肌<\\/c4>（存在于心脏中）是自动工作的，\",\n    \"Two types, the <\\/c0><c4>smooth<\\/c4><c0> muscles (muscles found in your organs) and the <\\/c0><c4>cardiac<\\/c4><c0> muscle (your heart), work automatically. \",\n    \"Story_u198b2.xml\",\n    {}\n],\n因为c0标签是正文中默认的无全局样式标签，所以平时可以选择隐藏。显示标签这一步较为复杂，要考虑在文件开头、结尾和中间三种情况。另外，标签的存在也使得句段的合并存在问题。所以要进行跨标签的句段合并，原来隐藏的标签需要全部显示出来。\n英文翻译为中文要解决的另一个问题是字体，indesign里如果原文是英文字体，汉字会显示为一个方框，而字重不对也会提示错误。\n英文的字体往往有很多字重，但中文字体一般只有一种常规体。我这里选择了思源宋体作为翻译的目标字体，因为它有7种字重，可以满足一个对应关系。\n字重可以用数字表示，也可以用英文，比如adobe官网中是这样定义对应关系的：\n\n100 = thin\n200 = extra-light\n300 = light\n400 = normal, book\n500 = medium\n600 = demi-bold\n700 = bold\n800 = heavy\n900 = black\n\n思源宋体使用的英文会有不同，比如normal对应的是regular。我们需要对全局样式和本地样式中的字体样式进行转换。另外fonts.xml里需要添加对应的字体信息。这可以通过打开设置过该字体的idml文件得到。\n这样，替换stories文件、styles.xml、fonts.xml文件后，把原来解压的idml文件重新打包后就是翻译成功的idml文件了。\n相关文件：\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/idmlFilter.bas\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/idmlUtils.bas", "filename": "2018-11-08-basiccat-developing-notes-8-idml-filter.md"}, {"id": 226, "text": "\ndate: 2018-11-08 13:37:50+08:00\nlayout: post\ntitle: BasicCAT开发笔记（九）：交互式机器翻译\ncategories: 技术随笔\ntags: CAT\n\n关于什么是交互式机器翻译，我在此文已经做了较为详细的阐释，下面主要是讲讲BasicCAT中的交互式机器翻译是怎么做的。\nBasicCAT采用的是黑箱式的方法，将原文分为多个片段，用机器翻译进行翻译，然后翻译时通过输入的字符匹配对应的片段。Windows下汉语输入时会显示拼音，所以目标语是汉语时，要排除输入非汉字的情况。而英文输入时，进行分词，匹配最后一个单词的内容。\n我们可以用ngram的方法进行分段，但这一方法并不好使，有很多无用的片段。所以，我采用stanford corenlp进行句法分析，然后提取短语。\n比如对于If the space visitors come, Pooh — don't tell them where I live!这个句子，我们可以得到以下句法分析结果。\n(ROOT\n  (FRAG\n    (SBAR (IN If)\n      (S\n        (NP (DT the) (NN space) (NNS visitors))\n        (VP (VBP come) (, ,)\n          (SBAR\n            (S\n              (NP (NNP Pooh))\n              (: --)\n              (VP (VBP do) (RB n't)\n                (VP (VB tell)\n                  (NP (PRP them))\n                  (SBAR\n                    (WHADVP (WRB where))\n                    (S\n                      (NP (PRP I))\n                      (VP (VBP live)))))))))))\n    (. !)))\n然后，比如我们要提取所有动词短语。需要包含长的VP短语，也要包含最小的。我们可以用正则的贪婪模式来匹配最长的那个VP。然后启用非贪婪模式在这个VP里删掉开头的更小的VP后继续用贪婪模式匹配一个长的VP，如此循环往复。\n片段提取的过程如下：\n(NP (DT the) (NN space) (NNS visitors))\n(NP (NNP Pooh))\n(NP (PRP them))\n(NP (PRP I))\n(VP (VBP do) (RB n't) (VP (VB tell) (NP (PRP them))\n(VP (VBP live)))))))))))\n(VP (VBP come)\n(VP (VBP do) (RB n't) (VP (VB tell) (NP (PRP them)) (SBAR (WHADVP (WRB where)) (S (NP (PRP I)) (VP (VBP live))))))))))) (. !)))\n(VP (VBP do)\n(VP (VB tell) (NP (PRP them)) (SBAR (WHADVP (WRB where)) (S (NP (PRP I)) (VP (VBP live))))))))))) (. !)))\n(VP (VB tell)\n(VP (VBP live))))))))))) (. !)))\n(VP (VBP live)\n最终提取的片段和对应的翻译如下：\nthe space visitors  太空游客\nPooh    呸\nthem    他们\nI   我\ndo n't tell them    不要告诉他们\nlive    居住\ncome    来\ndo n't tell them where I live ! 不要告诉他们我住在哪里！\ndo  做\ntell them where I live !    告诉他们我住在哪里！\ntell    告诉\nlive !  现场直播！\n相关文件：\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/ITP.bas", "filename": "2018-11-08-basiccat-developing-notes-9-interactive-machine-translation.md"}, {"id": 227, "text": "\ndate: 2018-11-09 10:41:50+08:00\nlayout: post\ntitle: 翻译Word的办法\ncategories: 技术随笔\ntags: CAT\n\nMicrosoft Office在2007版推出了基于XML的OpenXML格式，word的docx格式便是zip压缩后的一系列xml文件。因为基于xml，第三方程序可以较为方便地进行读取。\n但是解析openxml文件对我来说还是有点复杂，虽然有现成的docx4j和apache poi等类库可以调用。\n以往翻译Word，是把Word转换为纯文本，翻译好后再进行替换。即使是Office365的Word机器翻译功能也是这样设计的。\n我想能不能导出文本后，再替换回去时使用Word的加载项自动进行替换。于是我使用VBA测试了一下。发现VBA的搜索替换功能其实就对应于Word的搜索与替换。如果一句话内部没有特殊的斜体、颜色等样式，替换是很完美的，原来的样式可以保留。但如果有的话，直接替换后这些样式会丢失。但其实这种句内样式的情况还是比较少的。\n用加载项的话，便不能很好地跨平台。所以，还是使用okapi将word转换为po或者xliff格式进行翻译较为合适。\n如果一句话内部没有特殊格式，可以隐藏该句的标签，这样其实和利用加载项替换的效果是一样的。", "filename": "2018-11-09-how-to-translate-word.md"}, {"id": 228, "text": "\ndate: 2018-11-09 21:00:50+08:00\nlayout: post\ntitle: Unicode——最基础的翻译技术\ncategories: 技术随笔\ntags: CAT\n\n从前要在计算机上显示各种不同的语言，需要切换不同的编码。比如简体中文是GBK编码，繁体中文是Big5编码。如果把Big5编码的内容当作GBK编码来显示，就会出现乱码。一个经典的例子是《三国志曹操传》只在台湾引进，然后大陆的玩家在自己电脑上运行时会出现乱码，比如“瓣Ｂ变巨肚”。\n后来便出现了Unicode，它是一个很大的字符集，可以显示全世界的语言。\n关于ASCII、UTF-8、Unicode的关系，阮一峰的文章已经讲得很清楚了，我这里再用Python举例子。\n接着上面曹操传的例子，我们看看变巨两个字对应的中文是什么。\n```python\n\n\n\n'变'.encode('gbk') #将“变”转为gbk编码的字节，可以看到编码是B1E4\nb'\\xb1\\xe4'\nb'\\xb1\\xe4'.decode('big5') #将编码B1E4以big5的编码显示\n'曹'\n'巨'.encode('gbk')\nb'\\xbe\\xde'\nb'\\xbe\\xde'.decode('big5') \n'操'\n```\n\n\n\n我们可以发现gbk编码中的变巨对应的是big5编码中的曹操。我们再来看看utf-8和unicode相关的操作\n```python\n\n\n\n'严'\n'严'\nord('严') #得到“严”的unicode的十进制编码\n20005\nhex(ord('严')) #“严”的unicode的十六进制编码\n'0x4e25'\nint('4E25',16) #把十六进制文本转回十进制\n20005\nchr(20005) #十进制unicode转回文本\n'严'\n'严'.encode('utf-8') #“严”的utf-8编码\nb'\\xe4\\xb8\\xa5'\n```\n\n\n\n更多参考Python的文档：https://docs.python.org/3/howto/unicode.html\n除了编码，还要解决文字的显示问题。比如汉字文字众多，中日韩的汉字有重复，阿拉伯语是从右到左书写的等等。\n这些技术是我们在计算机上进行翻译的基础。\n编码的转换工具\nlibiconv是gnu开发的一个c的类库，可以在各种编码之间进行转换。\nICU，另一个为软件提供国际化的工具。BasicCAT用icu4j来识别和转换文件编码。\nUnicode不仅是一种字符编码，它是一种标准，更多可以访问Unicode Consortium组织的网站。", "filename": "2018-11-09-unicode-the-foundation-of-translation-on-computers.md"}, {"id": 229, "text": "\ndate: 2018-11-13 14:13:50+08:00\nlayout: post\ntitle: 制作java软件安装包\ncategories: 技术随笔\ntags: \n\njava程序开发好了，接下来要进行打包分发工作了。\njava自带javapackage可以进行打包。这里我们使用launch4j将其转换为可执行文件。launch4j是跨平台的，但只能生成windows程序。\nWindows\n用launch4j生成可执行文件\n以下是我的launch4j配置文件，可以在图形界面下打开修改：\n```xml\n\n\ntrue \ngui\nBasicCAT.jar\nC:\\Users\\xulihang\\Documents\\B4J\\BasicCAT\\Objects\\BasicCAT\\BasicCAT.exe\n\n\n\nnormal\nhttp://java.com/download\n\nfalse\nfalse\n\nC:\\Users\\xulihang\\Downloads\\basiccat_1.ico\n\njre1.8.0_202 \nfalse\nfalse\n1.7.0_06 \n\npreferJre\n64/32\n\n\n```\n这样可以生成一个exe文件，生成的exe可以传递参数(commandline args)到java程序。\n用inno setep制作安装包\n我们可以用inno setep制作exe安装包。\n以下是我的iss脚本文件：\n```\n; Script generated by the Inno Setup Script Wizard.\n; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!\n[Setup]\n; NOTE: The value of AppId uniquely identifies this application.\n; Do not use the same AppId value in installers for other applications.\n; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)\nAppId={{6974B743-549E-4773-9B7A-0EFE71A61295}\nAppName=BasicCAT\nAppVersion=1.0\n;AppVerName=BasicCAT 1.0\nAppPublisher=Xu Lihang\nAppPublisherURL=http://blog.xulihang.me\nAppSupportURL=http://blog.xulihang.me\nAppUpdatesURL=http://blog.xulihang.me\nDefaultDirName={pf}\\BasicCAT\nDisableProgramGroupPage=yes\nOutputBaseFilename=setup\nSetupIconFile=C:\\Users\\xulihang\\Downloads\\basiccat_1.ico\nCompression=lzma\nSolidCompression=yes\n[Languages]\nName: \"english\"; MessagesFile: \"compiler:Default.isl\"\n[Tasks]\nName: \"desktopicon\"; Description: \"{cm:CreateDesktopIcon}\"; GroupDescription: \"{cm:AdditionalIcons}\"; Flags: unchecked\n[Files]\nSource: \"C:\\Users\\xulihang\\Documents\\B4J\\BasicCAT\\Objects\\BasicCAT\\BasicCAT.exe\"; DestDir: \"{app}\"; Flags: ignoreversion\nSource: \"C:\\Users\\xulihang\\Documents\\B4J\\BasicCAT\\Objects\\BasicCAT\\BasicCAT.jar\"; DestDir: \"{app}\"; Flags: ignoreversion\nSource: \"C:\\Users\\xulihang\\Documents\\B4J\\BasicCAT\\Objects\\BasicCAT\\model*\"; DestDir: \"{app}\\model\"; Flags: ignoreversion\nSource: \"C:\\Users\\xulihang\\Documents\\B4J\\BasicCAT\\Objects\\BasicCAT\\plugins*\"; DestDir: \"{app}\\plugins\"; Flags: ignoreversion\nSource: \"C:\\Users\\xulihang\\Documents\\B4J\\BasicCAT\\Objects\\BasicCAT\\jre1.8.0_202*\"; DestDir: \"{app}\\jre1.8.0_202\"; Flags: ignoreversion recursesubdirs\n; NOTE: Don't use \"Flags: ignoreversion\" on any shared system files\n; 使用recursesubdirs，可以复制所有子文件夹\n[Icons]\nName: \"{commonprograms}\\BasicCAT\"; Filename: \"{app}\\BasicCAT.exe\"\nName: \"{commondesktop}\\BasicCAT\"; Filename: \"{app}\\BasicCAT.exe\"; Tasks: desktopicon\n[Run]\nFilename: \"{app}\\BasicCAT.exe\"; Description: \"{cm:LaunchProgram,BasicCAT}\"; Flags: nowait postinstall skipifsilent\n```\n生成的exe可以用以下参数进行静默安装：\nbasiccat.exe  /verysilent  /suppressmsgboxes\n发布到Windows Store\n利用桌面桥，可以将桌面Windows程序发布到Windows Store上。微软现在提供两种方法，一种是使用Desktop App Converter，一种是使用Visual Studio，后者更加方便一点。\nmacOS\nlaunch4j只能生成exe文件，在mac上我们可以用jdk自带的javapackager。\n怎么做可以参考这篇文章以及官方文档。\njavapackager \\\n  -deploy -Bruntime=/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home \\\n  -native image \\\n  -srcdir java \\\n  -srcfiles BasicCAT.jar \\\n  -outdir release \\\n  -outfile BasicCAT \\\n  -appclass org.xulihang.basiccat.main \\\n  -name BasicCAT \\\n  -title BasicCAT \\\n  -nosign \\\n  -v\n通过以上命令，可以生成一个.app文件。.app就是个文件夹，我们可以把需要的文件再补充进去。比如动态库、icns图标等等。最后使用磁盘工具建立dmg文件即可。如果要在Windows上操作dmg，可以使用TransMAC。\njavapackager也可以生成deb和rpm等linux系统的安装包。", "filename": "2018-11-13-package-java-programs.md"}, {"id": 230, "text": "\ndate: 2018-11-17 15:50:50+08:00\nlayout: post\ntitle: BasicCAT开发笔记（十一）：XLIFF文件的支持\ncategories: 技术随笔\ntags: CAT\n\n关于XLIFF的介绍见前文，这里主要讲下BasicCAT是怎么处理xliff文件的。\n```\n\n\n\n\nContents\nContents\n\n\n\n```\n之前处理XML都是利用XML2MAP类将XML文件转为b4j中的map进行处理。在xliff中，我们要提取source中的内容作为原文。用户直接翻译<g id=\"1\">Conte<g id=\"2\">n</g>ts</g>这样的内容。但是直接提取，会把<g>标签和文本分开进行存储。我便把source中的标签都做了转义。当然只转义xliff的bpt、g、x等标签，其它文件格式的标签不会转义。转义时碰到一个效率问题，主要是从头开始替换会改变匹配的文本的offset，这样得反复进行匹配。解决办法是从文件末尾开始进行替换。\n因为标签太多的话比较麻烦，于是对于片段中只有一对标签和一个标签的情况，做了标签的隐藏。Trados默认是不隐藏标签的，所以这样做后，导出的tmx翻译记忆给Trados用会少不少标签信息。解决方法可以是用Trados打开翻译的xliff文件，这样它会自动读取target标签中的内容，也就不用翻译记忆了。\n<g id=\"1\">Conte<g id=\"2\">n</g>ts</g>这个片段中，<g id=\"1\"><g>可以进行隐藏。而如果是这样<g id=\"1\">Conte<g><g id=\"2\">nts</g>，就不进行隐藏。\n因为xliff成对的行内标签要判断开头标签和哪个结尾标签较为麻烦，所以只隐藏只有一对标签和单个标签的情况。\n因为xliff的文本没有换行等信息，所以预览文本的功能不能直接显示分段。其实每个transunit的提取基本都是按段落来的。所以预览或者生成双语段落对照可以根据transunit来。\nxliff支持用seg-source和mrk等标签保存句子的切分信息。如果启用了句子分割，就需要处理seg-source以及target标签中的片段内容。\n2020-08-31更新\nBasicCAT 1.8.3开始使用XmlSax将XML解析为自定义的XmlNode类，可以较好地处理行内标签，并可以建立标签的对应关系以及简化XLIFF的标签。之前那样对标签代码进行转义的方法是不正确的。XML比JSON强的一点在于它表示混合性的内容（mixed content）的内容较好。\n相关文件：https://github.com/xulihang/BasicCAT/blob/master/BasicCAT/xliffFilter.bas", "filename": "2018-11-17-basiccat-developing-notes-11-xliff-filter.md"}, {"id": 231, "text": "\ndate: 2018-11-17 16:03:50+08:00\nlayout: post\ntitle: BasicCAT开发笔记（十二）：PO文件的支持\ncategories: 技术随笔\ntags: CAT\n\nGettext PO最初是GNU用来本地化C语言程序的，后来成为了本地化软件的一个标准。\n在代码中用_gettext()包着要翻译的文本，然后用xgettext获取pot文件。pot文件分发给译员翻译到不同的语言，就是po文件。po文件转换为二进制的mo文件供程序调用。\nPO和XLIFF一样，可以作为翻译中的一个中间格式。\nPO文件是纯文本文件，较为容易处理。\n以下是一个PO文件的示例：\n```\nmsgid \"\"\nmsgstr \"\"\n\"Content-Type: text/plain; charset=UTF-8\\n\"\n\"Content-Transfer-Encoding: 8bit\\n\"\n\"Language: en_US\\n\"\n\"Plural-Forms: nplurals=2; plural=(n!=1);\\n\"\nmsgctxt \"okpCtx:sd=5:tu=NFDBB2FA9-tu2\"\nmsgid \"[Global Notes:\"\nmsgstr \"[全球需知：\"\n, c-format\nmsgid \"One file removed\"\nmsgid_plural \"%d files removed\"\nmsgstr[0] \"\"\nmsgstr[1] \"\"\n```\nmsgid保存的是原文，msgstr是译文。如果有复数的情况，会多一个msgid_plural，可能有多个msgstr[*]，msgctxt保存的是上下文信息，例子中是okapi生成的用来替换回原文件用的。\n如果内容是多行的，msgstr或msgid后面先接一个空白的\"\"，然后下一行的内容从下一行开始，结尾处有\\n。比如例子中的第一个msgstr，不过po的第一个msgid/msgstr都支持存储文件的信息的，比如文件编码，原文的语言等。\n要处理po的话也简单，只要按行读取，如果是msgid开头就读取为原文。不过有时候会遇到要翻译的内容为纯标签或者空白的情况，需要略过。读取时，对每个msgid都按顺序进行标号，这样方便生成的时候把内容替换回msgstr。\nOkapi生成的PO也有类似opentag的行内标签。不过是以<g1></g1>这样的形式存储的，比较容易判断开头标签和结尾标签的对应情况。所以BasicCAT默认是隐藏片段开头结尾处的成对标签和单个标签的。\nBasicCAT的po过滤器是以插件的形式开发的，插件和主程序之间需要传递很多的参数。\n相关文件：https://github.com/xulihang/BasicCAT/tree/master/plugins/poFilter", "filename": "2018-11-17-basiccat-developing-notes-12-po-filter.md"}, {"id": 232, "text": "\ndate: 2018-11-17 14:24:50+08:00\nlayout: post\ntitle: 上传Java程序到微软应用商店\ncategories: 技术随笔\ntags: Microsoft\n\n参考此篇文章，我们用launch4j和inno setup制作了支持静态安装的exe安装包。接下来，我们可以用它制作支持上传到Microsoft Store的appx文件。\n测试Visual Studio只支持转换vs建立的项目，我们还是要用Desktop App Converter（DAC）来转换。\n官方文档见此：https://docs.microsoft.com/zh-cn/windows/uwp/porting/desktop-to-uwp-run-desktop-app-converter\nDesktop App Converter会在本地运行一个Windows10系统的容器，然后根据软件安装进去生成的文件、注册表内容制作一个PackageFiles的文件夹。增加的文件比如AppxManifest.xml，Assets文件夹以及resources.pri等。\n下面简述步骤：\n\n安装Desktop App Converter，下载对应系统版本的映像。安装Windows10 SDK。\n运行Desktop App Converter，运行以下命令允许执行脚本：Set-ExecutionPolicy bypass。\n展开基础映像：DesktopAppConverter.exe -Setup -BaseImage .\\BaseImage-1XXXX.wim -Verbose\n\n生成Package：DesktopAppConverter.exe -Installer D:\\setup.exe -InstallerArguments \"/verysilent  /suppressmsgboxes\" -Destination C:\\Output\\MyApp -AppId \"xxxxx.xxxxx\" -PackageName \"MyApp\" -Publisher \"CN=MyPublisher\" -Version 1.0.0.0\n注意要提交到商店的话，需要从开发者中心找到以下内容，填入对应的appid，packagename和publisher等信息，不然上传软件包时会提示错误。不过在生成后修改AppxManifest.xml也可以。\n\n\n\n打包成appx: makeappx.exe /d PackageFiles /p out.appx\nmakeappx应该包含在windows10sdk中。\n\n\n好了这个appx就是可以直接上传到商店的软件包了。", "filename": "2018-11-17-upload-java-program-to-microsoft-store.md"}, {"id": 233, "text": "\ndate: 2018-11-18 20:49:50+08:00\nlayout: post\ntitle: 编写支持传递参数的Java启动用Shell脚本\ncategories: 技术随笔\ntags: \n\nBasicCAT要安装到linux上，需要用shell来进行调用，我参考omegat的启动脚本，做了点修改。让它支持以下三种方式启动：\n$ BasicCAT project.bcp #打开当前目录的项目文件\n$ BasicCAT /path/project.bcp #打开某个路径的项目文件\n$ BasicCAT #默认启动，不打开文件\nBasicCAT装在/opt/BasicCAT里。\n脚本如下：\n```shell\n!/bin/bash\nreadlink follows any symbolic links to get the real file\nRealBasicCATPATH=dirname \"$(readlink -nf $0)\"\ncurrentPATH=\"$(pwd)\"\nJAVA=\"java\"\nBUNDLED_JAVA=\"${RealBasicCATPATH}/jre/bin/java\"\n[ -f \"${BUNDLED_JAVA}\" ] && JAVA=\"${BUNDLED_JAVA}\"\ncd \"${RealBasicCATPATH}\"\nresult=$(echo \"$@\" | grep /)\nif [[ \"$result\" != \"\"  ]]\nthen\n    projectPATH=\"$@\"\nelse\n    projectPATH=\"$currentPATH/$@\"\nfi\nbcpresult=$(echo \"$projectPATH\" | grep \".bcp\" )\nif [[ \"$bcpresult\" = \"\" ]]\nthen\n    \"${JAVA}\" -jar \"BasicCAT.jar\"\nelse\n    \"${JAVA}\" -jar \"BasicCAT.jar\" \"$projectPATH\"\nfi\n```\n通过检测路径有没有包含分割符来判断路径是不是完整路径。通过检测参数有没有bcp来判断是否传递该参数。", "filename": "2018-11-18-shell-launch-java-and-pass-arguments.md"}, {"id": 234, "text": "\ndate: 2018-11-26 17:14:50+08:00\nlayout: post\ntitle: 跨平台软件的分发\ncategories: 技术随笔\ntags: \n\nBasicCAT是跨平台软件，所以发布的时候会提供不同平台的安装包。比如Windows是使用inno setup打包的exe，mac是dmg，linux是压缩的zip文档，里面提供安装用shell脚本。\n接下来要考虑一个敏捷开发的问题，因为手工打包三个平台的安装包还是比较麻烦的。\nwindows的exe文件当然只有在windows下生成，不过linux和mac上可以使用wine。\nmac的dmg其实就是一个hfs格式的分区，只不过这个分区存进了一个文件，然后又进行了压缩。dmg一般是要在macOS里用磁盘工具创建。我们可以在linux下用mkfs.hfsplus创建一个dmg文件，或者在windows里使用transmac。但最好的解决办法还是放弃dmg，采用zip格式进行打包。\n一个B4J软件的持续集成平台可以这样设计：代码提交到github，触发webhooks调用自己编写的windows上跑的server，编译出新的jar，然后调用脚本构建三个平台的安装包，然后将结果上传到github release等地方进行分发。", "filename": "2018-11-26-cross-platform-binary-files-distribution.md"}, {"id": 235, "text": "\ndate: 2022-09-04 17:40:50+08:00\nlayout: post\ntitle: 个人开发者的收款问题\ncategories: 随笔\ntags: 个人开发\n\n作为一个没有成立公司的个人开发者，怎么销售软件一直是个头疼的问题。我这里总结下我用过的收费方式。\n\n第三方支付平台：支付宝、微信、PayPal。\n第四方支付平台：面包多、FastSpring。\n\n首先是第三方支付平台。目前支付宝和微信的API只开放给企业，没有办法自动查询订单是否成交。所以只能让用户转账，发截图后人工进行验证。PayPal相对自由，提供API，可以较方便地对接到后台系统。\n然后是第四方支付平台，这些平台往往提供较丰富的电商功能，可以建一个在线商店，用于展示产品信息和销售，也可以集成进自己的网站，并且提供后台管理系统，便于管理订单、订阅服务等等。作为第四方支付平台，往往还能整合各种支付方式，比如信用卡、支付宝和PayPal，但会需要收取一定的手续费。\n国内的收款相对简单，跨境收款则复杂很多，这个时候用第四方平台会省心一点。外币的结汇购汇往往需要较多的手续费，我这里用FastSpring的Hyperwallet收取FastSpring的支付，然后用速汇金（moneygram）收汇，手续费是1美元，到账可以即时到账。\n跨境收款的风险也更高，我遇到过下面一些问题：\n\nChargeback。用户通过信用卡支付，之后可以向银行申请拒付。到时卖家不但拿不到钱，还有付大概10美元的费用。\n恶意退款。每次退款都会有一定的手续费，如果出现大量退款订单，会产生较大的损失。\n", "filename": "2022-09-04-individual-developer-payment-platform.md"}, {"id": 236, "text": "\ndate: 2018-11-30 10:00:50+08:00\nlayout: post\ntitle: B4X技术解析——CloudKVS\ncategories: 技术随笔\ntags: B4X\n\nKeyValueStore是B4X的一个跨平台类库，它对sqlite方法进行封装，使得我们可以像使用map一样，用键/值的形式读取和存储数据。数据存储在sqlite里可以永久保存，同时可以享受sqlite的高性能。\nKeyValueStore的Value是使用B4XSerializator生成的二进制数据，这样数据可以在iOS/Android/Jre等多个平台上进行交换，Value可以是b4x的map、list、bytes、string和用户定义的类型等等。\n而cloudkvs是基于KeyValueStore进行修改而来的支持与服务器进行数据同步的类库。\n\n用户可以在本地存储数据，如果联网的话，把修改的数据同步到服务器，同时也定时从服务器获得修改过的数据。下面我们来解析代码。\nB4J服务器端：\n主要由三个文件组成，main、action和db。\nmain类里可以通过传递的参数设定端口，添加了一个叫Action的Handler用来接收更新数据或者获得更新数据的请求。DB负责相关数据库的操作。\n数据库的分析：\n我们看服务器端db文件的代码，首先是数据库的创建，开启wal模式，创建一个叫data的表，表里的字段分别是user，key，value，id，time。数据库的主键是user和key。另外还根据id建立了索引。其中id记录了添加记录的总次数，这样可以检索到最后一次添加的记录。\nvb\nPrivate Sub CreateDatabase\n    If sql.ExecQuerySingleResult(\"SELECT count(name) FROM sqlite_master WHERE type='table' AND name='data'\") = 0 Then\n        sql.ExecNonQuery(\"PRAGMA journal_mode = wal\") 'best mode for multithreaded apps.\n        Log(\"Creating new database!\")\n        Log($\"journal mode: ${sql.ExecQuerySingleResult(\"PRAGMA journal_mode\")}\"$)\n        sql.ExecNonQuery(\"CREATE TABLE data (user TEXT, key TEXT, value BLOB, id INTEGER, time INTEGER, PRIMARY KEY (user, key))\")\n        sql.ExecNonQuery(\"CREATE INDEX id_index ON data (id)\")\n    End If\nEnd Sub\n使用SqliteSpy查看如下：\n\n添加数据的代码如下，它会获得上次修改的id并加1，添加新的条目。如果这个条目是3分钟前添加到客户端数据库的，有可能已经在服务器里存了更新的数据，如果发现更新的数据就不进行添加。\n```vb\nPublic Sub AddItem(item As Item)\n    lock.WriteLock\n    Try\n        Dim lastId As String = sql.ExecQuerySingleResult2(\"SELECT max(id) FROM data WHERE user = ?\", Array(item.UserField))\n        If lastId = Null Then lastId = 0\n        Dim id As Long = lastId + 1\n        If item.TimeField < DateTime.Now - 3 * DateTime.TicksPerMinute Then\n            Log(\"checking old record\")\n            'this is an old record. Maybe there is a newer one...\n            Dim rs As ResultSet = sql.ExecQuery2(\"SELECT time, value FROM data WHERE user = ? AND key = ?\", Array(item.UserField, item.KeyField))\n            If rs.NextRow Then\n                Dim currentTime As Long = rs.GetLong(\"time\")\n                If currentTime > item.TimeField Then\n                    Log(\"Old record discarded.\")\n                    item.ValueField = rs.GetBlob(\"value\")\n                    item.TimeField = currentTime\n                End If\n            End If\n            rs.Close\n        End If\n    sql.ExecNonQuery2(\"INSERT OR REPLACE INTO data VALUES (?, ?, ?, ?, ?)\",  _\n        Array (item.UserField, item.KeyField, item.ValueField, id, Min(item.TimeField, DateTime.Now)))\nCatch\n    Log(LastException)\nEnd Try\nlock.WriteRelease\n\nEnd Sub\n```\n以下代码从服务器获得条目，获取的是服务器的数据库有，本地数据库没有的条目，根据lastid进行判断。\nvb\nPublic Sub GetUserItems (user As String, lastId As Int) As List\n    Dim items As List\n    items.Initialize\n    Dim rs As ResultSet = sql.ExecQuery2(\"SELECT key, value, id, time FROM data WHERE user = ? AND id > ?\", Array(user, lastId))\n    Do While rs.NextRow\n        Dim item As Item\n        item.Initialize\n        item.UserField = user\n        item.KeyField = rs.GetString(\"key\")\n        item.ValueField = rs.GetBlob(\"value\")\n        item.idField = rs.GetLong(\"id\")\n        item.TimeField = rs.GetLong(\"time\")\n        items.Add(item)\n    Loop\n    rs.Close\n    Return items\nEnd Sub\nAction Handler根据传递过来的数据判断进行获取条目还是添加条目的操作。添加数据时，TaskItem.KeyField是键值，获取数据时则是lastid。\nvb\nSub Handle(req As ServletRequest, resp As ServletResponse)\n    Dim task As Task = serializator.ConvertBytesToObject(Bit.InputStreamToBytes(req.InputStream))\n    Log($\"Task: ${task.TaskName}, User: ${task.TaskItem.UserField}, Key: ${task.TaskItem.KeyField}, IP: ${req.RemoteAddress}\"$)\n    If task.TaskName.StartsWith(\"getuser\") Then\n        'the lastid value is stored in the key field\n        Dim items As List = DB.GetUserItems(task.TaskItem.UserField, task.TaskItem.KeyField)\n        Dim bytes() As Byte = serializator.ConvertObjectToBytes(items)\n        resp.OutputStream.WriteBytes(bytes, 0, bytes.Length)\n    Else If task.TaskName = \"additem\" Then\n        DB.AddItem(task.TaskItem)\n    End If\nEnd Sub\nB4J客户端：\n本地客户端的数据库除了存储数据的data表，还有一张存储队列的叫做queue的表。\nvb\nPrivate Sub CreateDatabase\n    If sql.ExecQuerySingleResult(\"SELECT count(name) FROM sqlite_master WHERE type='table' AND name='data'\") = 0 Then\n        Log(\"Creating new database!\")\n        sql.ExecNonQuery(\"CREATE TABLE data (user TEXT, key TEXT, value BLOB, id INTEGER, time INTEGER, PRIMARY KEY (user, key))\")\n        sql.ExecNonQuery(\"CREATE INDEX id_index ON data (id)\")\n        sql.ExecNonQuery(\"CREATE TABLE queue (qid INTEGER PRIMARY KEY AUTOINCREMENT, task BLOB, taskname TEXT, user TEXT, key TEXT)\")\n        sql.ExecNonQuery(\"CREATE INDEX id_index2 ON queue (user, key)\")\n    End If\nEnd Sub\n给本地数据库添加数据的同时，会在queue表中添加队列，用来把数据更新给服务器。\n```vb\n'Similar to Put. If the IsDefault parameter is set to True then the item will not replace an existing item on the server.\nPublic Sub Put2 (user As String, key As String, Value As Object, IsDefault As Boolean)\n    Dim item As Item = CreateItem(user, key, ObjectToBytes(Value))\n    If IsDefault Then item.TimeField = 0\n    sql.BeginTransaction\n    Try\n        InsertItemIntoData(item, False)\n        Dim task1 As Task\n        task1.Initialize\n        task1.TaskName = \"additem\"\n        task1.TaskItem = item\n        sql.ExecNonQuery2(\"DELETE FROM queue WHERE user = ? AND key = ?\", Array (user, key))\n        AddTaskToQueue(task1)\n        sql.TransactionSuccessful\n    Catch\nif B4J or B4I\n    sql.Rollback\n\nend if\n    Log(LastException)\nEnd Try\n\nif B4A\nsql.EndTransaction\n\nend if\nHandleQueue\n\nEnd Sub\n```\n从服务器同步数据有一个定时器，定时添加获取数据的队列。\n```vb\nPrivate Sub AutoRefresh_Tick\n    For Each user As String In AutoRefreshUsers\n        If sql.ExecQuerySingleResult2(\"SELECT count(*) FROM queue WHERE taskname = ?\", Array As String(\"getuser_\" & user)) = 0 Then\n            RefreshUser(user) \n        End If\n    Next\nEnd Sub\n'Sends a refresh request for the given user.\nPublic Sub RefreshUser(user As String)\n    Dim task1 As Task\n    task1.Initialize\n    task1.TaskName = \"getuser_\" & user\n    Dim lastId As String = sql.ExecQuerySingleResult2(\"SELECT max(id) FROM data WHERE user = ?\", Array As String(user))\n    If lastId = Null Then lastId = 0\n    task1.TaskItem = CreateItem(user, lastId, Null)\n    AddTaskToQueue(task1)\n    HandleQueue\nEnd Sub\n```\n如果队列请求成功，则执行相关操作，并将其从队列中删除。如果失败则等待30秒后重试。\n```vb\nPrivate Sub HandleQueue\n    If SendingJob = True Then\n        Return\n    End If\n    Dim rs As ResultSet = sql.ExecQuery(\"SELECT qid, task, taskname FROM queue ORDER BY qid\")\n    If rs.NextRow Then\n        Dim queue_id As Long = rs.GetLong(\"qid\")\n        Dim Job As HttpJob\n        Job.Initialize(\"job\", Me)\n        Job.PostBytes(url,rs.GetBlob(\"task\"))\n        Job.Tag = CreateMap(\"queue_id\": queue_id, \"taskname\": rs.GetString(\"taskname\"))\n        SendingJob = True\n    End If\nrs.Close\n\nEnd Sub\nPrivate Sub JobDone(job As HttpJob)\n    SendingJob = False\n    If job.Success Then\n        Dim m As Map = job.Tag\n        Dim taskname As String = m.Get(\"taskname\")\n        Dim queue_id As Long = m.Get(\"queue_id\")\n        If taskname.StartsWith(\"getuser\") Then\n            changedItems.Clear\n            Dim ser As B4XSerializator\n            ser.Tag = m\n            ser.ConvertBytesToObjectAsync(Bit.InputStreamToBytes(job.GetInputStream), \"ser\")\n        Else\n            DeleteFromQueue(queue_id)\n            HandleQueue\n        End If\n    Else\n        Log($\"Error sending task: ${job.ErrorMessage}\"$)\n        csu.CallSubDelayedPlus(Me, \"HandleQueue\", 30000)\n    End If\n    job.Release\nEnd Sub\n```", "filename": "2018-11-30-B4X-technology-dissection-cloudkvs.md"}, {"id": 237, "text": "\ndate: 2018-12-04 10:08:50+08:00\nlayout: post\ntitle: x86版树莓派，功耗仅4w的mini主机\ncategories: 电子数码\ntags: \n\n我一直关注着基于x86架构的低功耗主机，偶然淘宝给我推送了wintel box w8 pro。这是intel atom x5-z8350 CPU，cherry trail架构的一台主机，2GB内存，32GB emmc，realtek 8723bs无线网卡，重量200多克，长宽不到10厘米，平时运行的功耗只有4w。\n而相比于我之前买的intel compute stick，它的好处在于更加丰富的接口和64位系统的支持。它提供1个USB2.0，1个USB3.0口，microsd插槽，还有有线端口，hdmi接口和音频接口。这样平时就不用再接一个USB HUB。\n和树莓派相比，性能更好，而且能运行x86的windows程序。不过没有树莓派那么丰富的拓展，而且如果装linux，驱动目前并不好找。\n以下是在linux下输出的相关配置信息。\nxulihang@debian:~$ uname -a\nLinux debian 4.12.0-041200rc1-generic #201705131731 SMP Sat May 13 21:32:36 UTC 2017 x86_64 GNU/Linux\nxulihang@debian:~$ lspci\n00:00.0 Host bridge: Intel Corporation Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series SoC Transaction Register (rev 36)\n00:02.0 VGA compatible controller: Intel Corporation Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series PCI Configuration Registers (rev 36)\n00:03.0 Multimedia controller: Intel Corporation Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series Imaging Unit (rev 36)\n00:0b.0 Signal processing controller: Intel Corporation Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series Power Management Controller (rev 36)\n00:14.0 USB controller: Intel Corporation Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series USB xHCI Controller (rev 36)\n00:1a.0 Encryption controller: Intel Corporation Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series Trusted Execution Engine (rev 36)\n00:1f.0 ISA bridge: Intel Corporation Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series PCU (rev 36)\nxulihang@debian:~$ lsusb\nBus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub\nBus 001 Device 005: ID 1d57:fa20 Xenta \nBus 001 Device 004: ID 1a40:0101 Terminus Technology Inc. Hub\nBus 001 Device 003: ID 0bda:8152 Realtek Semiconductor Corp. \nBus 001 Device 002: ID 0bda:8179 Realtek Semiconductor Corp. RTL8188EUS 802.11n Wireless Network Adapter\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\nxulihang@debian:~$ cat /proc/cpuinfo\nprocessor   : 0\nvendor_id   : GenuineIntel\ncpu family  : 6\nmodel       : 76\nmodel name  : Intel(R) Atom(TM) x5-Z8350  CPU @ 1.44GHz\nstepping    : 4\nmicrocode   : 0x40a\ncpu MHz     : 1482.890\ncache size  : 1024 KB\nphysical id : 0\nsiblings    : 4\ncore id     : 0\ncpu cores   : 4\napicid      : 0\ninitial apicid  : 0\nfpu     : yes\nfpu_exception   : yes\ncpuid level : 11\nwp      : yes\nflags       : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology tsc_reliable nonstop_tsc cpuid aperfmperf tsc_known_freq pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm sse4_1 sse4_2 movbe popcnt tsc_deadline_timer aes rdrand lahf_lm 3dnowprefetch epb tpr_shadow vnmi flexpriority ept vpid tsc_adjust smep erms dtherm ida arat\nbugs        :\nbogomips    : 2880.00\nclflush size    : 64\ncache_alignment : 64\naddress sizes   : 36 bits physical, 48 bits virtual\npower management:\n……\nz8350集成了一系列驱动，稳定版的linux内核不够新，还不能很好地支持。我参考这里下载了ubuntu的内核，装上后可以驱动声卡。不过耳机孔没有声音，hdmi输入正常。平时hdmi转vga外接显示器，转接器要带音频输出，这样才能外接音频设备使用。\n但是无线网卡还是没有驱动，最新的linux内核已经将rtl8723bs的驱动放在staging里了，只是我用的debian9还没有采用。我测试安装sid版debian的内核是可以驱动无线的，但在debian9上还不稳定。", "filename": "2018-12-04-the-x86-version-of-raspberry-pi.md"}, {"id": 238, "text": "\ndate: 2018-12-05 14:16:50+08:00\nlayout: post\ntitle: Git学习笔记\ncategories: 技术随笔\ntags: \n\nGit和版本控制，在听雨技术部的时候气体就一直给我们强调，但我平时也就仅仅会使用基础的git操作。也是不需要和很多人协作，平时做的事也不用什么分支之类进阶的功能。现在BasicCAT打算使用git来进行协作翻译，得深入了解一下。\n原理方面可以看progit这本书，我这里主要讲操作。\n基本操作：\n\n新建空的仓库：git init。这样可以建立.git文件夹。\n添加文件：git add filename，这样以后会记录这个文件的变化\n查看工作状态：git status，可以显示当前工作区的状态。\n提交记录：git commit -m \"commit message\"，如果不加-m，会跳出编辑器界面让你手动输入提交信息。\n查看工作区的文件有哪些变动：git diff。适用于还没有用add来stage文件的情况。如果add并commit了，需要使用git show。\n给仓库打标签：git tag 给标签取的名字，可以标记重要节点的commit。\n查看记录：git log，可以显示commits的历史。\n\n如果commit后想再修改这个commit，比如添加文件，修改commit message，可以使用git commit --amend。\n下面是远程git仓库相关操作。\n\n新建一个bare仓库，没有工作文件夹，可以用作远程仓库使用：git init --bare\n给本地仓库添加远程仓库记录：git remote add origin https://github.com/xulihang/git-playground.git，名字叫做origin。\n将本地的修改提交到远程仓库：git push\n将远程仓库的新内容下来到本地仓库：git fetch\n将远程仓库的新内容下来到本地仓库并进行合并操作：git pull\n克隆远程仓库到本地：git clone https://github.com/xulihang/git-playground.git，同时会添加remote记录。\n\n进阶操作\nreset\n以下是reset的命令说明\n```\nPS D:\\git\\playground> git reset -h\nusage: git reset [--mixed | --soft | --hard | --merge | --keep] [-q] []\n   or: git reset [-q] [] [--] ...\n   or: git reset --patch [] [--] [...]\n-q, --quiet           be quiet, only report errors\n--mixed               reset HEAD and index\n--soft                reset only HEAD\n--hard                reset HEAD, index and working tree\n--merge               reset HEAD, index and working tree\n--keep                reset HEAD but keep local changes\n--recurse-submodules[=<reset>]\n                      control recursive updating of submodules\n-p, --patch           select hunks interactively\n-N, --intent-to-add   record only the fact that removed paths will be added later\n\n```\n用法示例：git reset HEAD~1，HEAD指向前一次commit，但本地文件没有变动。而添加--hard选项后，工作区的本地文件也会回退。这里HEAD~1可以用具体的commit代码进行替换。\nrevert\n和git reset删除显示的commit记录不一样，revert是添加commit。只是新的commit提交后，内容是进行回滚后的内容，这样每次撤销的记录也会保存下来。\n用法示例：git revert HEAD，撤销当前HEAD对应的commit的内容。\nbranch 和 merge\ngit可以高效地使用分支，我们平时可以把代码提交到测试分支，比如叫testing，测试可以发布后再提交到生产线分支，比如默认的master。\n\n建立分支：git branch testing\n切换到该分支：git checkout testing，工作区的文件会变成该分支版本的\n\n以上两条命令和这条命令效果一样：git checkout -b testing\n如果要将testing分支的修改合并到master分支，运行以下命令：\nPS D:\\git\\playground> git checkout master\nPS D:\\git\\playground> git merge testing\nUpdating fe185c0..5ed6517\nFast-forward\n readme.md | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n因为testing分支和master的父commit是一样的，所以显示Fast-forward，本质是将master的head指向testing的最新commit。\n如果master又有了提交，这样合并testing时可能会产生冲突：\nPS D:\\git\\playground> git merge testing\nAuto-merging readme.md\nCONFLICT (content): Merge conflict in readme.md\nAutomatic merge failed; fix conflicts and then commit the result.\n运行git status，会有如下内容：\n```\nPS D:\\git\\playground> git status\nOn branch master\nYou have unmerged paths.\n  (fix conflicts and run \"git commit\")\n  (use \"git merge --abort\" to abort the merge)\nUnmerged paths:\n  (use \"git add ...\" to mark resolution)\n    both modified:   readme.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n```\n这时打开出现冲突的文件，会是以下内容：\n```\n<<<<<<< HEAD\nHello!!\n你好！\n=======\nHello!!！\n\n\n\n\n\n\n\ntesting\n```\n\n\n\n\n\n\n\n我们需要手动解决冲突，然后进行git add和git commit就不会提示错误了。解决冲突只需保留需要的内容，然后把添加的注释删去。\n利用git log  --pretty=oneline --graph命令可以以字符图像的形式显示分支合并的结果。可以看到master合并了testing的内容，新建了一个merge后的commit记录。\nPS D:\\git\\playground> git log  --pretty=oneline --graph\n*   34f98a17ba05f3b0a1e7b2c650eae7c2a58ed774 (HEAD -> master) Merge branch 'testing'\n|\\\n| * bc1d74f900a7036b06f557ee5872d129256a91cf (testing) update\n* | 1db49bbdc2f018b7dc9aac3d59f9a4c61666f6a3 update\n|/\n* 5ed65172d3a7a984635691ea8f733a30229a627f update\n* fe185c0ae591b4067dfe9e5e193b6a33418c5264 Revert \"update\"\n* 62526fc0ee0c16e636e2d690300909275920bd30 update\n* 2e19cc94366869c5eb2df02862bfd6c20be01524 (tag: dd) init\nrebase\nrebase和merge的功能相似，不过使用merge会生成较为复杂的历史，而rebase则保持commit只有一条历史。\n用的还是上面的例子，以下代码将testing的基础commit变成master分支最新的commit。同样会提示冲突。\n```\nPS D:\\git\\playground> git checkout testing\nSwitched to branch 'testing'\nPS D:\\git\\playground> git rebase master\nFirst, rewinding head to replay your work on top of it...\nApplying: update\nUsing index info to reconstruct a base tree...\nM       readme.md\nFalling back to patching base and 3-way merge...\nAuto-merging readme.md\nCONFLICT (content): Merge conflict in readme.md\nerror: Failed to merge in the changes.\nPatch failed at 0001 update\nUse 'git am --show-current-patch' to see the failed patch\nResolve all conflicts manually, mark them as resolved with\n\"git add/rm \", then run \"git rebase --continue\".\nYou can instead skip this commit: run \"git rebase --skip\".\nTo abort and get back to the state before \"git rebase\", run \"git rebase --abort\".\n```\n按照提示解决冲突，可以完成rebase。\n我们切换回master分支，把testing分支merge进来：\nPS D:\\git\\playground> git checkout master\nSwitched to branch 'master'\nPS D:\\git\\playground> git merge testing\nUpdating 493b0ce..45319f7\nFast-forward\n readme.md | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n因为已经rebase过了，所以merge显示的是Fast-forward。我们再查看commit记录会是这样的，一条线，比较简洁：\nPS D:\\git\\playground> git log  --pretty=oneline --graph\n* 45319f7b3c7f35ebdaf816a62e7c9ff353dded10 (HEAD -> master, testing) update\n* 493b0ced12b54bae7acd0a0cedf068481ac3987f update\n* 5ed65172d3a7a984635691ea8f733a30229a627f update\n* fe185c0ae591b4067dfe9e5e193b6a33418c5264 Revert \"update\"\n* 62526fc0ee0c16e636e2d690300909275920bd30 update\n* 2e19cc94366869c5eb2df02862bfd6c20be01524 (tag: dd) init\ncheckout\ncheckout除了切换分支，把仓库里的文件提取到工作文件夹，还可以撤销对工作区没有add过的文件进行的修改。", "filename": "2018-12-05-git-learning-notes.md"}, {"id": 239, "text": "\ndate: 2018-12-08 10:03:50+08:00\nlayout: post\ntitle: BasicCAT开发笔记（十三）：团队协作\ncategories: 技术随笔\ntags: CAT\n\n团队协作主要是能够实时共享翻译记忆和术语库，同步工作文件。\n利用CloudKVS可以实现翻译记忆和术语库的共享。客户端向本地的KeyValueStore添加项目，该项目会被自动同步到远程服务器，并记录该条目的id。如果另一客户端提交了新的条目，该客户端本地没有，就会同步比本地存储的id更大的新条目。\n这一工作方式和git的设计相类似，而git只适合对纯文本文件进行版本控制。\n还有要解决的一个问题是句段的分割与合并情况的同步。我采用git进行文件的同步。因为使用git容易出现冲突问题，所以我利用共享翻译记忆库的同步事先根据新增的翻译记忆对工作文件进行更新。为了实现这些功能，我对BasicCAT的翻译记忆库和工作文件存储的内容进行了修改，主要是添加了创建者、创建时间、创建时对应的文件名和片段序号。\nGit的流程\n一般情况下提交修改：\n\ngit add .\ngit commit -m \"message\"\ngit pull --rebase\ngit push\n\n如果遇到冲突，需要检测冲突是否解决了，解决冲突后执行如下操作：\n\ngit add .\ngit rebase --continue\ngit push\n\nBasicCAT使用jgit来实现git的功能。jgit的api分为plumbing和porcelain两种，顾名思义，前者更加低层，后者更加简单，类似平时用命令行使用git。\n可以在jgit-cookbook这个项目中了解具体的用法。\n更新\n9号添加了自动解决冲突的办法。主要是事先进行fetch，检测远程是否有尚未同步过来的提交。如果有，则建立一个临时工作文件夹并切换过去，checkout文件并执行rebase，然后对工作文件进行比对。比对的片段内容示例如下：\n[\n    \"Page 1\",\n    \"第1页\",\n    \"Page 1\\n\\n\",\n    \"超人总动员_short.txt\",\n    {\n        \"creator\": \"xulihang\",\n        \"createdTime\": \"1544367110849\"\n    }\n],\n如果远程文件的createdTime比本地的新，那就更新本地的工作文件对应的片段。如果本地的片段更新，那就更新远程的文件。远程文件有更新的话就要执行push来同步更新远程的仓库。有一个特殊情况是文件进行了片段的分割与合并，这时不做任何修改。因为rebase后HEAD就跟上了远程仓库的HEAD，之后做的修改可以直接覆盖原来的内容，所以这种情况时进行提交有可能会覆盖更新的翻译内容。\n参考资料：\n\nInitializing Git Repositories with JGit \nCheckoutCommand\n\n相关文件：\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/Project.bas\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/git.bas\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/TM.bas\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/Term.bas\nhttps://github.com/xulihang/BasicCAT/blob/master/BasicCAT/CloudKVS_Server/CloudKVS_Server.b4j", "filename": "2018-12-08-basiccat-developing-notes-13-collaboration.md"}, {"id": 240, "text": "\ndate: 2018-12-14 10:14:50+08:00\nlayout: post\ntitle: BasicCAT开发笔记（十四）：多语种的支持\ncategories: 技术随笔\ntags: CAT\n\nBasicCAT最初仅支持中英互译，目的是针对两种语言做专门的适配，同时减轻刚开始开发的负担。随着软件的不断完善，需要增强软件的通用性，增加更多语言的支持。\n其实多语种的支持并不复杂。主要需要做的是以下三点：\n\n建立项目时增加语言选项，使用ISO639标准的语言代码保存语言信息。\n添加对应语言的分割规则，需要修改SRX文件。\n判断哪些语言是中间有空格的，它的字数又是如何统计的。\n\n另外还有针对各大机器翻译API，使用的语言代码不尽相同，需要做一个表进行转换。当然也可以设置为自动检测，检查语法和拼写的Language Tool我便设成了自动检测，不过对于德语英语这样有很多词形式一样的语言，会出现判断错误的问题。而斯坦福corenlp支持的语言有限，不支持的语言就不进行句法分析了。\n还有屈折语的屈折变化问题，一种是提取词的原形(lemma)，一种是提取词干(stem)。我这里选择使用opennlp进行词形还原。因为opennlp提供的模型和词典有限，我也没有精力去做其它语言的适配，于是目前只对英文进行词形还原。\n下面我再具体讲一下BasicCAT中对于中英互译和韩文的处理。\n对于中译英，中文没有空格，而英文有空格，按句段进行翻译时，译者并不需要注意添加空格的问题。所以生成翻译时，需要BasicCAT自动在英文的句子间添加空格。\n而反过来，英译汉的时候，则需要删去多余的空格。因为BasicCAT保留了原文的空格和换行等信息，虽然显示的片段都是没有多余空格的，但生成时会被包含进去，这在做英译法等有空格语言的互译时很方便，但英译中时，空格就成了多余的内容。\n因为原文可能包含了换行、tab等信息，不能简单地使用Trim来去除空格。也不能直接把原文的空格全部删去，因为有可能中文里也会使用空格，比如下面的情况：\n\n正则表达式，又称规则表达式。（英语：Regular Expression，在代码中常简写为regex、regexp或RE），计算机科学的一个概念。\n\n所以我采用正则表达式，删去不是字母和汉字中间的空格。\nvb\nSub removeSpacesAtBothSides(text As String) As String\n    text=Regex.Replace2(\"\\b( *)\\b\",32,text,\"placeholder<$1>placeholder\")\n    text=Regex.Replace2(\"(?<! *placeholder<) *(?! *>placeholder)\",32,text,\"\")\n    text=Regex.Replace2(\"placeholder<( *)>placeholder\",32,text,\"$1\")\n    Return text\nEnd Sub\n再来说说韩文，本来我以为中日韩都是没有空格的，但发现韩语使用表音谚文书写，是有用空格来区分词语的。而且韩语的标点也都是英文标点，句子之间也有空格。那它就不属于词之间没有空格的语言。\n但韩语的字数统计又是按字来算的，所以不能像其它有空格的语言那样直接根据空格进行split来统计字数。而是要去掉空格，统计字符数。\n多语言的支持做到极致还是挺难的事情，而且我也不懂其它语言。阿拉伯语、希伯来语是从右往左书写的，我从来没有在计算机上处理过这类语言，BasicCAT便也不支持这两种语言。\n更新\n对于删去多余空格，我参考omegat的方法又进行了改进。需要根据句段分割标准，去除中文断句位置后面多余的空格。但有时候句子开头也会有多余空格，这时不清楚是不是要去除。我测试如果中文句子后面有一个空格，Trados会删去。但是如果有两个空格，两个都会被保留。其实大多数时候这些空格应该是删去的，但也不清楚是否有些文本会需要保留空格。于是我在BasicCAT的项目设置里添加选项，可以控制是否去除。\n对应代码如下：\n```vb\nSub removeSpacesAtBothSides(path As String,targetLang As String,text As String,removeRedundantSpaces As Boolean) As String\n    readRules(targetLang,path)\n    Dim breakPositionsMap As Map=getPositions(\"yes\",previousText&text)\n    Dim breakPositions As List\n    breakPositions.Initialize\n    For Each pos As Int In breakPositionsMap.Keys\n        pos=pos-previousText.Length\n        breakPositions.Add(pos)\n    Next\n    breakPositions.Sort(False)\nFor Each position As Int In breakPositions\n    Try\n        Dim offsetToRight As Int=0\n        For i=0 To Max(text.Length-1-position,0)\n            If position+i<=text.Length-1 Then\n                If text.CharAt(position+i)=\" \" Then\n                    offsetToRight=offsetToRight+1\n                Else\n                    Exit\n                End If\n            End If\n        Next\n        Dim rightText As String\n        If position+offsetToRight<=text.Length-1 Then\n            rightText=text.SubString2(position+offsetToRight,text.Length)\n        End If\n        text=text.SubString2(0,position)&rightText\n    Catch\n        Log(LastException)\n    End Try\nNext\n\nIf removeRedundantSpaces Then\n    text=Regex.Replace2(\"\\b *\\B\",32,text,\"\")\n    text=Regex.Replace2(\"\\B *\\b\",32,text,\"\")\nEnd If\npreviousText=text\nReturn text\n\nEnd Sub\n```\n12/18更新\n关于从右至左（RTL, right to left）书写的阿拉伯语和希伯来语，我测试其实Windows可以自动帮我们处理。只要输入框里存在阿拉伯语，就会自动采用从右至左的模式。delete和backspace键是反的，复制粘贴是反的，输入的光标会一直在左端。\n\n2020/03/12更新\n我完善了SRX算法后，空格和换行等信息会包含在后一个句子中，所以去除多余空格这一步需要将前一片段和后一片段合并后进行处理。\n关于字数统计有一个标准GMX-V，但很多CAT软件都没有遵循。\n2020/11/12更新\n有阿拉伯译员反馈对阿拉伯语的支持不对。阿拉伯语需要右对齐显示。\n1.9.2版本添加了这一支持。", "filename": "2018-12-14-basiccat-developing-notes-14-multilanguage-support.md"}, {"id": 241, "text": "\ndate: 2018-12-18 10:41:50+08:00\nlayout: post\ntitle: 使用语料库研究语法问题\ncategories: 语言\ntags: 语料库\n\n之前看到本科的英语老师发了给学生布置的语法作业，里面提到他在英国国家语料库里提取例句，用来说明want sb doing这一语法现象。\n最近听奥斯汀与艾丽时，发现第二季11集里也出现了这一表达。于是我下载了这一集的字幕文件，做成了语料库。\n下面是具体的做法：\n\n\n在此下载srt格式字幕，去除中文，时间轴等信息，得到纯英文的内容：\n```\n- Last time on \"Austin & Ally\"...\nAlly: Austin and I do like each other, but it's complicated.\nI think he still has feelings for another girl.\nI made up my mind. I'm gonna ask Kira to be my girlfriend.\nIt's time for me to face my biggest fear.\n```\n\n\n使用TagAnt对文本进行词性标注。\n`\n-_: Last_JJ time_NN on_IN \"_ Austin_NP &CC Ally_NP \"'' ..._: \nAlly_NN :: Austin_NP and_CC I_PP do_VVP like_IN each_DT other_JJ ,, but_CC it_PP 's_VBZ complicated_JJ ._SENT \nI_PP think_VVP he_PP still_RB has_VHZ feelings_NNS for_IN another_DT girl_NN ._SENT \nI_PP made_VVD up_RP my_PP$ mind_NN ._SENT I_PP 'm_VBP gonna_VVG ask_VV Kira_NP to_TO be_VB my_PP$ girlfriend_NN ._SENT \nIt_PP 's_VBZ time_NN for_IN me_PP to_TO face_VV my_PP$ biggest_JJS fear_NN ._SENT \n```\n使用的tag遵循TreeTagger的tagset，说明文档在此。\n\n\n使用AntConc进行检索\n默认会把标签当做一般的单词处理，可以在global settings里设置隐藏标签。AntConc如何处理标注好的数据可以见作者录的视频教程。\n使用以下表达式：want_VV *_NP *_VVG，可以检索want sb doing的句子。不过这里没有准备很多奥斯丁与艾丽字幕文本的语料，只显示一条内容。\n\n\n\n我们也可以直接使用在线的语料库，比如杨百翰大学的BNC语料库。\n杨百翰语料库的说明见此。\n我们检索want的任意形态+代词+动词ing形式的内容：\n\n", "filename": "2018-12-18-use-corpus-to-explore-grammar.md"}, {"id": 242, "text": "\ndate: 2018-12-20 09:50:50+08:00\nlayout: post\ntitle: 本站添加了谷歌Adsense广告\ncategories: 随笔\ntags: \n\n初中那会儿混迹系统之家、深度、雨林木风等论坛，有一个封装系统的作者叫小峰，他自己建了一个站点，平时有发自己的博客，作为站长，也会分享很多关于建站的东西。我当时便看到了这篇文章：所谓的网赚之迷 ?!。\n利用自己平时的时间写点博客，有点流量后便想赚点钱，但一般网站其实每天能赚几块钱就不错了。现在也不是博客的时代了，是微信公众号、知乎还有其它知识付费平台的时代了。\n因为本站没有备案，国内的平台不能用。选择谷歌的Adsense。Adsense的申请还是比较容易的，通过后在网页中加入代码即可以显示广告了。以下是这一天半的情况。\n\nGoogle Adsense和百度推广一样，是要用户点击后才给收入，没有点击，即使展示上万次也是没有用的。\n最近开发了BasicCAT这款计算机辅助翻译软件，但还没什么人用。一个人既要做开发，又要做营销，还是挺难的。所以我现在对于广告这类东西也并不排斥。\n之前开发Windows Phone应用时使用了aDduplex，是一个应用互相显示对方广告的服务，也是推广自己的软件的一个途径。", "filename": "2018-12-20-google-adsense-is-embedded.md"}, {"id": 243, "text": "\ndate: 2018-12-24 22:25:50+08:00\nlayout: post\ntitle: 创作\ncategories: 随笔\ntags: \n\n本文的英文名是creative content，这一词来自乔布斯1997年MacWorld上的演讲。出版、印刷、广告等产业的专业人士会使用苹果的Mac电脑。\n现在，随着计算机技术的发展，几乎一切内容的创作都是用电脑来完成的了。创作使用的工具变了，但是创作的主体还是人。\n最近三个月，我一直在创作一款叫做BasicCAT的计算机辅助翻译软件。目前软件已经较为完善了，为了更多人能够看到我的作品，给我的代码提出修改意见以及交流翻译技术，我选择将其开源。\n写代码也是一种创作，使用程序语言来描述，最后得到可以运行，解决实际问题的程序。写程序和写小说相近。程序是由一段段的子程序构成的，每个子程序都有自己的名字。而小说是由一个个章节组成的。小说的章节可以没有名字，只有序号。但是子程序可以不行，程序员要给每个子程序取好名字，方便以后能快速地理解这段代码是干嘛的，怎么重复利用。\n设计程序时需要注意很多的细节。最近看《超人总动员2》，里面女主角Helen Parr被敌视超人的反派抓了，想利用她来彻底让超人成为历史。女主角被抓后，给了一个片段，是和反派的对话。反派说出了自己为什么要这么做，她的目的是什么。这一段剧情是推动情节发展，提供背景信息的。我们创作过程中，会不断发现缺失的东西，并进行补全。有可能皮克斯的创作人员一开始也是没有想加这个片段，但后来发现需要给观众补充这样的信息。而程序从开发到完善也是这样的一个过程，现在BasicCAT已经从1.0版发展到了1.3版。Windows1.0版出来时也很一般，但到3.x版的时候就成为了流行的图形操作系统。\n创作有很多种，还有音乐创作。最近看《外滩钟声》，里面出现了很多大提琴独奏曲，比如圣桑的《天鹅》。我小时候学长笛是练过这个曲子的，当时觉得这曲子很优美，但我想我那时并没有深入地去了解这首曲子的意境。每一个停顿、强弱的变化是想表达什么，我没有去思考。这首曲子虽然只是三级的曲子，但要演奏好其实也并不容易。下图是我的考级书中《天鹅》的五线谱。\n\n现在，我可以感受到，天鹅从空中飞来，不断变换着姿态，在水中嬉戏，然后飞走，不断远去的情形。我想，可能也是我创作的内容多了，知道从创作者的角度去理解他们创作出来的作品。\n这里要提一下的是网络中的作品，很多创作的目的只是博人眼球，吸引流量。不少站长做垃圾站，诱骗网民点进自己的网站。生活不易，但是我希望我们创作好内容的初心不变。", "filename": "2018-12-24-creative-content.md"}, {"id": 244, "text": "\ndate: 2018-12-27 15:21:50+08:00\nlayout: post\ntitle: Okapi Framework 简介\ncategories: 技术随笔\ntags: CAT\n\nOkapi Framework是一套开源的翻译工具框架，主要由以下组件组成：\n\nRainbow，本地化工具，图形化界面\nCheckmate，质量检查工具，图形化界面\nRatel，SRX分割规则编辑器，图形化界面\nTikal，本地化工具，命令行界面\nLonghorn，服务器程序，可以用REST API执行Rainbow可以完成的操作\nOcelot，一个xliff图形化编辑器，比较难用\n\n它还为OmegaT开发了过滤器插件，可以让OmegaT支持更多格式。\nRainbow可以将源文档转换为xliff、po等格式，翻译好后再转换回去。它也有术语抽取等其它功能。\nCheckmate需要导入双语格式的文件，比如xliff、tmx，然后可以检查标签、数字等问题。\n以上两个工具我在此文有截图的操作说明。\n下面着重讲解Tikal，因为Tikal支持命令行操作，可以较为方便地用来完成批量操作和集成到CAT软件中。\n\n\n将文档导出为xliff\n以下操作把docx文件导出为xlf文件，源语言是英文，目标语是中文\ntikal -x 321880_ms.docx -sl en -tl zh\n\n\n从xliff文件生成目标文件\ntikal -m 321880_ms.docx.xlf\n\n\n转换到其它格式\nTikal还提供转换到tmx、po、tab分割的文本等类型文件的功能。只有转换为tmx时，标签信息会得到保留，其它格式并不会保留标签信息。\n转换为TMX:\ntikal -2tmx 321880_ms.docx.xlf\n\n\n其它常用选项\n有时候需要指定过滤器Filter，可以用以下选项调用：\n-fc configId\nconfigId的值可以用以下命令列出：\n$ tikal -listconf\n...\n- okf_openxml = Microsoft Office documents (DOCX, DOCM, DOTX, DOTM, PPTX, PPTM, PPSX, PPSM, POTX, POTM, XLSX, XLSM, XLTX, XLTM, VSDX, VSDM).\n- okf_pensieve = Configuration for Pensieve translation memories.\n- okf_xliff = Configuration for XML Localisation Interchange File Format (XLIFF) documents.\n- okf_xliff-sdl = Configuration for SDL XLIFF documents. Supports SDL specific metadata\n...\n使用-ie encoding和-oe encoding可以指定输入输出时使用的编码。\n使用-seg [srxFile]可以指定srx文件对原文进行分割，这样分句会保存在xliff的seg-source标签里。\n\n\n还有一个老的工具叫Olifant，是.net写的TMX编辑器，能把tab分割的txt转换为tmx，它大部分功能都可以用rainbow和tikal来实现。\n更多内容还是见Okapi的官网：http://okapiframework.org/\n找到一篇采访Okapi开发者的文章，还挺有意思的：The Okapi Framework: Q and A with Yves Savourel of ENLASO 。\n美国翻译协会的文章：Okapi Tools: How Translators Can Take Advantage of Them", "filename": "2018-12-26-okapi-framework.md"}, {"id": 245, "text": "\ndate: 2019-01-02 20:55:50+08:00\nlayout: post\ntitle: 翻译项目统计信息使用的标准——GMX-V\ncategories: 技术随笔\ntags: CAT\n\n翻译项目的统计信息是用来衡量工作量的一个主要手段。文件的字数、词数、重复片段数、标签数等是常用的指标。\nGMX-V（Global Information Management Metrics Volume，文档）便是计算这类信息时使用的标准，它由Lisa组织制定。主要介绍了如何统计空格分割词汇的语言和汉字等其它特殊语言统计字数的方法。它还定义了用于交换生成的报告数据的格式。GMX-V还有其它两个兄弟，分别是统计复杂度的GMX-C和质量的GMX-Q，不过都没有完成。\n首先讲一下gmx-v里单元（unit）的概念，对应xliff的trans-unit，一般是一句话。\n然后，我们主要讲一下字数的统计：\n对于英语这类语言，可以简单地用空格来分割句子。下面这句有9个词，标点符号被认为是词的一部分。\n\n\nExample 1: Word Boundaries\n\nThe\n \nquick\n \n(\n\"\nbrown\n\"\n)\n \nfox\n \ncan't\n \njump\n \n32.3\n \nfeet\n,\n \nright\n?\n\n\n\n提取出来的词如下：\n\n\nExample 2: Extracted Words\n\nThe\nquick\nbrown\nfox\ncan't\njump\n32.3\nfeet\nright\n\n\n\n字数是把每个提取出来的词的字符数相加。\n而对于中文等语言，按一个字两个字符算，然后再除以一个固定的系数（factor）得到词数，中文是2.8。十个中文得到的词数是20/2.8≈7。\nGMX-V是基于XLIFF进行设计的，一般原文会有很多行内标签，比如下面这样的：\nxml\n <source>Start<bpt id=\"2\">code<sub>Text</sub></bpt>end<ept id=\"2\">code</ept>.</source>\n这时要将其转换为如下的常规形式（Canonical form）后再进行统计：\nxml\n   <source>Start<bpt><sub> Text </sub></bpt><ept>end</ept>.</source>\n标签一般应被视为透明（transparent）的，不会对原文词数产生影响。\n另外还有句子的重复情况等数据，这个的话，每个CAT软件的实现就都不一样了。\nOkapi利用GMX-V来进行词数统计、字数统计和报告生成。\n可以利用以下步骤实现：\n\nRaw Documents to Filter Event\nWord Count\nCharacter Count\nScoping Report\n\n生成的报告类似以下内容：\n\n\n\nDate:\n2019年1月2日 星期三 下午09时24分58秒 CST\n\n\nFiles:\nE:\\okapi\\新建文本文档.txt\n\n\nTotal:\n7 words\n20 characters\n\n\nExact Local Context:\n0 words\n0 characters\n\n\n100% Match:\n0 words\n0 characters\n\n\nFuzzy Match:\n0 words\n0 characters\n\n\nRepetitions:\n0 words\n0 characters\n\n\n", "filename": "2019-01-02-GMX-V.md"}, {"id": 246, "text": "\ndate: 2019-01-02 11:19:50+08:00\nlayout: post\ntitle: 国际化标签集ITS\ncategories: 技术随笔\ntags: CAT\n\n国际化标签集（International Tag Set，ITS，文档）是w3c组织制定的一套本地化XML文件的标准，可以用来定义XML文件中哪些元素是需要翻译的，哪些是不需要的。也可以根据本地化的需要，补充元素的相关信息。\n比如我们要翻译以下一个表示留言的xml文档：\n```xml\n\n\n\nGeorge\nJohn\nReminder\n    Don't forget the meeting!\n \n```\n我们希望设置收件人和寄件人的名字为不需要翻译的内容，可以增加ITS信息，变成如下的内容：\n```xml\n\n\n\n\n\n\nGeorge\nJohn\nReminder\n    Don't forget the meeting!\n \n```\nITS的规则有全局规则和本地规则两种。全局规则在its元素里定义，使用XPath或者CSS-Selector等规则选择元素。本地规则直接作为元素的属性添加即可。\nITS规则还可以用于HTML5。不过HTML5也有自己的本地化属性translate。以下是一个示例：\n```html\n\n\n\n\nTranslate flag global rules example\n\n\nThis sentence should be translated, but code names like\n      the span element should not be translated.\n      Of course there are always exceptions: certain\n      code values should be translated, e.g. to a value in\n      your language like warning.\n\n```\n标准需要具体的工具来实现，Okapi的XML和HTML Filter提供了对ITS标签的支持（wiki）。\n比如以下内容：\n```xml\n\n\n\n\n\n\n2009-03-21\nMirabelle McIntosh\nParagraph with  and bolded text.\nParagraph with data codes and text.\n\n\n```\n使用Okapi可以转换为如下的xliff文件：\n```xml\n\n\n\n\nParagraph with  and bolded text.\nParagraph with  and bolded text.\n\n\nParagraph with data codes and text.\nParagraph with data codes and text.\n\n\n\n```\nITS为本地化XML文件提供了一个很好的标准，不过目前来看，似乎没有得到广泛的应用。", "filename": "2019-01-02-international-tag-set.md"}, {"id": 247, "text": "\ndate: 2019-01-16 13:27:50+08:00\nlayout: post\ntitle: 设计学习笔记\ncategories: 笔记\ntags: \n\n看了王垠的《设计的重要性》后，我也找来了The Design of Everyday Things这本书看。\n日常生活中，我时常会注意产品的设计，比如美国的门对推还是拉设计了不同的把手。然后，我现在自己也要设计程序。怎样把程序设计得简单易用是需要思考的地方。一个好的设计让你感觉不到设计的存在，而坏的设计时时刻刻都能给你带来烦恼。\n现在把看书的过程中觉得有意思的做一个整理。\n交互的原则\n作者提出了五个术语：affordances、signifiers、constraints、mappings 以及feedback。\naffordances指产品和人之间的关系，比如一个按钮，可以被人按下。\nsignifiers指用来明确告诉用户它有什么affordances的提醒。比如移门上的说明文字：移门，不要推。\nmappings，本来是一个计算机术语，中文叫做映射。电灯开关和对应的电灯存在映射关系。\nfeedback，反馈。这个概念较为容易理解，比如我们编写的程序要执行一个任务，你需要给用户反馈，让他知道任务的进度，执行的结果（成功或是失败）。", "filename": "2019-01-16-notes-on-design.md"}, {"id": 248, "text": "\ndate: 2019-01-16 14:07:50+08:00\nlayout: post\ntitle: 字体的相关概念\ncategories: 笔记\ntags: \n\n乔布斯在他2005年的斯坦福毕业典礼演讲中提到，他从Reed College退学后，继续学习了关于字体设计的课程，并把学到的东西都用到了Mac里，给Mac带来了优美的字体设计。\n本文主要讲一下字体的相关概念，主要内容参考苹果的文档：Typographical Concepts\nCharacters 和 Glyphs\n中文中的一个汉字，英文中的一个字母，算作一个字符（character），它们可以用不同的字形（glyphs）。\n比如a，有斜体和粗体等形式：a, a。\n一个字形也有可能包含两个字符，主要是æ这样的连体字母（ligatures）。\nTypefaces 和 Fonts\nTypefaces 和 Fonts 翻译过来可能都是字体，前者表示抽象的设计，比如Times字体这种设计，而后者指字体本身。Font是指有相同字体设计、字体样式的字形（glyphs）集。斜体、粗体，这些属于字体样式（typestyle）。\n有着同样的字体设计，但字体样式不同的一组字体叫做字体族（font family）。\n思源宋体便是一个字体族，它官网的介绍中有这段描述：\n\n思源宋体支持四种不同的东亚语言（简体中文、繁体中文、日语和朝鲜语），7 种粗细类型中的每一种都有 65,535 个字形。\n\n思源宋体有7种粗细，那么它这个字体族里就包含了7种字体，不过它们的字体设计是一样的。\n字体一般有三种：衬线字体（serif）、无衬线字体（sans serif）和等宽字体(monospace)。\n衬线字体有很多的修饰，比如中文的宋体，英文的Times New Roman。无衬线字体比较平滑，没有多余的修饰，比如中文的黑体，英文的Tahoma。一般无衬线字体看起来比较不费眼，在移动设备上都是用的无衬线字体。\n等宽字体每个字符的宽度都是一样的，比如i、m，在非等宽字体中，前者的宽度要小，而等宽字体中，两者宽度一样。这种字体适合用来编程，因为编程特别注重缩进。\nText Layout\n另外还有文本的布局，每个字形的位置应该怎么处理。\n要显示大段的文字，就要考虑在哪里断行（line-breaking）的问题。\n一般字符之间的距离都是相同的，但有时候为了特殊的设计效果或者是显示更多内容，需要调整字间距（tracking），这种操作叫做kerning。\n我们小时候抄写英语单词，抄在有四道线的栏里，从上往下第三条线是基线（baseline），它决定单词“坐着”的位置。\n另外还有行间距（leading），对齐（alignment）等常见布局属性。\n在Word的段落属性或者InDesign中可以体验相关的操作。\nOkapi的一个issue中有相关的示例图片：IDML Filter: Merge tags that differ only by kerning, tracking, leading or baseline shift ", "filename": "2019-01-16-typographical-concepts.md"}, {"id": 249, "text": "\ndate: 2019-01-19 15:56:50+08:00\nlayout: post\ntitle: B4J Web开发之ABMaterial\ncategories: 技术随笔\ntags: B4X\n\nB4J支持使用WebSocket开发WebApp，利用服务器来处理一切操作。而ABMaterial是一个B4J WebApp开发框架，利用它，使用者不需要HTML、CSS和Javascript的知识，单纯用B4J就能开发出不错的网页应用。\nABMaterial集成了Materialize CSS框架，所以叫做ABMaterial，可以在Objects\\www文件夹里看到css、js、font等文件夹。我们写的Basic语句，会被用来生成HTML和CSS，并利用Websocket操作DOM以及执行从Basic转译过去的JavaScript语句。\n在此下载ABMaterial。\n使用文档：\n\n\nhttp://abmaterial.com/，这是用ABMaterial写的用作文档的WebApp。\n\n\nABMaterial For Dummies，B4X论坛的Harris网友写的新手教程。\n\n\n模板分析\n下载ABMaterial for Dummies的模板，我们对它进行分析。\n项目主要有以下文件:\n```\nABMPageTemplate.bas\nAboutPage.bas\nABMShared.bas\nTemplate.b4j\nABMApplication.bas\nABMCacheControl.bas\nABMCacheScavenger.bas\nABMErrorHandler.bas\nABMRootFilter.bas\nDBM.bas\n```\n开头五个文件是平时会修改的文件，之后几个是ABMaterial运行需要的class文件，平时不需修改。\n这个模板项目中，ABMPageTemplate.bas和AboutPage.bas是两个ABMPage的类，是用户能看到的页面，我们在这类文件里修改网页的内容。ABMShared.bas包含所有Page共享的操作，比如程序的导航栏是共享的，主题是共享的。ABMApplication类是WebApp的主体，管控其它的子页面，这里可以设置整个App的属性。而在程序的Main类里，我们平时需要做的是添加页面，Template.b4j的内容如下：\n```vb\nSub Process_Globals\n    Public srvr As Server\nEnd Sub\nSub AppStart (Args() As String)\n    ' the user needs to login\n    'ABMShared.NeedsAuthorization = True\n' Build the Theme\nABMShared.BuildTheme(\"mytheme\")\n\n' create the app\nDim myApp As ABMApplication\nmyApp.Initialize\n\n' create the pages\nDim myPage As ABMPageTemplate\nmyPage.Initialize\n\nDim about As AboutPage\nabout.Initialize\n\n' add the pages to the app\nmyApp.AddPage(myPage.Page)\nmyApp.AddPage(about.page)\n\n' start the server  - server name and port.\nmyApp.StartServer(srvr, \"srvr\", 51045)\n\n' When running on a remote server, uncomment this line below to record your log messages to a file!!!\n' Helps you debug remotely...       \n'ABMShared.RedirectOutput(File.DirApp, \"errlogs.txt\")\n\nStartMessageLoop\n\nEnd Sub\n```\n然后是ABMPage页面类的分析，它主要包含以下Sub：\n```vb\n'Initializes the object. You can add parameters to this method if needed.\nPublic Sub Initialize\n    BuildPage\nEnd Sub\npublic Sub BuildTheme()\npublic Sub BuildPage()\nPrivate Sub WebSocket_Connected (WebSocket1 As WebSocket)\nPrivate Sub WebSocket_Disconnected\npublic Sub ConnectPage()\nSub Page_ParseEvent(Params As Map)\n' clicked on the navigation bar\nSub Page_NavigationbarClicked(Action As String, Value As String)\n' this is the event that is fired when associated button is clicked... \nSub guessbtn_clicked(Target As String)\n```\n在main类里实例化页面类时，完成了页面的Build工作，在用户通过WebSocket连接后，运行ConnectPage过程，渲染页面。ABMaterial会截获客户端的javascript事件，利用Page_ParseEvent，调用对应的B4J的事件Sub。\n源代码中都有具体的注释。\n开发流程\n我们以开发一个猜数字的页面，简单介绍下开发流程。\n\n\n新建一个Server Websocket的class，把template页面的代码复制进去，并修改Name属性为页面的名字。\n\n\n使用ABMGridBuilder构建布局。ABMaterial采用Grid布局，一个行（row）的宽度被分为12等分，可以添加指定份宽度的列（column）。这里我选择以page为生成对象，生成3行，每行都只有占满12宽度的一列内容，分别存放Label、Input和Button组件。生成的布局代码如下：\nvb\nPage.AddRows(3,true,\"\").AddCells12(1,\"\")\nPage.BuildGrid ' IMPORTANT!\n\n\n在ConnectPage Sub里创建组件，并将它们添加到Page里，代码如下：\nvb\nDim lbl As ABMLabel\nlbl.Initialize(page,\"resultlbl\",\"Input a number and press the button to guess. You have 10 chances to guess.\",ABM.SIZE_PARAGRAPH,False,\"\")\npage.Cell(1,1).AddComponent(lbl)\nDim inp As ABMInput\ninp.Initialize(page,\"numinput\",ABM.INPUT_NUMBER,\"Num:\",False,\"\")\npage.Cell(2,1).AddComponent(inp)\nDim btn As ABMButton\nbtn.InitializeFlat(page,\"guessbtn\",\"\",\"\",\"Guess\",\"\")\npage.Cell(3,1).AddComponent(btn)\nABM.INPUT_NUMBER、ABM.SIZE_PARAGRAPH等都是特定组件需要用到的值，可以通过ABMaterial类调用。\n\n\n添加按钮的响应代码，实现输入的数字不等于生成的随机数时提示是大了还是小了，超过10次尝试次数就提示失败并重置，如果猜对了就获胜：\nvb\nSub guessbtn_clicked(Target As String)\n    Log(\"clicked\")\n    Dim inp As ABMInput\n    inp=page.Component(\"numinput\") '通过设置的id获得某个元素\n    If inp.Text=\"\" Then\n        myToastId = myToastId + 1\n        page.ShowToast(\"toast\" & myToastId, \"toastgreen\", \"Input a num to guess.\", 5000, False)\n        Return\n    End If\n    times=times+1\n    Dim usernum As Int\n    usernum=inp.Text\n    Dim chances As Int\n    chances=10-times\n    If usernum=num Then\n        myToastId = myToastId + 1\n        page.ShowToast(\"toast\" & myToastId, \"toastgreen\", \"You win! Game reset.\", 5000, False)\n        num=Rnd(1,100)\n        times=0\n    Else\n        If times>10 Then\n            myToastId = myToastId + 1\n            page.ShowToast(\"toast\" & myToastId, \"toastgreen\", \"You lose. The num is \"&num&\". Game reset.\", 5000, False)\n            num=Rnd(1,100)\n            times=0\n            Return\n        End If\n        If usernum>num Then\n            myToastId = myToastId + 1\n            page.ShowToast(\"toast\" & myToastId, \"toastgreen\", \"Too big. \"&chances&\" chances left.\", 5000, False)\n        Else\n            myToastId = myToastId + 1\n            page.ShowToast(\"toast\" & myToastId, \"toastgreen\", \"Too small. \"&chances&\" chances left.\", 5000, False)\n        End If\n    End If\nEnd Sub\n\n\n在Main类里添加该页面。另外还可以修改ABMShared.bas里创建导航栏的代码，添加这个猜数字页面的链接。\n通过http://127.0.0.1/template/GuessNum这样的路径访问，template是应用的名字，GuessNum是页面的名字。以下是运行的效果：\n\n\n\nABMaterial的好处在于组件丰富、功能强大，且只需用户会用B4J。但缺点在于严重依赖于服务器，如果服务器的ping值高，响应会很慢，如果断网，网页就不能运作。另外服务器要处理所有操作，负担也会比较重，不过ABMaterial的B4JS可以在客户端运行javascript，可以一定程度解决这个问题。", "filename": "2019-01-19-B4J-web-development-abmaterial.md"}, {"id": 250, "text": "\ndate: 2019-01-19 13:52:50+08:00\nlayout: post\ntitle: 计算机学习资源整理\ncategories: 笔记\ntags: \n\n现在的时代，每个人都会使用电子设备，但要用好它们，还得较深入地了解它们。不然，计算机对我们来说就是一个能完成特定任务的黑盒系统，要想定制任务或者解决遇到的故障就无从下手了。\n网上的资源很多，我这里只列出我觉得是值得一看的内容。有的是别人的资源收集帖，有的是高阶程序员的文章或者著作，大家谷歌百度能搜到的我也没必要列出来。\n资源集合\n\n\nTeach Yourself Computer Science，告诉你自学计算机科学需要学习哪些内容。\n\n\n左耳听风，左耳朵耗子在极客时间上开的专栏，里面有程序员修炼资源帖，罗列的资源较多，怎么学习某种技术都有涉及。\n\n\n博客\n\n\n阮一峰的博客，阮一峰是上财的经济学博士，现在是阿里的前端工程师，他的文章写得深入浅出，不过翻译水平我不敢恭维。\n\n\n王垠，王垠从清华计算机博士退学，是个争议人物，也是理想主义者。他对编程语言有非常深入的理解。\n比如以下几篇文章，对于编程实践有很好的指导作用。\n\n\n编程的智慧\n\n\n测试的道理\n\n\n\n\n书籍\n\n\nComputer Science Distilled，巴西人创办的Code Energy公司写的书籍，中文版《计算机科学精粹》由人民邮电出版，概要性地介绍了计算机科学的基本概念。\n\n\nEffective Programming:More Than Writing Code，StackOverFlow创始人Jeff Atwood写的书，中文版《高效能程序员的修炼》由人民邮电出版。里面很多观点在王垠的博客里也有提到，比如程序注释，只要代码写得好，通常是不需要的。\n\n", "filename": "2019-01-19-resources-of-learning-computer.md"}, {"id": 251, "text": "\ndate: 2019-01-21 16:02:50+08:00\nlayout: post\ntitle: B4J Web开发之BANano\ncategories: 技术随笔\ntags: B4X\n\nBANano是用来开发渐进式Web应用（Progressive Web App, PWA）的一个类库，和前文的ABMaterial都是由alwaysbusy创作。PWA的特点是可以离线使用，能像普通的应用一样出现在主屏，甚至安卓的应用列表里，拥有推送等本地化的功能。当然，BANano也能用来开发普通的网页。\nBANano的读法类似banana，最后的一个音是o。\n一般开发网页，需要使用HTML、CSS和Javascript。使用Bootstrap等框架，我们不用写复杂的CSS就能完成布局，而且能根据设备的尺寸调整显示的内容的尺寸，做到自动响应式布局。现在的网页一般基于div标签使用的一个网格式布局（grid layout），一个例子如下：\n```html\n\nHello, world!\n\n\nLorem ipsum dolor sit amet, consectetur adipisicing elit\n         \nSed ut perspiciatis unde omnis iste natus error sit voluptatem \n         \n\n\nSed ut perspiciatis unde omnis iste natus error sit voluptatem \n            accusantium doloremque laudantium.\n         \n\n\n\n```\n一般div依次是container、row和column。column的尺寸由col-md-6中的数字决定，一般一行分为12等份，所有colum的数字加起来是12。更多可以看bootstrap的教程。\nBANano可以把各种组件封装成B4J里的类，然后我们就可以像写B4J程序一样写网页，甚至使用B4J的界面设计器。这类似于使用jade生成html、coffeescript生成javascript。\nBANano提供的例子中对Skeleton CSS进行了封装，可以方便地使用界面设计器进行设计。它参考了之前tchart\n写的Skeleton (CSS + Library)。比如使用下面的B4J代码：\n```vb\n    Dim skc2a As SK_Column\n    Dim skc2b As SK_Column\n    Dim skc2c As SK_Column\n    skc2a.Initialize(4)\n    skc2b.Initialize(4)\n    skc2c.Initialize(4)\nskc2a.AddContent(\"Light as a feather at ~400 lines & built with mobile in mind.\")\nskc2b.AddContent(\"Styles designed to be a starting point, not a UI framework.\")\nskc2c.AddContent(\"Quick to start with zero compiling or installing necessary.\")\n\nDim row As SK_Row\nrow.Initialize\nrow.Columns.Initialize\nrow.Columns.Add(skc2a)\nrow.Columns.Add(skc2b)\nrow.Columns.Add(skc2c)\n\nDim c1 As SK_Container\nc1.Initialize\nc1.Align = \"center\"\nc1.MarginTop = 3\nc1.Padding = 1\nc1.Rows.Initialize\nc1.Rows.Add(row)\n\n```\n可以生成如下的HTML代码：\n```html\n\n\n\n\nLight as a feather at ~400 lines & built with mobile in mind.\n\n\nStyles designed to be a starting point, not a UI     framework.\n\n\nQuick to start with zero compiling or installing necessary.\n\n\n\n\n```\n上述代码描述了在一行里三等分的三个段落。不过，目前BANano偏向于使用设计器，对使用代码创建组件的设计并不完善。\nBANano还可以把Basic语言转译（transpile）为JavaScript。\n比如以下代码：\nvb\nSub test\n    Dim style As String\n    style=$\"{\"background\":\"green\"}\"$\n    BANano.GetElement(\"#sklabel1\").SetStyle(style)\nEnd Sub\n会转译为：\nthis.test= function() {\n    if (self==null) self=this;\n    var _style;\n    _style='';\n    _style = \"{\\\"background\\\":\\\"green\\\"}\";\n    u(\"#sklabel1\").css(JSON.parse(_style));\n};\n我开发了一个语音转文字的应用测试，发的帖子很快就得到了不少B4X论坛用户的点赞。可以访问这里查看。", "filename": "2019-01-21-B4J-web-development-banano.md"}, {"id": 252, "text": "\ndate: 2019-01-22 10:11:50+08:00\nlayout: post\ntitle: 如何写出好的英语文章\ncategories: 笔记\ntags: \n\n英语是一种逻辑严密的语言，写好英语文章，需要遵循一定的规矩。\n我这里梳理一下《书面英语基本功训练》中的内容。这本书是清华大学出版社出的影印版书籍，原书标题是English for Writers and Translators，作者是Robin Macpherson。翻译也是一种写作，所以看此书对翻译也有借鉴意义。\nPart One\nParagraphing 分段\n段落的存在使得文章有层次结构。段落的每句话应该都和该段的内容相关。英语的段落一般开头会有主题句（topic sentence），结尾处也会做一个总结。\nBrainstorming and Ordering Material 构思与组织内容\n这很像我们中学时考试写作文时的做法。你要想论述什么话题，怎样来提供证据，支持自己的观点。用关键词来写一个大纲。\nFirst Paragraph 第一段\n文章的第一段往往是介绍性质的，引起读者阅读兴趣的。很多著名的小说，都有非常精彩的第一段。比如《双城记》和《洛丽塔》。\n小知识：英文第一段通常是没有缩进的。\nSubstantiating the Argument 论据要充实\n一篇文章如果只是概述性地抛出一些观点，没有具体的论据，很难让人信服。我们可以在观点后面多加一些例子。\nPerserving Clarity 保持内容的清晰\n作为一个领域的专家，给业余人士解释专业知识并不是一件容易的事情。他认为很简单的东西，对于业余人士来说可能仍然很难理解。所以文章要有特定的读者，这样，我们写作的时候可以有针对性地调整专业知识的深入程度，让文章清晰易懂。\n另外，文章要有连贯性（coherent），可以用Firstly、Secondly和Thirdly这样的词来提醒读者论点的转换。文章的开头可以写一个总结（Summary），让读者了解大概的内容。\nNarrative 叙事\n叙事内容一般遵循时间顺序（chronological order），要多用表示时间转换的词。中文的评书的时间顺序就很明显。\nPart Two\nCoordination 协调\n并列结构中的子结构应该协调一致。比如统一采用动词不定式，而不是动词ing形式，还有前后主语的一致。\nLeft- and Right-Handed Sentences 多样的句型\n一段介绍人物的文本，如果全都用he/she来开头，会显得很单调。这时可以调整句子内部成分的顺序，添加状语从句，让句型富于变化。\n状语从句在主句之前，叫做Left-handed sentence，在后则叫做Right-handed sentence。\nEmphasis 强调\n有很多方式来表示强调。\n\n改变词语顺序，比如把副词放到前面。例：Slowly the tension mounted.\n使用所属格。例：The desion is yours.\n倒装。中学作文常用Under no circumstances、Only then等。\nIt is ... that ... 强调句\n\nComparison and Contrast 比较与对比\n比较两个事物的异同，可以先介绍A事物，然后介绍B事物，或者介绍A事物的一个特点的同时介绍B事物对应的特点。\nCause and Effect 因果\n原因并不是非常容易确定的，比如根据对少数样本的观察，得出作家都有抑郁症的结论，这个结论是以偏概全的。\n原因和结果还容易混淆，比如癌症患者的维生素水平低，我们不清楚癌症是维生素水平低的原因，还是维生素水平低是导致癌症的原因。\nQualification and Concession 限定与让步\n为了让我们说的话更加严谨，我们通常会加一些词来修饰，比如I think表示仅代表个人观点，perhaps表示不确定。\nDiscourse Markers 话语标志\nIn fact、What's more、Similarly、Provided等词可以用来引出新的内容，起到标志话语作用的功能。\nWord-Order 词语顺序\n词语的顺序需要遵循语法规则，比如有的形容词只能放在名词的后面。\nPunctuation 标点\n英文的标点用法和中文的有很多不同，这里仔细讲一下。\n冒号（colon）\n用于人说话时的直接引语时用逗号而不是冒号。英文的冒号可以用来引用的话或者演讲文本前面。另外冒号还用于解释说明和罗列项目。\n撇号（Apostrophe）\n注意单复数形式时撇号的位置，还有children等不规则复数形式时撇号的位置。\n撇号不能连续使用。my father's friend's son 应该作a son of my father's friend。\n逗号（comma）\n逗号有分割句子内部成分、区别直接引语和主句等作用。\n逗号还可以起一个非限定性的作用，比如以下两句：\n\nPop-star who earn fortunes should pay higher taxes.\nPop-star, who earn fortunes, should pay higher taxes.\n\n前一个句子表示赚很多钱的明星应该付更多税，后一句表示明星都能赚很多钱，他们都应该交更多税。\n破折号（Dash）\n破折号在计算机中分为em dash、en dash等好几种，具体可以见维基百科。\n这里我们按书中来，把它们都当做一种。\nDash的作用主要有以下几种\n\n非正式场合代替冒号和分号\n表示转念一想\n举例\n插入语（Parentheses）\n\n省略号（Ellipsis）\n省略号表示内容的省略或者话语的断断续续。\n连字符（Hyphen）\n连字符可以用来连接词语，比如two-year-old。在行尾，如果需要把词按音节断开，断开的位置也需要连字符。\n括号（Parenthesis）\n括号的内容用来解释说明，内容尽量简短。\n引号（Quatation Marks）\n引号里引用句子，要注意大写，不是句子就不需要大写。如果主句是问句，引号里也是问句，问号放在引号外面。引用里的引用用单引号引起来。\n分号（Semicolon）\n分号是介于逗号和句号之间的存在，它用来分割意思有紧密联系的句子，且分号后面的句子不需要首字母大写。\n一个有用的地方是用于列举事物，比如以下片段：\n\nThe contrary possesses huge oil-deposits, though yet to be fully exploited; extensive coffee plantations, albeit hampered by antiquated technology; and finally, almost unlimited resources of rain-forest.\n\nPart Three\nStyle and Register 语体与语域\n一篇文章的风格或者叫语体，需要对应其使用的语域。比如非正式文本和正式文本。\nWords of Latin Origin 拉丁语词\n英语的词源有盎格鲁撒克森和拉丁语等，来自前者的词比较简单，比如big、old，来自后者的词则往往比较复杂，比如antique。拉丁语词一般比较正式。\nForeign Borrowings 外来语的借用\n有很多其它语言的词直接进入了英语中，比如意为政变的法语coup d'etat、意为时代精神的德语词Zeigeist。使用这类词的场景一般学术性比较强。\nWords and Expressions Best Avoided 应避免使用的表达\n一些表达太过口语化，书面语中应该减少使用。比如a lot of、nice、kids。\nConfusing Words 容易弄混的词\n有很多词形相近的词，要正确进行区分和使用并不容易。比如economic和economical。相近的词还容易拼写错误，比如dependant和dependent。\nCollocations 搭配\n我们记单词时不仅要知道这个单词的发音、含义和拼写，还要知道它能和哪些词搭配。其实很多词只有在使用固定搭配时才会出现。比如beset with。\nCapital Letter 大写\n以下几种情况下需要首字母大写：\n\n表示某种头衔，比如主教Archbishop Ramsay。\n与宗教相关，比如Christian，Buddhist。\n表示地理位置和历史事件，比如the Battle of Hastings、the Middle East。\n用在标题中，除了介词、连词和冠词，都要首字母大写。\n放在句子中的问句形式内容要首字母大写。\n直接引语里的句子要首字母大写。\n\nItalics 斜体\n斜体可以表示强调，书名。\nThe Article 冠词\n冠词并不容易掌握，以下是冠词的一些属性：\n\n冠词一般都在名词的前面\n冠词是限定词的一种，如果用了my这样的限定词，就不需要再加冠词。\nThe一般表示特指，不加the或者加a/an的则是泛指。\n复数的可数名词和不可数名词视情况可以不用冠词。而单数的可数名词，通常都需要在前面添加冠词。\n\n以上只是知识点的整理，书中有更具体的表达和丰富的练习。毕竟写作光看理论是不行的，需要长时间练习才能取得进步。", "filename": "2019-01-22-notes-on-english-writing.md"}, {"id": 253, "text": "\ndate: 2019-01-31 21:36:50+08:00\nlayout: post\ntitle: B4X游戏开发\ncategories: 技术随笔\ntags: B4X\n\n最近研究了以下如何用B4X开发2D游戏。2D游戏本质其实就是不断地在屏幕上显示新的图像。图像的显示一般都要使用图形库，比如javafx。\n一个简单的记忆力对对碰游戏（若干张牌，只显示背面，点击可以显示正面。如果连续点击的两张正面相同则消除，不同则恢复为背面。），使用自带的ImageView控件就能搞定。\n\n利用B4X的XUI，可以用通用的类B4XView表示对应平台的图形组件，这样跨平台时可以共用代码。\nB4XCanvas、BitmapCreator和GameView都是用来画图的类库。Canvas简单，BitmapCreator的功能更加强大，而GameView可以使用硬件加速。GameView是安卓的类库，点进它的Tutorial页，可以知道Erel推荐开发安卓游戏用libGDX。\nHow to make games是论坛的游戏开发者写的教程，列举了游戏开发要注意的事项和可以使用的资源。\n一般2D游戏会有一个Sprite精灵的概念，相当于游戏里的一个对象，对应的代码要负责它的图像更新、动画等细节。然后一个游戏控制的代码文件，管控游戏的逻辑。图像的更新一般通过计时器来实现，还有用户输入的按键等信息，也在计时器的时间里处理。\n为了让游戏具有真实性，我们还可以引入物理引擎，这里推荐的是Box2D，Erel已经封装好，我们可以直接使用。利用Box2D进行跨平台开发的一系列类文件统一叫做XUI2D，这里可以看到示例文件：[XUI2D] Example Pack\n复杂的游戏都推荐使用XUI2D来完成。要学习XUI2D，首先的了解Box2D。我们可以先阅读它的手册，然后找几个示例来研究。\nXUI2D主要包含以下几个bas类：\nX2Utils.bas X2的主要模块，有各种方法\nX2BodyWrapper.bas   管理Box2D的物体（Body）\nX2SoundPool.bas 管理音乐文件\nX2SpriteGraphicCache.bas    缓存图片\nX2TileMap.bas   利用TileMap来生成物体\nX2DebugDraw.bas Debug用\nScoreLabel.bas  处理状态栏信息\n示例文件里项目结构按照这篇跨平台方案如下：\n\n对应平台的代码主要是一个main类，负责针对平台处理输入输出以及设计界面。共享代码部分，Game.bas是游戏的主体，然后可以有很多的Body Degelate类。\n这里再结合代码简单介绍一下Box2D，它是一个c++的物理引擎类库，变量命名方法是有一个B2的前缀，比如B2Vec2，B2World。\n使用Box2D，首先要创建一个世界（B2World），这个世界的大小是以米（meter）为单位而不是像素，所以图片导入进去是都要做一个像素到米的转换。世界有一些属性，其中重力属性是必需的。\nB4X中建立世界的代码如下：\nvb\nPublic world As B2World\nworld.Initialize(\"world\", world.CreateVec2(0, -20))\n建立好世界后我们再往里面添加物体，我们需要先使用B2BodyDef定义这个物体。Box2D的物体都是刚体（rigid body），坚硬不易变形，主要分为3类：Static、Kinematic、Dynamic。Static就是静止不动的物体，Kinematic物体可以拥有速度，而Dynamic物体除了速度，还可以添加力。此外，还要定义物体的位置、形状、大小和摩擦系数等。形状、摩擦系数等信息保存在固定装置（fixture）里，\n以下代码建立一个地面。\nvb\nPrivate Sub CreateGround\n    Dim GroundBox As B2Vec2 = X2.CreateVec2(9.6, 0.96)\n    Dim sb As X2ScaledBitmap = X2.LoadBmp(File.DirAssets, \"ground.png\", GroundBox.X, GroundBox.Y, False)\n    X2.GraphicCache.PutGraphic(\"Ground\", Array(sb))\n    Dim bd As B2BodyDef\n    bd.BodyType = bd.TYPE_STATIC 'the engine should not move it\n    bd.Position = X2.CreateVec2(X2.ScreenAABB.Center.X, X2.ScreenAABB.BottomLeft.Y + GroundBox.Y / 2)\n    Ground = X2.CreateBodyAndWrapper(bd, Null, \"Ground\")\n    Ground.GraphicName = \"ground\"\n    Dim rect As B2PolygonShape\n    rect.Initialize\n    rect.SetAsBox(GroundBox.X / 2, GroundBox.Y / 2)\n    Ground.Body.CreateFixture2(rect, 1)\n    GroundLevel = X2.ScreenAABB.BottomLeft.Y + GroundBox.Y\n    Dim edge As B2EdgeShape\n    edge.Initialize(X2.CreateVec2(-20, X2.ScreenAABB.TopRight.Y - bd.Position.Y - 0.01), _\n        X2.CreateVec2(20, X2.ScreenAABB.TopRight.Y - bd.Position.Y - 0.01))\n    Ground.Body.CreateFixture2(edge, 1)\nEnd Sub\n两个物体可以通过关节或叫连接装置（joint）连接起来。比如坦克的炮台可以转动，是通过连接装置连接起来的。以下面便是建立这个连接的代码：\nvb\nPrivate Sub CreateRevJoint\n    Dim template As X2TileObjectTemplate = TileMap.GetObjectTemplateByName(ObjectLayer, \"hinge\")\n    Dim revdef As B2RevoluteJointDef\n    revdef.Initialize(Tank.Body, Kane.Body, template.BodyDef.Position)\n    revdef.SetLimits(0, cPI * 2/3) '设置可以转动的范围\n    revdef.LimitEnabled = True\n    revdef.MaxMotorTorque = 10\n    revjoint = world.CreateJoint(revdef)\n    revjoint.MotorEnabled = True\n    Kane.Body.GravityScale = 0\nEnd Sub\n这里使用了多层地图TiledMap制作地图，通过读取对象层的对象来建立hinge这个连接装置，不用手写具体的代码。\n以上代码来自clumsy bird和tank这两个示例项目。", "filename": "2019-01-31-B4X-game-development.md"}, {"id": 254, "text": "\ndate: 2019-02-01 11:34:50+08:00\nlayout: post\ntitle: 学点经济学\ncategories: 笔记\ntags: \n\n最近薛兆丰的《经济学讲义》很畅销。他在得到平台上开设了课程，也上了《奇葩说》节目。这本书相比较传统的经济学教材，没有什么数学公式，名词定义通俗易懂，有大量的示例故事。这本书营销很成功，但内容细读会有错误和片面的地方，不过对于我来说还是可以学到很多。本书涉及的内容很多，我这里只把阅读过程中觉得重要的地方利用这篇博文记录一下。\n第一章 稀缺\n人类始终要面临一个稀缺的问题，一件商品有很多人想要，人想要的东西还会不断改变。人选择了一件东西却放弃了另一件东西，这种行为叫作歧视。歧视可能是不公平的，但有时候能够保证效率。比如海外的温州人只给温州人借贷，因为借给同乡承担的风险更低。而政府的反歧视行为可能会带来坏处，比如让银行不歧视穷人，给他们贷款，可能导致美国2008年这样的次贷危机。\n作者提出商业是最大的慈善，人们为了满足自己的需要，会主动地和其他人进行交易，而只有真正会做生意的人，才能成功，推动社会资源的有效利用。公益组织的慈善行为不像市场行为，单纯发放物资没有很好的反馈机制，分发资源的代理人可能存在执行问题，穷人无偿受到资助可能没有了进取心。\n第二章 成本\n本书中的成本指放弃了的最大代价，指所有放弃了的选项中价值最高的那个（我觉得指的就是机会成本）。比如买了一个店铺，可以用来开餐馆或者超市。开了超市就不能开餐馆，这时成本是放弃开餐馆带来的成本。而买店铺可能花了100万，如果买了，那就是沉没成本。沉没成本不是本书定义的成本。\n古董市场10元买来的碗，其实是真的古董，值10万，如果继续当做碗使用，使用成本就是10万元。而买这个碗得到的盈利是具有意外性的横财（windfall profit）。相反，如果花10万买了仅值10元的碗，用来吃饭的话成本是10元。自己蒙受了损失，英文是windfall loss。\n高中经济学强调价值决定价格的成本决定论，但不能解释为什么有的明星的演唱会价格特别高的现象。这时，用供需关系决定价格来解释就可以解释得通。\n带来收入的资源叫资产，对资产的付费叫租。北大给教授的工资，减少5000或者10000，他可能还是会选择留下来。那就是学校其实多给了这个教授工资，多给的部分便叫租。当然，只有这个教授的水平够好，他才能得到很高的租。\n一个和租相关的概念叫寻租。为了得到更高的租，人之间会有竞争。人提高自身水平提高租是好的，但是通过不正当手段竞争或者争取政府优惠政策则会导致资源的消耗。\n科斯定律从社会成本角度看问题。一个酒店扩建，遮挡了另一家酒店的露天游泳池，另一家酒店决定起诉这家酒店，如果你是法官，你会怎么判。一般人都倾向被遮挡泳池的酒店胜。但是如果这两个酒店属于一个老板呢？酒店的扩建能带来更多的收入，那游泳池就被挡住也是值得的。\n科斯定律的意思就是谁用得好，资源就归谁。停止扩建还是继续扩建遮住游泳池，都会伤害到对方，这时要从社会这个角度看怎样才能把资源利用好。钻石只有戴在美女的项上才能发挥最大的价值。\n但现实中，上面的例子中的两个酒店往往并不这样看问题，他们是两家酒店，要为了自己的利益考虑，所以会产生冲突。我们的社会是由无数人组成的，人与人之间要合作，这就会产生成本，叫作交易费用。这时，需要人们合作的时候寻找合作解，充分利用资源。\n第三章 需求\n首先讲个人估值这一概念，它是个人对一件商品进行的估值，具有主观性。客观价值论认为价格围绕价值上下波动，主观价值论则完全根据人的判断。主观价值论可以解释为什么一张老照片，对照片里的人的亲人来说价值连城，对其它人却一文不值的现象。主观价值论可以更好地指导生产，生产被人们需要的东西。\n经济学中经常出现边际这个词，它的意思是新增带来的新增。比如边际效益是人们消耗某种商品带来的效益。吃一个包子很满意，但再吃4个包子，吃到最后一个时就不想吃了。这是边际效益递减定律，每多吃一个包子新增的效益是负数。\n类似的概念还有边际成本：每新增一个单位产品所需要付出的新增成本；边际收入：每多卖一个产品带来的新增收入；边际利润：每多卖一个产品带来的新增利润。\n边际平衡就是让资源在各种用途上的边际效益达到近似相同。比如中学生要学很多门课，需要平衡学科，不能偏科。数学考95已经很不错了，就没必要再花时间考100，应该花更多时间在薄弱学科上。\n需求的三大定律。\n第一定律是其它情况不变时，价格提高，需求变少，而价格降低，则需求增多。如果价格太高了，需求曲线来到第二象限，消费者会转变为供应者，自己生产产品。\n第二定律是需求对价格的弹性和价格变化之后流失的时间长度成正比。大米这样的生活必需品受价格变动的影响小，需求的价格弹性就小。而高档汽车这样的奢侈品，价格弹性就大。\n举的例子是房产。如果买房的需求量大于供给量，处于卖方市场，买家买房的弹性小。这时，如果有房产税，他需要承担更多的房产税。\n第三定律是如果消费者必须支付一笔附加费，高品质的产品相对低品质的产品更加便宜。比如墨西哥的两种苹果，都运到中国来卖，因为有运费这一附加费，高品质的苹果能卖更多钱。用数字来说就是高品质苹果的成本是2+10元运费，低品质是1+10元运费，原来成本是两倍的关系，现在是12/11的关系。\n第四章 价格\n市场经济优于计划经济的地方在于它能利用价格充分配置资源。\n人们会自发的追求效益的最大化，损失的最小化。政府的价格管制行为常常适得其反。比如政府限制租房价格，使得房子主人不愿意出租，造成租房供应紧张，反而让穷人更难租房。\n第五章 权利\n产权除了包含所有权，还主要包含使用权、收益权和转让权。我国的土地所有权归国家，但要是承包土地的百姓想把土地转给别人种呢，于是所有权和使用权可以分离，能够单独把使用权转让给别人。\n产权保护的三个原则是财产原则、责任原则和不可转让原则。三个原则要根据具体情况进行选择。比如人体器官，我们认为是不可转让的。\n仅可以供一个人使用的商品叫私用品，比如一个苹果。大家都可以享受的叫作公用品，比如一首歌曲。公用品也可以根据情况进行收费，比如一条快速公路，一条慢速公路，平时快速公路会拥堵，收费后可以平衡两条路的车流量。\n第六章 耐心\n一款手机，有现货和期货，期货要花几个月时间等待，但是便宜一点。这时，选择现货还是期货受对该商品的不耐（impatience）程度影响，如果急着用手机，那可能就会选择多花点钱买现货。\n借了别人的钱需要支付利息，利息率就是现货和期货的比价。\n投资是时间维度上的消费。我们投资教育，然后在未来得到回报。但如果我们没有投资教育，而是把时间花在了娱乐上，那以后的日子可能就不好过了。用来对付未来不确定的产品有保险、期货等。\n第七章 供应\n有一句话叫人无我有，人有我优，人优我廉，人廉我转。企业需要根据市场需要改变自己的供应。大卫·李嘉图的比较优势原理就是每个个体把有限的资源用来生产机会成本较低的产品，再和别人交换，可以使社会产品的总价值达到最大。\n这时，需要个体之间进行分工合作。亚当·斯密认为主要有三点好处：减少工作之间往返的成本、促进熟能生巧以及是机器替代成为可能。\n理解比较优势原理后再看贸易顺差和逆差，可以知道，单纯比较两个国家间的差额是没有意义的，因为现在国际分工合作，每个国家专注于生产自己有优势的产品然后交换，每个国家都会得到利益。\n高质量的产品理应价格更高，这时就是一种不完全竞争状态，卖方是觅价者。而一个地方的农产品，质量都差不多，那就是完全竞争，农民接受价格，是受价者。\n价格歧视指卖家根据用户不同的身份、位置、购买量、购买时间等，收取不同的价格。比如高铁的一等座、二等座。\n第八章 信息不对称\n卖假货、劣质产品都是利用了信息不对称。这样，买家不确定自己能不能买到高质量的产品，就会放弃购买。优质的产品，品质是稳定的，还具有一定的性价比。\n建立互相信任，避免信息不对称的方法有重复交易和第三方背书。重复交易，比如淘宝选择一家店多次交易，发现商品值得信赖。第三方背书，就是有一个中间人进行担保。国外留学写推荐信也是一种。\n除此之外，付出沉没成本、人质和抵押都是取得信任的办法。付出沉没成本，比如银行在繁华地段买房，让人们相信它会一直开下去。\n第九章 合作\n企业是一个大的人与人之间进行合作的地方。同事是比较熟悉的人，所以彼此的交易费用比和陌生人的要小，于是人选择到企业打工而不是自己单干。当然，企业规模太大，人之间彼此就相对不熟悉，交易成本会升高。\n老板提供资源，雇员提供劳动力。其实老板是弱者，因为他的资源容易被滥用，而劳动力容易偷懒、滥用资源。\n汽车工程师和保洁员的区别是前者需要在特定的平台发挥作用，是企业的专业资源。而后者在哪家公司都可以发挥作用，对应通用资源。一般来说，专业资源的提供者更需要企业兴旺发达，他们应该具有更大的决策权。\n一个员工的议价能力取决于他在别处的机会，如果他没有地方可以跳槽了，他只有接受目前的工资。有的工作容易考核，可以根据考核结果分配工资，而不容易考核的可以给他们企业剩下的收入，他们叫做“剩余索取者”。\n收入的节奏，有时薪、月薪和年薪。像教授这样按年薪计算，就不用想着每天有贡献，可以有时间做长期计划。\n也可以按投入和产出划分收入。比如翻译，翻译了多少字数就给多少钱。而选秀比赛，第一名得的奖励多，最后一名可能啥也没有。\n市场上存在同工不同酬的现象，但是因为市场竞争，最后这种现象会趋于减少和消失。如果强制规定同工同酬，弱者可能就没有机会了。\n还有最低工资，比如白人的工资本来就高于最低工资，所以只对工资低的黑人有影响，这样雇佣黑人的企业可能因为人力成本高而难以为继。\n基尼系数反应收入差距问题，但它有不足的地方。\n\n现实中有不同收入节奏的职业和人群。收入和年龄的关系有三种，A类是公务员这样早工作、早受益、收入稳定、低风险的，B类是明星这样收入集中在中青年以前的，C类是教授、医生这样集中在中青年以后的。\n不能以瞬时收入衡量收入差距。\n收入不平均和收入不公是两回事。阶层是流动的，今天是富人可能明天就变成穷人。\n\n穷人要不断努力，不过因为社会进步，现在的穷人比从前的穷人能享受到更好地物质生活。\n第十章 协调\n这一章主要讲宏观经济。调控宏观经济的一个手段就是货币。\n商业银行通过在社会上流通钱，可以增加账面上的金额，但这个过程不能是无止境的，所以政府会规定一个法定准备金率，就是1000元存进来，只能拿出800进行放贷。因为增加的钱是账面上的，还没有成为印刷出来的现金，所以如果大家去银行挤兑，银行是取不出来这么多钱来的，这就是流动性风险。\n银行通过给存款支付利息，用贷款赚取更高的利息来赚钱的，如果经营不善，就会出现资不抵债的困难，那这家银行还是关门大吉吧。\n通货膨胀是宏观经济变化的一个表现，关于其原因有很多观点，有说是货币发行多了，有说是工资涨了。根据原因，有不同的应对通货膨胀的方法。", "filename": "2019-02-01-learn-some-economics.md"}, {"id": 255, "text": "\ndate: 2019-02-06 09:52:50+08:00\nlayout: post\ntitle: 追星\ncategories: 随笔\ntags: \n\n上次写有关明星的博客还是14年，李娜获得了澳网冠军。从小到大，我有喜欢过很多影视明星，比如看了《风云》，喜欢蒋勤勤；看了《射雕英雄传》，喜欢周迅。我记得小学时的《小学生时代》之类的书里有介绍周迅的，我便把那本书好好保存起来，然后还给那一对页喷上香水，有时候控制不住还亲上去。\n但明星还是给我们一种距离感，毕竟他们比我岁数大很多，我的人生阅历也还有限。而随着年龄的增长，我对于明星也越来越理智，看到女同学们疯狂的追星行为有点难以理解。\n而2018年的创造101节目，却给了我很强烈的真实感，让我第一次有了追星的感觉。这些女孩就像我平时生活中那些看似平凡的女孩。里面女孩们的团体生活，像极了我们平时的校园生活。\n以大学生活为例，我们要认识从五湖四海而来的朋友，一起完成学习任务。平时还会有社团活动、学院活动和班级活动。每年，学院可能还有迎新晚会，有很多有才艺的同学会报名，但也有很多基础不太好的，需要经过3个月的训练才能为同学们带来一场尽善尽美的演出。创造101里的杨超越便是基础不好的代表。\n一个集体的成员，每个人性格都不同，平时应该给予他们机会展现自己。最后成团的火箭少女中，有中性风的，有擅长说唱的，有擅长舞蹈的，有擅长搞笑的，每个人都有自己的特点。再举一个例子，我记得有一次主持人问团队的表演有什么不足，孟美岐说是有些音没唱准，这是专注于专业知识的学霸。其它人可能对专业知识没有那么敏感，关注的是团队合作。\n但以集体活动时，应该保持方向的一致。比如小组为单位创作一首歌曲，不可能融合每个人的想法。创造101里麻烦少女组便面临了这一问题。我看过的美剧Austin and Ally的第二季第13集Couples & Careers也涉及了这一话题。\n团队生活和我们校园生活的相似度吸引人，团员的个人魅力也是让人着迷。我最喜欢的还是杨超越。\n杨超越我感觉是一个很单纯、很真实，但也有点小智慧的女孩。她给了我很强的代入感。她像我本科时一个嘻嘻哈哈，但有点学渣的女孩。她也像我自己。\n我一个男人却被人评价为“很可爱”、“自带笑点”，杨超越有点孩子气的萌其实和我很像。我的确有一颗童心，单纯不掩饰，相信大人在小时候传播给我们的正能量。\n在杨超越此前CH2的直播视频里，有人说出10000元让她跳舞，她机智地回应化解了骚扰。后来有人说她不跟着那个富二代亏了，她说她还年轻，应该靠自己过上幸福的日子。这莫不是小仙女吗？很多好的品质，我们幼时拥有，长大了却丢失了。\n喜欢超越的原因很多，我就不多讲了。这里我也不从什么经济学之类的角度去分析她为什么成功。\n需要注意的是，追星容易沉迷，不能一直刷。明星往往能给我们带来正能量，但沉迷于追星，影响正常生活就不好了。只有我们自己也不断努力，我们才能跟上偶像努力的步伐，对吧？", "filename": "2019-02-06-fandom.md"}, {"id": 256, "text": "\ndate: 2019-02-14 14:04:50+08:00\nlayout: post\ntitle: 谁主张谁举证——谈网络黑子\ncategories: 随笔\ntags: \n\n在江大学法律时，老师给我们强调“谁主张谁举证”以及“无救济无权利”。后者的意思是权利受到侵犯后，只有申诉才能享受司法救济。前者的意思是当事人对自己提出的主张提供证据并加以证明，这是举证责任（burden of proof）的通俗化说法。\n网络黑子是一群喜欢贬低公众人物的人。他们往往没有认真了解贬低的对象，就跟风进行诋毁。另外还有捏造证据，以及高端黑。高端黑就是乍一眼看不出是黑，但本质是在贬低对方。我想，网络黑子也应该对自己的言论负责，没有确切的证据，不能轻易诋毁别人。\n明星受到的关注多，有大量粉丝，也有很多黑子。《创造101》里，杨超越战队的二次公演，《麻烦少女》，被认为是车祸。看评论是一片诋毁，但是没有人说到底哪里表现得不好。杨超越也说二次公演翻船了，那么到底在哪里翻了？\n我把麻烦少女的谱扒了下来，然后反复地看表演视频。\n《麻烦少女》网上有多个版本，有腾讯视频的现场版、QQ音乐版和酷狗见面会版。前两个演唱的5个人相同，而后一个版本，也就是网上流传的车祸现场版本是晋级到22强的5个选手唱的，而且是合唱。\n酷狗见面会版本我听了几遍，认为车祸的主要原因还是现场的设备问题，使得有的人的话筒没声音，有的人的话筒声音很大，盖过了别人。舞蹈和唱问题并不是很大。\n然后再看二次公演的现场和QQ音乐版本的对比，差别主要是杨超越的一句词唱错了，并且QQ音乐版本杨超越的音色更像是录音棚里出来的。\n我们作为观众，并不太可能像表演者那样熟悉自己表演的内容。所以，表演者会很清楚地知道自己哪里唱错了，而我们一时观察不出来。而且，表演即使错了，表演者也要装若无其事地继续表演下去。我为了研究《麻烦少女》到底哪里车祸了，也花了近一天时间。所以，网上随便发表的黑子的评论，我们看过算过，不必太过在意，而是要自己收集证据并做出判断。", "filename": "2019-02-14-burden-of-proof.md"}, {"id": 257, "text": "\ndate: 2019-02-14 11:14:50+08:00\nlayout: post\ntitle: 《麻烦少女》简谱\ncategories: 随笔\ntags: \n\n上次扒谱还是高中时扒的仙剑的蝶恋，这次听到《创造101》里的《麻烦少女》，觉得很好听，但是网上搜不到现成的谱子，于是就自己上了。\n我学过乐器，所以还算有点音感，听到曲调能唱出大致的音符，如果有吃不准的地方，就对着手机上的调音器软件唱并用乐器验证。手机上的调音软件还是不错的，可以显示唱的哪个音，对应多少频率。\n把音符打下来，然后就要考虑节奏等其它因素了，可以直接边打谱边验证。我们这里需要使用打谱软件，常见的有overture、musescore、作曲大师等。打简谱的话，推荐jp-word。\n我们先确定每个小节有几拍，也就是确定拍号。这个可以直接听出来，《麻烦少女》的节拍打得还是很清楚的，是4/4。然后确定每个音符的长度以及之间的停顿。\n经过不断地听和修改后，得到如下的谱子：\n\n这首歌要演唱得好，对节奏的掌握，要求还是挺高的，对于杨超越的确有难度。所以，节目里我们可以看到许诗茵拍了她肩膀两下，对应谱子里第二个哎呀后面的两个休止符。\n\n您的浏览器不支持 video 标签。\n\n再说说计算机自动扒谱。自动扒谱还是很有难度的，有一些商业软件已经实现了这一功能。Logic Pro X可以根据音乐生成midi，这样再用midi转乐谱比较简单。\n一篇文章介绍了如何使用卷积神经网络扒谱：Music Transcription with Convolutional Neural Networks。\n不过，全自动的操作不一定靠谱，大多数还是机器辅助人来进行扒谱。除了上面提到的手机调音软件，还可以利用傅里叶变换生成频谱图以供借鉴。人自己听音去扒谱，可以提高技能，同时也有很大的成就感。\n我这里扒的《麻烦少女》的主旋律，其它的什么和弦部分就没有涉及。如果是复调古典音乐，那就更加复杂了。\n下图是Praat生成的频谱图：\n\n2019/06/04更新\n最近了解了一些调音软件，比如melodyne。它可以自动根据音频识别音符，并导出midi文件。之后用musescore等打谱软件，可以转换midi为谱子。\n不过识别对音频的要求比较高，最好是清晰的主旋律。歌曲的伴奏也会被识别进去，所以最好能先提取人声。人的话自然而然就能识别伴奏和人声，但对机器则比较困难。\n\n至于识别的原理，我在网上找了一个音符频率对应表（来源），或许识别音符只需根据频率就行。不过乐器的频率比较稳定，人的哼唱就不是很稳定，经常有很多音被识别为半音。 \n```\n音符 频率/HZ 半周期/us(N) \n\n低1DO 262 1908 #1DO# 277 1805\n低2RE 294 1700 #2RE# 311 1608\n低3MI 330 1516 #3MI# 340 1470\n低4FA 349 1433 #4FA# 370 1350\n低5SO 392 1276 #5SO# 415 1205\n低6LA 440 1136 #6LA# 466 1072\n低7SI 494 1012 #7SI# 524 0954\n中1DO 523 0956 #1DO# 554 0903\n中2RE 578 0842 #2RE# 622 0804\n中3MI 659 0759 #3MI# 682 0733\n中4FA 698 0716 #4FA# 740 0676\n中5SO 784 0638 #5SO# 831 0602\n中6LA 880 0568 #6LA# 932 0536\n中7SI 988 0506 #7SI# 1046 478\n高1DO 1046 478 #1DO# 1109 451\n高2RE 1175 426 #2RE# 1245 402\n高3MI 1318 372 #3MI# 1356 368\n高4FA 1397 358 #4FA# 1480 338\n高5SO 1568 319 #5S0# 1661 292\n高6LA 1760 284 #6LA# 1865 268\n高7SI 1976 253 #7SI# 2066 242\n```", "filename": "2019-02-14-trouble-girl-transcription.md"}, {"id": 258, "text": "\ndate: 2019-02-15 20:04:50+08:00\nlayout: post\ntitle: 跳舞\ncategories: 随笔\ntags: \n\n音乐、诗歌、舞蹈都是表达感情的方法，而舞蹈可能是最富有表现力的一种形式。舞蹈动作与日常活动活动的关节和肌肉不一样，还能起到锻炼身体的作用。老百姓自发组织的广场舞可以说是兼具社交、锻炼等一系列功能。\n作为普通人，我们不必像专业人士那样舞出高难度的动作，舞出健康，舞出快乐就行了。\n《小苹果》的舞蹈配合音乐非常欢快，也较容易学习。可以参考下面这个视频学习：\n \n比较难的可能是扭胯，可以按照以下方法感受如何做到：踮起右脚，重心往右前移，然后跨用力往左后方沉。\n看到CH2女团跳《小苹果》，超越跳得很开心。\n ", "filename": "2019-02-15-dance.md"}, {"id": 259, "text": "\ndate: 2019-02-23 10:20:50+08:00\nlayout: post\ntitle: 《英语疑难详解》笔记\ncategories: 笔记\ntags: \n\n后浪出版的钱歌川的《英语疑难详解》笔记\n主要涉及一些英语语法的细节问题还有翻译时要考虑的中英文差异。后者类似本科学的中西对比翻译。\nI 名词\n\n\n无生物主语\n例句：His work made it impossible for him to get home oftener than every other weekend.\n我的翻译：因为工作的原因，他只能在隔周周末回一次家。\n英文爱用无生物主语，而中文惯用人和生物做主语，所以要进行转换。如果把例句放到偏向于直译的机器翻译，得到的译文如下：\n他的工作使他不可能比每隔一个周末回到家里。\n\n\nraise one's hand的复数问题\n一个人举手，举一只手：raise one's hand\n一个人举手，举双手：raise one's hands\n多个人举手，不管举双手还是单手：raise their hands\n钱老说这是英文的不完善的地方\n\n\n名词表动作\n你不能再迟疑了。直接翻译成英文：You cannot hesitate any more. 但更常见的是No more hesitating for you.\n\n\n属格的主格作用和宾格作用\n那囚犯的处死引起了很大非议，翻译为The prisoner's execution has caused a lot of public censure.存在歧义。不知道囚犯是执行死刑的人还是被执行的人。\n改为The execution of the prisoner has caused a lot of public censure.则没问题。\n属格的主格作用例子：\nThey hurried to their father's rescue. 他们赶紧去救父亲。\n属格的宾格作用例子：\nThanks to their father's rescue, they could return home safe. 因为父亲的援救，他们得以平安无事地回家。\n\n\n抽象名词用作普通名词\n抽象名词，比如life、hope，一般在词典里显示mass noun和uncountable。当给它们加上冠词，或变成复数使用时，则变成了普通名词。就好像面向对象编程里的抽象的类可以有很多具体的实例。\nLife is pleasure. （抽象）\nWork is a pleasure to him. （普通）\nFriendship is the feelings and behaviour that exists between friends. （抽象）\nThe two boys formed a deep and lasting friendship. （普通）\n\n\nII 代名词\n\n\n不随便改变人称\nThe \"Instructions to Freshmen\" pamphlet gives a person much good advice, but you can't hope to correct all of your habits in one term.\n这里you对应的前面的a person，应该改为he，保持前后一致。\n\n\n指代错误\nMany of our most intelligent youth are not given a chance for an education which does not improve the quality of our voting citizency.\n例句中的which应该指代前面一整句话，但这里指代的是education。可以在which前加个逗号改为非限制性定语从句。或者改成两句，后一句以Their illiteracy开头。\n\n\n明确交代所指对象\nAt the warehouse we found a suitable table, although it would be two weeks before they could deliver it to us.\n这里的they没有指代清楚。可以采用被动语句进行忽略：... before it is delivered to us，或者交代清楚，比如说是staff。\n\n\n代名词的格\n我想那是他。可以被翻译为(a)I thought that it was he. 或者(b)I thought it to be him.     \n用he还是him主要看it在主句中做什么成分。\n\n\n代名词的顺序\n我和你应该翻译为You and me而不是I and you. 因为英文的习惯用法是先说别人再说自己。\n\n\nIII 形容词、副词\n\n\n做动词的补语，形容词的最高级可以省略。\nIt is best to do so.\nThis is the best book I've ever read.\n\n\n部分否定\nBoth of them are not my brothers.\nNeither of them is my brother.\n前一句意思是他们两个不全是我的兄弟，后者表示他们都不是我的兄弟。\n\n\n两种形容词\n我们可以说This is a wooden house. 但不说This house is wooden. 但He is old. 和 He is an old man.是可以的。\n因为old既可以做限定形容词，也可以做叙述形容词。而wooden只能做限定形容词。\n不过查询语料库可以看到be wooden还是有例句的，说明这样的规则也不是绝对的。\n\n\n名词作形容词\n英语可以用名词作形容词，丰富其表达。比如泰晤士报派专人到罗马担任通讯员。英文是Rome Correspondent，而不是Roman Correspondent。后者的意思可能会被以为是罗马人通讯员。\n\n", "filename": "2019-02-23-notes-on-answers-to-questions-about-english.md"}, {"id": 260, "text": "\ndate: 2019-02-24 21:10:50+08:00\nlayout: post\ntitle: 建了一个微信公众号\ncategories: 技术随笔\ntags: \n\n通过多个渠道传播我的博文还是挺有必要的。\n公众号的名字叫语言与技术。\n尝试把博客的文章搬运过去。微信采用的一个富文本编辑器，不能用markdown，我直接打开博客的网页，然后把内容复制过去可以保持原来的样式。不过微信的图片要单独上传，而且还不能有外链，如果图片和链接较多，工作量还是有点大的。\n然后我想添加智能聊天机器人。微软小冰和腾讯闲聊都可以一键接入，前者可以根据公众号内容进行智能推荐，而后者可以定义聊天机器人画像，比如定义名字、性格什么的。\n有时间再尝试下开发者平台。", "filename": "2019-02-24-I-have-an-official-account.md"}, {"id": 261, "text": "\ndate: 2019-02-24 16:49:50+08:00\nlayout: post\ntitle: 北大CAT的他山之石\ncategories: 随笔\ntags: CAT\n\n北大的计算机辅助翻译，是北大软件与微电子学院计算机技术专业的一个小的研究方向，属于比较冷门的一个领域。专业存在建设问题，可能学生会感到迷茫。这时，我们可以看一下世界上有没有其它类似的项目供我们参考借鉴。\n蒙特雷的翻译与本地化项目\n蒙特雷的翻译与本地化管理研究生项目（Translation and Localization Management, TLM）。\n这是一个两年的项目，有分翻译、本地化和管理三个方向，主要的课程涉及计算机辅助翻译、翻译、桌面出版、行业知识、财务、营销。具体可以看课程说明\n蒙特雷位于加州，邻近硅谷，有很多的本地化公司和科技公司，专业的课程也都面向市场需求。\n因为它的专业定位和北大CAT较为相似，CAT同学在给自己的职业做规划时可以进行参考。TLM项目的负责人Max Troyer说毕业生比较适合在一开始进入一家语言服务公司，一步步晋升，之后可以选择转向营销岗位或者去甲方公司。有很多蒙特雷的学生还去了创业公司，在那些公司建立本地化部门。来源：Episode 71: Educating the Localizers of the Future\n优酷上还有一个Max介绍本地化的视频：What is localization。\n完整的TLM毕业生就业情况见此：Career Outcomes。\n一位蒙特雷的学生，朱华，建了一个网站revise4china，介绍相关本地化的知识，挺实用的。\n利莫瑞克大学的国际软件开发项目\nCisco的本地化架构师Gary Lefman，Mozilla的本地化主管Jeff Beatty都毕业于这个项目。\n该项目原名为MSc in Multilingual Computing and Localisation，现在的项目叫MSc in Software Development: International Systems。这是一个偏技术的项目，但面向文科背景的学生，毕业后可以从事软件开发、测试和本地化等工作。\n该校也有软件本地化方向的计算机科学的PhD项目，硕士项目的负责老师Tabea De Wille就是这个项目的PhD。\n官网地址：https://www.ul.ie/gps/course/software-development-international-systems-msc\n得克萨斯理工大学的技术传播项目\n我们专业大多数同学是英语专业，语言文字能力，沟通能力是强项。然后我们又是在软件学院，可以接触很多技术课程。所以我们老师觉得技术写作是很好的一个就业方向，我们专业也归在了数字艺术与技术传播系。\n得克萨斯理工大学（Texas Tech University）的技术传播方向（全名：Technical Communication & Rhetoric），涵盖本科、硕士和博士学位的课程，而且提供远程教育学位。\n官网地址：https://www.depts.ttu.edu/english/tcr/\n学生会学习各种理论以及技术，包括信息设计、可用性、网页设计等内容，项目结束后，学生可以利用所学理论进行技术文档的创作，根据受众分析和设计文档，把艰深的技术内容以一种易懂的方式提供给读者。\n以上内容其实也都是CAT专业所学的，不过我一直认为只有对技术有足够的了解，才能做好技术文档写作的事情。而且目前市场上，软件文档主要都是程序员自己来写，所以就业情况似乎也不容乐观。当然，沟通不仅是写软件文档，公司内部的人际沟通等等都是可以由技术传播者来完成的。\n需不需要读技术传播的学位项目，可以看这篇博客：https://idratherbewriting.com/2019/03/13/should-you-enroll-in-tech-comm-program/\n其它学校的相关专业等我以后挖掘。", "filename": "2019-02-24-reference-for-CAT-major.md"}, {"id": 262, "text": "\ndate: 2019-03-01 17:13:50+08:00\nlayout: post\ntitle: memoQ的产品经理介绍如何本地化iOS应用\ncategories: 技术随笔\ntags: CAT\n\nmemoQ的产品经理写了一个介绍本地化iOS应用的系列文章，Localizing an iOS drawing app with memoQ, one cliffhanger at a time。\n主要分为以下步骤：\n\n\n建立一个基于正则的文本过滤器(Regex Text Filter)，解析含有类似以下内容的语言资源文件：\n```\n  / Distribute Horizontally /\n  \"Distribute Horizontally\" = \"Distribute Horizontally\";\n/ Distribute Vertically /\n  \"Distribute Vertically\" = \"Distribute Vertically\";\n/ Download Problem /\n  \"Download Problem\" = \"Download Problem\";\n/ Downloading “%@” /\n  \"Downloading “%@”\" = \"Downloading “%@”\";\n```\n\n\n将占位符解析为标签。\n有的文本中存在占位符，程序运行时会将它们替换为对应的数据，比如以下这样的：\nDownloading “%@”\nDelete %d Drawings\n这类占位符很容易翻译错误，而且会影响字数统计。这时可以把它们当做标签处理，相当于把这些内容当做非译元素进行处理。设置后的结果如下：\n\n\n\n使用伪翻译验证能否正常生成文件。\n伪翻译（pseudo-translation）能用目标语言文字按一定的原文译文比填充译文，我们可以用它来检查是否能生成正确的文件。\n我们也可以选择用机器翻译进行填充，但是调用需要时间和费用。\n\n\n用TransPDF转换PDF为XLIFF。\n这里，作者还想把软件的英文和匈牙利文的PDF文档做一个对齐操作，可以作为翻译记忆进行调用。首先使用了TransPDF的转换功能。\n\n\n使用LiveDocs功能进行对齐。\n作者首先过滤了如页码这样不需要的信息，然后，使用LiveDocs对之前用TransPDF提取的两个XLIFF文件进行对齐。这样直接自动对齐的结果有偏差，但基本上偏差只有几个片段的距离，正确对齐的还是占很大的部分。一个实际的用途是在检索时能够看到原文的词对应译文中的哪个词。\n\n\n\n以上工作准备好后，剩下的就是翻译了。\n以上是作者收到语言资源文件后用memoQ进行的操作。关于导出XLIFF来本地化iOS/macOS的应用，可以见我另一篇文章：iOS/macOS应用的本地化。", "filename": "2019-03-01-localize-an-iOS-app-under-the-guidance-of-memoq-product-manager.md"}, {"id": 263, "text": "\ndate: 2019-03-02 20:40:50+08:00\nlayout: post\ntitle: 软件工程\ncategories: 技术随笔\ntags: \n\n我们学习计算机编程可能会做这些事情：\n\n用Java写一个基于面向对象设计模式的程序。这是在学习语言和面向对象。\n用递归的方法求斐波那契数列，这是学的算法。\n写一个学生成绩登录系统，但没有大规模的测试和应用。\n\n这类任务缺少复杂性和易变性，并不能算是软件工程任务。简单的任务可以直接开始编码，而复杂的系统需要按照一定的方法和流程才能设计好。软件工程涉及软件需求分析、软件设计、构建、测试和维护等领域，涉及计算机科学、管理学、数学、工业涉及等多个学科。\nBasicCAT是我个人开发的一款应用，代码量已经达到20000行，在实践过程中我也自觉地运用了一些软件工程的知识。现在通过阅读邹欣的《构建之法》进行了更详细的了解。\n这本书没有涉及太多代码，偏于理论，用于了解软件开发模式、敏捷开发、团队沟通、质量管理之类还算够用，更多还是得实践出真知啊。", "filename": "2019-03-02-software-engineering.md"}, {"id": 264, "text": "\ndate: 2019-03-03 18:45:50+08:00\nlayout: post\ntitle: CAT工具收集\ncategories: 技术随笔\ntags: CAT\n\n收集常见计算机辅助翻译工具，持续更新。\n国外：\n| 名称                           | 网址                                                    | 简介       |\n| ---------------------------- | ----------------------------------------------------- | -------- |\n| SDL                          | https://www.sdl-china.cn/cn/                        |          |\n| Dejavu                       | https://www.atril.com/                              |          |\n| memoQ                        | https://www.memoq.com/                              |          |\n| Wordfast                     | https://www.wordfast.net/                           |          |\n| Swordfish                    | https://www.maxprograms.com/products/swordfish.html |          |\n| Felix-cat                    | http://felix-cat.com/                               | 开源       |\n| OmegaT                       | https://www.omegat.org/                             | 开源       |\n| wordfast anyhwere            | https://freetm.com/                                 | 在线       |\n| Memsource                    | https://www.memsource.com/                          | 在线       |\n| MateCAT                      | https://www.matecat.com/                            | 在线       |\n| SmartCAT                     | https://www.smartcat.ai/                            | 在线       |\n| crowdin                      | https://crowdin.com/                                | 众包平台     |\n| transifex                    | https://www.transifex.com/                          | 众包平台     |\n| Pootle                       | https://pootle.translatehouse.org/                  | 在线本地化；开源 |\n| Weblate                      | https://weblate.org/zh-hans/                        | 在线本地化；开源 |\n国内：\n| 名称        | 网址                                            | 简介              |\n| --------- | --------------------------------------------- | --------------- |\n| BasicCAT                     | https://www.basiccat.org/                           | 开源       |\n| Heartsome Translation Studio | https://github.com/heartsome/translationstudio8     | 开源       |\n| 雪人CAT     | http://www.gcys.cn/                         |                 |\n| Transmate | http://www.uedrive.com/products/standalone/ |                 |\n| 译马网       | http://www.jeemaa.com/                      | 在线              |\n| 云译客       | http://pe.iol8.com/                         | 在线              |\n| YiCAT     | https://www.tmxmall.com/yicat               | tmxmall开发的在线CAT |\n| YeeKit    | https://www.yeekit.com/                     | 中译语通开发的在线CAT    |\n| Termsoup    | https://termsoup.com/                     | 台湾人基于rails制作的在线CAT，主要适用于图书翻译    |", "filename": "2019-03-03-collection-of-CAT-tools.md"}, {"id": 265, "text": "\ndate: 2019-03-06 10:41:50+08:00\nlayout: post\ntitle: 翻译中使用的正则表达式\ncategories: 技术随笔\ntags: CAT\n\n整理翻译过程中用到的正则表达式。\n处理用pandoc转换而来的markdown\n用途：把这个网页转换为markdown文件供BasicCAT翻译。\n处理以下内容：\n```\n[activation]{#0010}\n\nA short communication between an installed program and the\nmanufacturer’s website. The program sends your serial number and a few\nanonymous details about your computer. The website checks that you own a\nlicense or that you are just starting a free trial, and returns a code\nto authorize the program to run on your computer.\nSee also: CAL license\n```\n\n\n去掉开头和结尾都是-的行，使用以下表达式进行匹配\n^-+$\n\n\nMarkdown的段落需要用两个换行进行区分，段落可以是一行或多行文字。用pandoc转换后的markdown，段落里有多行文字。而我打算用BasicCAT以txt形式打开markdown文件，所以得把段落中的换行替换掉，这个操作英文叫做reflow。\n\n\n把连续的换行符换成一个标记\n(\\r\\n){2,}，替换为“段落标记”\n\n\n去掉所有换行符为空格。markdown中段落里的换行相当于空格，不替换单词间会缺少空格\n\n\n把“段落标记”替换回两个换行\n\n\n\n\n去掉锚点，把[activation]{#0010}改为### activation\n\\[(.*?)\\]\\{#\\d+\\}，替换为### \\1\n\n\n去掉链接，把[CAL license](#0140)改为CAL license\n\\[(.*?)\\](#\\d+)，替换为\\1\n\n\n结果：\n```\nactivation\nA short communication between an installed program and the manufacturer's website. The program sends your serial number and a few anonymous details about your computer. The website checks that you own a license or that you are just starting a free trial, and returns a code to authorize the program to run on your computer.\nSee also: CAL license\n```", "filename": "2019-03-06-regular-expressions-used-in-translation.md"}, {"id": 266, "text": "\ndate: 2019-03-09 18:41:50+08:00\nlayout: post\ntitle: Elasticsearch\ncategories: 技术随笔\ntags: \n\nElasticsearch是一个分布式的搜索引擎，可以检索全文并进行分析。其实和mongodb很像，不过Elasticsearch把文件存在Lucene index文件里，而mongodb存在bson里，另外es的文本功能也更丰富。\n我之所以要用Elasticsearch是因为公司过去十几年的翻译文件只是以文件的形式存在硬盘里，没有能够好好地利用起来，如果能用搜索引擎对所有文件进行全文检索那就可以提高利用程度。\n了解Elasticsearch可以访问官网的教程：https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html。\nElasticsearch是用java写的，以rest api或者java api对外提供接口。可以通过http://127.0.0.1:9200访问。\nTable of Contents\n\n相关概念\n基础操作\n添加三个文档到叫做twitter的索引\n列出所有索引\n查看某个索引\n检索\n更新\n删除\n检查健康状况\n更复杂的操作\nHighlight 高亮\naggregations 聚合\n使用中文分词\n其它\n产品栈\n\n相关概念\n\nNear Realtime（近乎实时），从检索文件到可以被搜索到只需要很短的时间\nNode and Cluster（节点和集群），node就是在一台电脑上运行的实例，一组node构成一个cluster\nIndex（索引），Index就是一堆文件的集合，这类文件应该有相似的结构，比如都具有某个属性\nType（类型），Index下还可以细分成几个type，但是Elasticsearch6开始只能有一个type，而7.0后就将弃用。\nDocument（文档），信息的基本单元，用json格式来进行描述\nShards（分片），如果要index存储的数据很多，那么磁盘空间可能不够，而且读写性能会有问题。通过拆分index为一个个shards，可以解决这一问题。\nReplica是shard的备份，规避节点出现故障的风险\n\n基础操作\n添加三个文档到叫做twitter的索引\n```\ncurl -XPUT 'http://localhost:9200/twitter/_doc/1?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"user\": \"kimchy\",\n    \"post_date\": \"2009-11-15T13:12:00\",\n    \"message\": \"Trying out Elasticsearch, so far so good?\"\n}'\ncurl -XPUT 'http://localhost:9200/twitter/_doc/2?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"user\": \"kimchy\",\n    \"post_date\": \"2009-11-15T14:12:12\",\n    \"message\": \"Another tweet, will it be indexed?\"\n}'\ncurl -XPUT 'http://localhost:9200/twitter/_doc/3?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"user\": \"elastic\",\n    \"post_date\": \"2010-01-15T01:46:38\",\n    \"message\": \"Building the site, should be kewl\"\n}'\n```\n列出所有索引\n$ curl -X GET \"localhost:9200/_cat/indices?v\"\n结果：\nhealth status index   uuid                   pri rep docs.count docs.deleted store.size pri.store.size\nyellow open   twitter FLSTkYHXRIqIQajFzNnVDQ   5   1          3            0       14kb           14kb\n查看某个索引\n$ curl -XGET 'http://localhost:9200/twitter/_doc/1?pretty=true'\n结果：\n```json\n{\n  \"_index\" : \"twitter\",\n  \"_type\" : \"_doc\",\n  \"_id\" : \"1\",\n  \"_version\" : 1,\n  \"_seq_no\" : 0,\n  \"_primary_term\" : 1,\n  \"found\" : true,\n  \"_source\" : {\n    \"user\" : \"kimchy\",\n    \"post_date\" : \"2009-11-15T13:12:00\",\n    \"message\" : \"Trying out Elasticsearch, so far so good?\"\n  }\n}\n```\n检索\n有两种办法。\n使用URL：\ncurl -XGET 'http://localhost:9200/twitter/_search?q=user:kimchy&pretty=true'\n或者使用Elasticsearch的基于json的查询语言：\ncurl -XGET 'http://localhost:9200/twitter/_search?pretty=true' -H 'Content-Type: application/json' -d '\n{\n    \"query\" : {\n        \"match\" : { \"user\": \"kimchy\" }\n    }\n}'\n结果：\njson\n{\n  \"took\" : 20,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 2,\n    \"max_score\" : 0.6931472,\n    \"hits\" : [\n      {\n        \"_index\" : \"twitter\",\n        \"_type\" : \"_doc\",\n        \"_id\" : \"2\",\n        \"_score\" : 0.6931472,\n        \"_source\" : {\n          \"user\" : \"kimchy\",\n          \"post_date\" : \"2009-11-15T14:12:12\",\n          \"message\" : \"Another tweet, will it be indexed?\"\n        }\n      },\n      {\n        \"_index\" : \"twitter\",\n        \"_type\" : \"_doc\",\n        \"_id\" : \"1\",\n        \"_score\" : 0.2876821,\n        \"_source\" : {\n          \"user\" : \"kimchy\",\n          \"post_date\" : \"2009-11-15T13:12:00\",\n          \"message\" : \"Trying out Elasticsearch, so far so good?\"\n        }\n      }\n    ]\n  }\n}\n可以使用size可以指定检索返回几条结果，使用from指定从第几条开始返回结果。\n$ curl -X GET \"localhost:9200/_search\" -H 'Content-Type: application/json' -d'\n{\n    \"from\" : 0, \"size\" : 1,\n    \"query\" : {\n        \"term\" : { \"user\" : \"kimchy\" }\n    }\n}\n'\n更新\n$ curl -X POST \"localhost:9200/twitter/_doc/1/_update?pretty\" -H 'Content-Type: application/json' -d'\n{\n  \"doc\": { \"user\": \"Jane Doe\" }\n}\n'\n删除\n$ curl -X DELETE \"localhost:9200/twitter/_doc/2?pretty\"\n检查健康状况\n$ curl -X GET \"localhost:9200/_cat/health?v\"\n结果：\nepoch      timestamp cluster       status node.total node.data shards pri relo i                    nit unassign pending_tasks max_task_wait_time active_shards_percent\n1552132035 11:47:15  elasticsearch yellow          1         1     15  15    0                        0       15             0                  -                 50.0%\n更复杂的操作\nHighlight 高亮\n检索之前存储的文档的message内容，并高亮匹配的内容。\ncurl -X GET \"localhost:9200/_search?pretty=true\" -H 'Content-Type: application/json' -d'\n{\n    \"query\" : {\n        \"match\": { \"message\": \"tweet\" }\n    },\n    \"highlight\" : {\n        \"fields\" : {\n            \"message\" : {}\n        }\n    }\n}\n'\n结果：\njson\n{\n  \"took\" : 4,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 15,\n    \"successful\" : 15,\n    \"skipped\" : 0,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 1,\n    \"max_score\" : 0.6931472,\n    \"hits\" : [\n      {\n        \"_index\" : \"twitter\",\n        \"_type\" : \"_doc\",\n        \"_id\" : \"2\",\n        \"_score\" : 0.6931472,\n        \"_source\" : {\n          \"user\" : \"kimchy\",\n          \"post_date\" : \"2009-11-15T14:12:12\",\n          \"message\" : \"Another tweet, will it be indexed?\"\n        },\n        \"highlight\" : {\n          \"message\" : [\n            \"Another <em>tweet</em>, will it be indexed?\"\n          ]\n        }\n      }\n    ]\n  }\n}\n如果不想显示_source里的内容，可以在表达式里加上_source，变成以下这样的：\ncurl -X GET \"localhost:9200/_search?pretty=true\" -H 'Content-Type: application/json' -d'\n{\n    \"query\" : {\n        \"match\": { \"message\": \"tweet\" }\n    },\n    \"_source\":\"\", \n    \"highlight\" : {\n        \"fields\" : {\n            \"message\" : {}\n        }\n    }\n}\n'\n结果：\njson\n{\n  \"took\" : 13,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 15,\n    \"successful\" : 15,\n    \"skipped\" : 0,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 1,\n    \"max_score\" : 0.2876821,\n    \"hits\" : [\n      {\n        \"_index\" : \"twitter\",\n        \"_type\" : \"_doc\",\n        \"_id\" : \"2\",\n        \"_score\" : 0.2876821,\n        \"_source\" : { },\n        \"highlight\" : {\n          \"message\" : [\n            \"Another <em>tweet</em>, will it be indexed?\"\n          ]\n        }\n      }\n    ]\n  }\n}\naggregations 聚合\n类似于SQL中的GROUP BY，可以对数据进行分析然后分组。\n用法：\ncurl -X GET \"localhost:9200/twitter/_search?pretty=true\" -H 'Content-Type: application/json' -d'\n{\n    \"aggs\" : {\n        \"usernames\" : {\n            \"terms\" : { \"field\" : \"user.keyword\" }\n        }\n    }\n}\n'\n其中usernames可以自己定义，我们这里使用的term aggregation，根据字段进行分组。\n除了检索结果，可以看到还多了aggregations这一部分。其中buckets是符合检索条件的文档的集合，里面会包含一些统计信息。\njson\n{\n  \"took\" : 7,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 3,\n    \"max_score\" : 1.0,\n    \"hits\" : [\n      {\n        \"_index\" : \"twitter\",\n        \"_type\" : \"_doc\",\n        \"_id\" : \"2\",\n        \"_score\" : 1.0,\n        \"_source\" : {\n          \"user\" : \"kimchy\",\n          \"post_date\" : \"2009-11-15T14:12:12\",\n          \"message\" : \"Another tweet, will it be indexed?\"\n        }\n      },\n      {\n        \"_index\" : \"twitter\",\n        \"_type\" : \"_doc\",\n        \"_id\" : \"1\",\n        \"_score\" : 1.0,\n        \"_source\" : {\n          \"user\" : \"kimchy\",\n          \"post_date\" : \"2009-11-15T13:12:00\",\n          \"message\" : \"Trying out Elasticsearch, so far so good?\"\n        }\n      },\n      {\n        \"_index\" : \"twitter\",\n        \"_type\" : \"_doc\",\n        \"_id\" : \"3\",\n        \"_score\" : 1.0,\n        \"_source\" : {\n          \"user\" : \"elastic\",\n          \"post_date\" : \"2010-01-15T01:46:38\",\n          \"message\" : \"Building the site, should be kewl\"\n        }\n      }\n    ]\n  },\n  \"aggregations\" : {\n    \"usernames\" : {\n      \"doc_count_error_upper_bound\" : 0,\n      \"sum_other_doc_count\" : 0,\n      \"buckets\" : [\n        {\n          \"key\" : \"kimchy\",\n          \"doc_count\" : 2\n        },\n        {\n          \"key\" : \"elastic\",\n          \"doc_count\" : 1\n        }\n      ]\n    }\n  }\n}\n把size设置为0，这样就不会显示hits内容：\ncurl -X GET \"localhost:9200/twitter/_search?pretty=true\" -H 'Content-Type: application/json' -d'\n{\n    \"size\":0, \n    \"aggs\" : {\n        \"usernames\" : {\n            \"terms\" : { \"field\" : \"user.keyword\" }\n        }\n    }\n}\n'\n结果：\njson\n{\n  \"took\" : 41,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 3,\n    \"max_score\" : 0.0,\n    \"hits\" : [ ]\n  },\n  \"aggregations\" : {\n    \"usernames\" : {\n      \"doc_count_error_upper_bound\" : 0,\n      \"sum_other_doc_count\" : 0,\n      \"buckets\" : [\n        {\n          \"key\" : \"kimchy\",\n          \"doc_count\" : 2\n        },\n        {\n          \"key\" : \"elastic\",\n          \"doc_count\" : 1\n        }\n      ]\n    }\n  }\n}\n使用中文分词\nelasticsearch在检索中文时会把检索词拆分成一个个单字然后进行匹配。比如以下这样的：\n检索：\n$ curl -X GET \"localhost:9200/_search?pretty=true\" -H 'Content-Type: application/json' -d'\n{\n    \"query\" : {\n        \"match\": { \"message\": \"名字张三\" }\n    },\n    \"highlight\" : {\n        \"fields\" : {\n            \"message\" : {}\n        }\n    }\n}\n'\n结果：\njson\n{\n  \"took\" : 140,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 15,\n    \"successful\" : 15,\n    \"skipped\" : 0,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 1,\n    \"max_score\" : 1.1507283,\n    \"hits\" : [\n      {\n        \"_index\" : \"twitter\",\n        \"_type\" : \"_doc\",\n        \"_id\" : \"5\",\n        \"_score\" : 1.1507283,\n        \"_source\" : {\n          \"user\" : \"kimchy\",\n          \"post_date\" : \"2009-11-15T13:12:00\",\n          \"message\" : \"我是中华人民共和国的成员，我的名字叫张三。\"\n        },\n        \"highlight\" : {\n          \"message\" : [\n            \"我是中华人民共和国的成员，我的<em>名</em><em>字</em>叫<em>张</em><em>三</em>。\"\n          ]\n        }\n      }\n    ]\n  }\n}\n我们可以使用ik插件来进行分词。\n在此https://github.com/medcl/elasticsearch-analysis-ik下载和安装ik插件，然后重启elasticsearch。\n重新建立一个索引：\n$ curl -XPUT http://localhost:9200/twitter\n设置索引里的文档的mapping，使用ik进行分析：\n```\ncurl -XPOST http://localhost:9200/twitter/_doc/_mapping -H 'Content-Type:application/json' -d'\n{\n        \"properties\": {\n            \"message\": {\n                \"type\": \"text\",\n                \"analyzer\": \"ik_max_word\",\n                \"search_analyzer\": \"ik_max_word\"\n            }\n        }\n}'\n```\n添加一条带中文的记录：\n$ curl -XPUT 'http://localhost:9200/twitter/_doc/5?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"user\": \"kimchy\",\n    \"post_date\": \"2009-11-15T13:12:00\",\n    \"message\": \"我是中华人民共和国的成员，我的名字叫张三。\"\n}'\n检索结果：\njson\n{\n  \"took\" : 10,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 15,\n    \"successful\" : 15,\n    \"skipped\" : 0,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 1,\n    \"max_score\" : 0.8630463,\n    \"hits\" : [\n      {\n        \"_index\" : \"twitter\",\n        \"_type\" : \"_doc\",\n        \"_id\" : \"5\",\n        \"_score\" : 0.8630463,\n        \"_source\" : {\n          \"user\" : \"kimchy\",\n          \"post_date\" : \"2009-11-15T13:12:00\",\n          \"message\" : \"我是中华人民共和国的成员，我的名字叫张三。\"\n        },\n        \"highlight\" : {\n          \"message\" : [\n            \"我是中华人民共和国的成员，我的<em>名字</em>叫<em>张三</em>。\"\n          ]\n        }\n      }\n    ]\n  }\n}\n这里我们修改的mapping是用来定义字段的属性的，添加文档时会进行自动生成，并且不推荐再进行更改。我们要修改的话就得重新索引。\n查看修改后的mapping：\n$ curl -XGET 'http://localhost:9200/twitter/_mapping?pretty=true'\n{\n  \"twitter\" : {\n    \"mappings\" : {\n      \"_doc\" : {\n        \"properties\" : {\n          \"message\" : {\n            \"type\" : \"text\",\n            \"analyzer\" : \"ik_max_word\"\n          },\n          \"post_date\" : {\n            \"type\" : \"date\"\n          },\n          \"user\" : {\n            \"type\" : \"text\",\n            \"fields\" : {\n              \"keyword\" : {\n                \"type\" : \"keyword\",\n                \"ignore_above\" : 256\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n其它\n如果硬盘空间占用过高（高于95%，说明见此），elasticsearch会切换为只读状态，会提示以下错误：\njson\n{\n  \"error\" : {\n    \"root_cause\" : [\n      {\n        \"type\" : \"cluster_block_exception\",\n        \"reason\" : \"blocked by: [FORBIDDEN/12/index read-only / allow delete (api)];\"\n      }\n    ],\n    \"type\" : \"cluster_block_exception\",\n    \"reason\" : \"blocked by: [FORBIDDEN/12/index read-only / allow delete (api)];\"\n  },\n  \"status\" : 403\n}\n这时可以通过以下操作进行解除：\ncurl -XPUT -H \"Content-Type: application/json\" http://localhost:9200/_all/_settings -d '{\"index.blocks.read_only_allow_delete\": null}'\n产品栈\n除了Elasticsearch，elastic公司还开发了一系列相关产品：\n\nKibana，前端控制台，可以管理和可视化数据\nLogstash，可以对日志文件进行收集和处理并传到elasticsearch里\nBeats，从服务端收集日志、网络、监控数据的代理程序\nElastic Cloud，一站式SaaS订阅服务\n", "filename": "2019-03-09-elasticsearch.md"}, {"id": 267, "text": "\ndate: 2019-03-13 18:27:50+08:00\nlayout: post\ntitle: 基于Elasticsearch构建翻译资源检索系统\ncategories: 技术随笔\ntags: CAT B4X Elasticsearch\n\n翻译部门常常会有一堆存在硬盘上的过往的翻译资源以及不断产生的新的资源，可以利用Elasticsearch构建一个全文搜索引擎进行管理。\n索引\n这些资源文件一般会以文件夹进行管理，结构依次是分类-项目名-文件。\n其中文件有源文档和目标文档。比较结构化的一种文件整理法是源文档放在source文件夹，目标文档放在target文件夹，然后源文档和目标文档的名字一样。使用CAT软件后还可以有句对齐的翻译记忆，这里先不考虑。\n我们可以在Elasticsearch中建一个documents索引，然后保存的文档按以下内容组织：\n\"_source\" : {\n          \"filename\" : \"Apple just dismissed more than 200 employees from Project Titan.txt\",\n          \"project\" : \"163\",\n          \"sourceOrTarget\" : \"target\",\n          \"text\" : \"苹果自动驾驶项目Project Titan裁员逾200人\",\n          \"category\" : \"AI\",\n          \"title\" : \"Apple just dismissed more than 200 employees from Project Titan\"\n}\n添加中文支持\n默认的分词器会把中文分成单字，没有词语。通过添加analysis-ik可以对中文进行分词。\n这样检索时可以按词语进行检索，匹配效果更好。\n设置mapping时一般对全文使用ik_max_word分析，对搜索的关键词进行ik_smart分析。前者分词的粒度更细，供检索的词就越多。而后者用于关键词，可以保证检索结果和关键词更加匹配。\n不过有一个问题就是无法检索单字，因为默认没有对单字进行索引。我们需要修改ik默认的配置文件添加单字词典。配置文件是在plugins\\ik\\config目录的IKAnalyzer.cfg.xml文件，可以看到目录里还有extra_single_word.dic这个单字词典，默认没有使用。我选择先添加这个词典。\n保存后的配置文件如下：\n```xml\n\n\n\nIK Analyzer 扩展配置\n\nextra_single_word.dic \n\n\n\n\n\n\n\n```\n多字段检索\n多字段检索可以使用multi_match，相当于使用should的bool。\n我这里统一使用bool。比如我要检索的内容必须符合某个分类以及是原文还是译文，在title或者text中有匹配就行。可以写出以下的表达式：\njson\n{\"bool\":\n    {\"must\":\n        [\n            {\"match\" : {\"category\" : \"分类\"}}, \n            {\"match\" : {\"sourceOrTarget\" : \"target\"\"}},\n            {\"bool\" : {\n                \"should\" : [\n                    {\"match\" : { \"title\" : \"apple\"}},\n                    {\"match\" : { \"text\" : \"apple\"}}\n                    ]\n                    }\n                  }\n        ]\n    }\n}\n通配符与模糊匹配\n要检索包含227的内容，可以输入*227*来检索，*表示匹配多个字符，?表示匹配单个字符。\ncurl -X GET \"localhost:9200/_search\" -H 'Content-Type: application/json' -d'\n{\n    \"query\" : {\n        \"wildcard\":{\"text\":\"*227*\"}\n    }\n}'\n模糊匹配是使用了编辑距离，编辑距离如果小于某个值就算是命中。比如检索excite，可以检索到编辑距离为2的excited，或者是拼写错误，are输成了aer，也可以显示正确的结果。\ncurl -X GET \"localhost:9200/_search\" -H 'Content-Type: application/json' -d'\n{\n    \"query\" : {\n        \"fuzzy\":{\"text\":\"excite\"}\n    }\n}'\n以上两个主要是把默认的match换成wildcard和fuzzy。另外还支持正则，regexp。\n获得分类列表\n可以使用aggregation来获得某个字段的值的列表。\ncurl -X GET \"localhost:9200/_search\" -H 'Content-Type: application/json' -d'\n{\n    \"size\" : 0 ,\n    \"aggs\" : {\n        \"categories\" : {\n            \"terms\" : { \"field\" : \"category.keyword\" }\n        }\n    }\n}'\njson\n{\n  \"took\" : 38,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 16,\n    \"successful\" : 16,\n    \"skipped\" : 0,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 27,\n    \"max_score\" : 0.0,\n    \"hits\" : [ ]\n  },\n  \"aggregations\" : {\n    \"categories\" : {\n      \"doc_count_error_upper_bound\" : 0,\n      \"sum_other_doc_count\" : 0,\n      \"buckets\" : [\n        {\n          \"key\" : \"童书\",\n          \"doc_count\" : 12\n        },\n        {\n          \"key\" : \"默认分类\",\n          \"doc_count\" : 4\n        },\n        {\n          \"key\" : \"pdf\",\n          \"doc_count\" : 2\n        }\n      ]\n    }\n  }\n}\n具体实现\n使用B4J做后端，BANano写前端。\n后端\n后端与elasticsearch进行交互。每个一段时间会检查翻译文档目录。通过建立meta索引保存之前索引的文件修改的时间，可以知道哪些文件有更新，有更新而且源文档和目标文档同时存在就进行索引。如果文档不是txt格式，就利用okapi tikal转换为xliff，然后再提取纯文本的内容。\n对外提供检索接口。\n前端\n前端调用后端接口，提供一个完整的搜索引擎的功能。使用BANano开发，前后端可以分离。\n主要做好结果展示、分页，检索选项等内容。", "filename": "2019-03-13-build-a-translation-resource-management-system-based-on-elasticsearch.md"}, {"id": 268, "text": "\ndate: 2019-03-24 16:41:50+08:00\nlayout: post\ntitle: CAT术语大全\ncategories: 技术随笔\ntags: CAT\n\n这篇文章翻译自memoQ的产品经理Gabor的The ultimate CAT tool jargon buster，已经得到了作者的翻译许可。\n本文使用BasicCAT翻译，大部分内容都是基于百度翻译做的译后编辑，基本保留原文的句式和内容，除了一些拗口的地方，我进行了意译。翻译此文的目的是普及CAT基础知识，统一CAT的用语，有不对的地方欢迎指出。\n目录\n\n激活（activation）\n对齐（alignment）\n分析（analysis）\n应用程序编程接口（API）\n在服务器上自动保存（auto save on server）\n自动检索（automatic concordance）\nAutoPick\n自动传播（auto-propagation）\n自动可译元素处理（auto-translatables）\nBiDi\n双语Excel（bilingual Excel）\n双语RTF（bilingual RTF）\nCAL许可证（CAL License）\n计算机辅助翻译（Computer-aided Translation）\nCJJK\n检出（check out）\n内容管理系统（CMS）\n注释（comment）\n检索（concordance）\n已确认（confirmed）\n上下文ID（content ID）\n上下文匹配（context match）\nCSV\n自定义字段（custom fields）\n交付（deliver）\n听写（dictation）\n听写错误（dicto）\nDITA\n桌面出版（DTP）\n编辑距离（edit distance）\nELM许可证（ELM license）\n完全匹配（exact match）\n导出（export）\n外部标签（external tags）\n文件格式过滤器（file format filter）\n查找/替换列表（find/replace listing）\n字体替换（font substitution）\n片段组合（fragment assembly）\n模糊（fuzzy）\n全局查找/替换（global find/replace）\n词汇表（glossary）\n高亮（highlight）\n同质性（homogeneity）\n水平布局（horizontal layout）\n导入（import）\n行内标签（inline tags）\n国际化（internationalization;i18n）\n互操作性\n合并句段（join segments）\n关键字上下文检索（KWIC）\n利用（Leverage）\n轻量资源（light resources）\n语言专家（linguist）\nLiveAlign\nLiveDocs语料（LiveDocs corpus）\n本地化（localization;l10n）\n本地化工程师（localization engineer）\n锁定使用了不同语言的句段（lock segments in different languages）\n锁定的（locked）\n语言质量保证（LQA）\nLSC\n语言服务提供商（LSP）\n机器翻译（MT）\n机器翻译后编辑（machine translation post-editing）\n主翻译记忆（master TM）\n匹配率（match rate）\nMatchPatch\n元数据（metadata）\n移动端许可证（mobile license）\n单语审校（monolingual review）\nMQXLIFF\n多语言Excel（multilingual Excel）\nMultiTrans XML\nMuse\n神经网络机器翻译（NMT）\n不换行空格（non-breaking space）\n非打印字符（non-printing characters）\n非译元素（non-translatables）\n光学字符识别（OCR）\n在线项目（online project）\n在线翻译记忆（online TM）\n即时过滤（on-the-fly filter）\nPDF\n机器翻译译后编辑（PEMT; post-edited machine translation）\n惩罚（penalty）\n永久许可证（perpetual license）\n插件（plugin）\n填充纯数字片段（populate number-only segments）\n译后分析（post-translation analysis）\n输入预测（predictive typing）\n预翻译的（pre-translated）\n预翻译（pre-translation）\n预览（preview）\n项目主页（project home）\n项目管理系统（project management system）\n项目模板（project templates）\n伪翻译（pseudo-translation）\n译后分析（PTA）\n质量保证（QA; quality assurance; automatic QA）\n参考翻译记忆（reference TM）\n正则表达式（regular expressions; regex）\n拒绝的（rejected）\n重复（repetition）\n从右往左文本（RTL; right-to-left）\n软件开发套件（SDK; software development kit）\n句段（segment）\n句段状态（segment status）\n句段分割（segmentation）\n同时翻译与审校（simultaneous translation and review）\n支持与维护协议（SMA; support & maintenance agreement）\n统计机器翻译（SMT; statistical machine translation）\n分割句段（split segments）\n句段分割规则（SRX; Segmentation Rules eXchange）\n子片段的利用（subsegment leverage）\n统计信息（statistics）\n字符串（String）\n结构标签（structural tags）\n同步（synchronize）\n表格RTF（table RTF）\n标签错误（tag error）\n标签插入模式（tag insertion mode）\n清理标签（tag soup）\n标签（tags）\nTB\n术语库交换格式（TBX; TermBase eXchange）\n修订匹配（TC match）\n翻译编辑校对（TEP; translation-editing-proofreading）\n术语库（term base）\n术语抽取（term extraction）\n术语数据库（terminology  database）\n翻译记忆（TM; translation memory）\n翻译记忆匹配类型（TM match types）\n翻译记忆驱动的句段分割（TM-driven segmentation）\n翻译管理系统（TMS; translation management system）\n翻译记忆交换格式（TMX; Translation Memory eXchange）\n跟踪修订（track changes）\n翻译单元（translation unit）\n垃圾进，垃圾出（trash in, trash out）\n两列Excel（two-column Excel）\nUnicode\nUTF-8\n提供商（vendor）\n视图（view）\n网络编辑器（web editor）\n字数统计（word count）\n工作、主和参考翻译记忆（working, master and reference TM）\nXLIFF\n可扩展标记语言（XML; eXtensible Markup Language）\nX-translate\n\n译文\nCAT术语大全\n2017年5月16日\n精心挑选的150个术语，涵盖各种表达和缩写，帮助你深入了解CAT工具。\n免责声明\n我编写这份词汇表主要是出于自己的爱好（是的，我知道，我的爱好有点奇怪），同时也是为了帮助那些试图快速了解翻译行业术语的人。作为一群开发CAT软件，致力于帮助人们交流的人，我们确实创造了很多专业领域的词汇，是吧？\n希望读者不要完全相信本文的内容。很多都只是我的一面之词，而且我还是memoq的员工。客观地说，memoQ是世界上最棒的CAT工具。但我会尽量做到内容和具体的工具无关。我加入了尽可能少的memoQ术语，不过我没有用到其它工具的术语。我只是觉得我对于其它工具并不了解，也没有这个权威性，对于未知领域要保持谨慎。\n如果你喜欢本文，欢迎分享给你的朋友、同事和对手。如果你发现任何错误或者不准确的地方，可以选择你喜欢的沟通方式给我反馈。\n激活（activation）\n激活一般需要访问制造商的网站。本地程序向远程网站发送一串序列号以及关于你计算机的一些匿名信息。如果你拥有证书或者选择的试用版，网站就会返回一串代码，授权程序在你的电脑上运行。\n另见：CAL许可证（CAL License）\n对齐（alignment）\n一般在收到一份要翻译的文件时，你还会收到很多之前翻译过的文件和对应的原文，或者在网络上能找到匹配的内容。这些文件内容很大程度可以用作翻译记忆使用，在模糊匹配和检索时发挥作用。问题是，翻译记忆是对齐了的句段，而你现在有的是整个文档。对齐指将源文档和目标文档拆分成片段，并利用算法找出目标片段对应于哪个源文片段。这可不是一件简单的事！高级CAT软件可以做到大致的句段自动对齐，并帮助你修正对齐错误的句段。\n另见：LiveAlign\n分析（analysis）\n在你接受一份任务前，你需要知道有多少文本需要翻译。你已经有了存储已有翻译的翻译记忆，所以您还想知道有多少新的文本需要翻译，有多少模糊匹配和精确匹配。这就是分析所做的：它对要翻译的文本和翻译记忆与语料库中的文本进行比对，并给你一个清晰的统计结果，包括句段、词和字符数。\n“分析”有时也可以和“统计”这个词互换使用，在这种情况下，统计并不是一门高深的学科。\n应用程序编程接口（API）\n一个计算机术语，指一个程序允许其它程序通过某种方式使用它的功能，就像用户通过点击按钮来使用程序。如果一个程序没有API，那么它就不能与其它系统集成，用户最终会因为大量完全不必要的点击而患上肌腱炎。确保你考虑的基于云的工具提供API，这一点尤为重要。如果不提供，你就没有获得你的数据并和其它程序进行数据交换的简便方法。\n在服务器上自动保存（auto save on server）\n当你在一个memoQ在线项目中工作时，你的翻译最初只保存在你的计算机上。您可以选择每天进行几次同步。如果启用自动保存，在保存时，你的翻译将立即发送到服务器，且不会耽误你的工作。这样别人就可以看到你的工作，且*几乎*就像你在实时编辑一个谷歌文档。有什么比这更好的方法来保持翻译的一致性？\n自动检索（automatic concordance）\n如果你想知道某个表达是怎么翻译的，你可以使用检索（concordance）功能。但是一个好的CAT工具可以做得更多：它可以搜索到在许多句段都存在的内容，并进行高亮。这就像是在说，“嘿！这些短语似乎到处都是，马上对它们进行检索可能是个好主意！”如果你非常幸运，这些短语还作为整个原文句段出现，这样可以自动调用翻译记忆或语料库进行翻译。\nAutoPick\n我不知道各位读者是不是也是这样，我不喜欢在翻译的时候输入数字，我也不喜欢在中途从原文复制一段内容到译文。除了数字，原文句段中还会包含其它需要直接复制到译文的内容，比如标签、非译元素和一些术语。在memoQ中，如果你按下并释放CTRL键，它的AutoPick功能会列出所有原文中的这些特殊内容，你可以用方向键来选择内容，把它们插入到译文中。它还能重新格式化数字以匹配目标语言的格式。\n自动传播（auto-propagation）\n需要翻译的文本基本上都有重复。很多片段会出现多次。在一些技术文本中，重复片段的比例会更高。翻译记忆的一个作用就是能重复利用翻译过的内容。不过CAT工具可以做得更好。如果你启用了自动传播，那么确认一个句段后，工具就会立即填充文档中的所有其他相同片段，并将其标记为已确认状态。\n自动可译元素处理（auto-translatables）\n大多数文本（特别是技术、法律和财务类）都有遵循某种模式的重复出现的内容。比如日期：05/27/1978会被翻译为27.5.1978。自动翻译规则允许你利用正则表达式自动进行这类转换。\nBiDi\nBiDi，双向文本，是bidirectional text的缩写。阿拉伯语、希伯来语和波斯语是从右往左书写的，但同时，数字和一些用拉丁字母书写的名词是从左往右书写的。\n双语Excel（bilingual Excel）\n见多语言Excel（multilingual Excel）\n双语RTF（bilingual RTF）\n一种特殊格式的Word文档，包含翻译的原文句段和目标句段，通常还包括注释和其他信息。这样，翻译人员可以和没有CAT软件的客户或领域专家进行合作。反过来，CAT工具可以读取修改过的双语RTF，并将更新的内容导回翻译软件环境中。有些旧格式依赖于隐藏文本，并且很容易被一个错误的编辑所破坏。如今，一个包含三列或更多列的表格的文档更为常见。\nCAL许可证（CAL License）\nCAL是“并发访问许可证（concurrent access license）”的缩写。个人许可证允许个人用户运行单个程序，作为组织则可以购买CAL许可证，这些许可证可以按需分发给任何终端用户。限制主要在于有多少人可以同时使用这个工具。不管他们是谁，或者在哪里工作都没有限制。\n计算机辅助翻译（Computer-aided Translation）\n提高译员和审校翻译速度和质量的软件，多人同时处理一个大型文本也不在话下。有时，该名称会简化为“翻译记忆工具”，因为翻译记忆是CAT工具关注的第一个功能。Jost Zetzsche喜欢使用翻译环境工具或TEnT。这个叫法我也同意。翻译管理系统（TMS）经常被用作同义词，它们的边界实际上非常模糊。\nCJJK\nCJJK指东亚语言，包含汉语、日语和韩语。有两个C是因为中文有简体中文和翻译中文两种存在。\n检出（check out）\n当译员或者审校用memoQ执行在线项目检出操作时，memoQ会把任务文件下载下来并正确配置一个工作环境。这样就不用再使用邮件来发送附件，省去了一系列容易出错的步骤，节省时间，保证项目的参与者的文件和设置都是正确的。\n内容管理系统（CMS）\n一种用来编辑、组织和发布大量内容的软件。CMS系统通常能记录内容的负责人是谁，是否得到批准，是否过期，内容的适用对象等内容。通常，CMS系统会把内容拆分为小的部分，可以在多个相关文档中重复使用。CMS系统很重要，因为很多翻译内容需要从CMS系统获得，通常是小部分的XML文件，并且通常是DITA格式。\n注释（comment）\n在CAT工具中，您可以标记整个文档、源片段或目标片段，或者只标记段中的一部分。你可以添加注释或者使用这一功能来高亮文本。通过这种方式，您可以与其他翻译人员、审校或者客户进行交流，或者将某个内容添加到书签中，以便之后再查看。您可以将注释保密，也可以选择将其作为完成的翻译的一部分导出。\n检索（concordance）\n翻译记忆和LiveDocs语料库的一个功能，允许你搜索一个单词或表达式，检索所有匹配的翻译过的片段。这像一个小的“谷歌”，可以让你检索现有的翻译。memoq在目标片段中高亮出检索内容最可能对应的翻译，就像Linguee一样，但检索的是您自己的私有数据。\n已确认（confirmed）\n见句段状态（segment status）。\n上下文ID（content ID）\n通常是一个短的机器可读文本，用于标识属于应用程序或游戏中特定位置的字符串。同样的文本在不同的语境翻译结果可能是不一样的，比如标签上的“Open”翻译为德语是“Offen”，而按钮上的是翻译为“Öffnen”。翻译记忆会存储这个上下文ID，如果以后具有相同上下文ID的相同文本出现，就是显示该匹配为上下文匹配。\n上下文匹配（context match）\n见翻译记忆匹配类型\nCSV\n一种看似简单的基于文本的格式，每行存储若干值，用逗号分隔。它仍然广泛用于交换词汇表，有时甚至用于交换可翻译内容。尽管看起来很简单，但很容易出错；最常见的问题是使用错误的代码页而不是Unicode。\n自定义字段（custom fields）\n见元数据（metadata）。\n交付（deliver）\n译者或审校表明自己完成了任务，比如翻译给定的文件，这一动作叫做交付。交付不是一个象征性的步骤：在像memoq这样的系统中，它通常会触发一系列的操作，比如自动的质量保证检查或者通过电子邮件将完成的翻译返回到最终的客户。\n听写（dictation）\n允许您口述文本而不是在键盘上键入文本的技术。商业工具对主要语言的支持已经非常棒了。口述是少数译者的首选；不过有报告显示听写的效率比打字提高了50%或更多。\n听写错误（dicto）\ndicto是从typo发展出来的一个新词。表示听写软件的错误听写。打字错误可以容忍，但是听写错误是很严重的错误，因为它们虽然听起来像原文的短语，但意义却完全不同，就像一个不成熟的中学生笑话。想想Uranus。\nDITA\nDITA是达尔文信息分类架构（Darwin Information Typing Architecture）的缩写，它听起来很无聊，但非常有用。它是一个开放的标准，定义了如何在CMS系统中构造和重用内容。该格式基于XML，如果您的CAT工具支持它，您可以处理来自几个不同CMS的大量内容。\n桌面出版（DTP）\nDTP工具包括像FrameMaker和InDesign这样的工具，用于生成专业的排版打印文档。在行业中，DTP通常是翻译和审校后的进行的步骤。翻译后的文本在原始格式中看起来确实很糟糕，除非您调整排版以适应较长的段落、不同的特殊字符，甚至是变化了的文字方向。\n编辑距离（edit distance）\n一个文本转换到另一个文本，使用插入、删除和交换的操作，需要进行的操作次数叫做编辑距离。模糊匹配是根据编辑距离算出来的。编辑距离有时还会直接用于测量审校对译文修改的程度。\nELM许可证（ELM license）\n见：CAL许可证（CAL License）\n完全匹配（exact match）\n见翻译记忆匹配类型\n导出（export）\n见文件格式过滤器（file format filter）\n外部标签（external tags）\n见标签\n文件格式过滤器（file format filter）\nCAT工具的一个主要好处是，无论文本的格式如何，你总是在同一熟悉的编辑器中进行翻译。这意味着CAT工具必须以某种方式从所有不同的文件格式中提取文本。执行此操作的组件称为文件格式过滤器：它“过滤”掉文件中所有其他内容，仅保留文本。把文件添加到CAT工具称为导入文件；以原始格式保存翻译内容称为导出文件。\n每个过滤器都有自己的选项，这些选项会影响它的工作方式（比如是否要从Word文件中提取隐藏文本？），对于某些格式，尤其是XML，这些设置会产生巨大的差异。\n查找/替换列表（find/replace listing）\n在memoq中，查找功能有一个选项，可以将所有的匹配放在一个单独的列表中，而不是用弹出窗口逐个遍历它们。结果是用户可以得到一个查找/替换列表，在这里您可以轻松地查看每个片段，并决定替换的位置和保留的位置。\n字体替换（font substitution）\n许多文件格式，特别是DTP工具的文件格式，倾向于使用一些好看的特殊字体，但这些字体往往支持的字符数量有限。如果您的目标语言恰好有很多不常见的字符，那么翻译后的文件看起来会很难看，或者直接不显示某些字符。字体替换是文件格式过滤器的一个功能，它可以调整文件，用目标语言的字体替换原始字体。\n片段组合（fragment assembly）\n可能对于一个句段，您的记忆库或语料库没有精确或模糊匹配的片段，但这一句段的部分内容可能仍然与术语库的内容相匹配，或者有非译元素或自动可译元素。片段组合功能可以识别这些部分内容并用合适的译文进行替换，这样和从头翻译相比应该还是能节省不少工作。\n模糊（fuzzy）\n这里的第一印象是正确的：这是整个行业术语中最模糊的一个词。模糊匹配最初是用来和精确匹配形成对比的。模糊匹配的翻译的原文片段和你当前的片段会有些许不同。不同的程度用模糊匹配率来表示。最后，模糊匹配也被扩展到了术语，如果你的语言习惯于在单词中间改变字母，那么它会非常有用。\n另见翻译记忆匹配类型\n全局查找/替换（global find/replace）\n在过去，只有当您首先打开一个文档时，“查找”功能才起作用。全局查找和替换会在项目的所有文档中进行。如果您的工作需要操作来自CMS的数百个小XML文件，这是一个非常方便的操作。\n词汇表（glossary）\n见术语库\n高亮（highlight）\n见注释\n同质性（homogeneity）\n常规的项目分析可以告诉你，你的文本中有多少模糊匹配或者完全匹配。匹配的内容是现有的翻译记忆和语料库。但是，即使你一开始的翻译记忆库是空的，随着你不断的翻译，片段也会得到越来越多匹配的内容。同质性功能可以把这些“内部”匹配作为分析的一部分进行处理，而不仅仅是检测重复内容。\n水平布局（horizontal layout）\n几乎所有CAT工具都采用了左列原文，右列译文的网格布局，就像一股急流冲走了可怜的河边露营者的ABC汤。但是许多译者仍然喜欢原文在上，译文在下的显示方式。水平布局选项可以重新组合活动句段，以原文在上，译文在下的形式展示。\n导入（import）\n见文件格式过滤器（file format filter）\n行内标签（inline tags）\n见标签\n国际化（internationalization;i18n）\n本地化产品需要的不仅仅是翻译：它包括以正确的格式显示日期、以摄氏度和华氏度显示温度、在姓氏后面写名字或反之亦然等内容。它需要额外的努力才能使产品做到这一切；这种努力称为国际化。\n互操作性（interoperability）\nCAT工具能够理解彼此的格式和API，并且能够很好地支持标准格式，这样，使用不同制造商的软件的人就可以在一起工作，而不会出现悲剧。\n合并句段（join segments）\n见句段（segment）\n关键字上下文检索（KWIC）\n一种用于展示检索结果的布局，其中匹配内容位于中间，前后文本位于两边，一行接一行。\n利用（Leverage）\nleverage是一个时髦的表达，To leverage past translations的意思是CAT工具提供了我已经翻译的内容，我不需要再翻一遍了。\n轻量资源（light resources）\n这是一个memoq的术语，指代非译元素、句段分割规则等内容。而重量资源指翻译记忆、LiveDocs语料、Muses，和它们相比，轻量资源的数据量更小。在许多其它的工具里，它们在设置里出现，而在memoQ中，它们是一种资源。它们有名字，可以被导进导出，可以在不同项目中被重复利用，也能通过memoQ服务器进行在线共享。\n语言专家（linguist）\n这一术语可能是翻译行业对英语的正确使用所犯下的最大的罪行。对于每一个受过教育的人来说，语言学家指的是像诺姆·乔姆斯基、威廉·拉波夫、丹尼尔·埃弗雷特，或者电影《降临》里的艾米·亚当斯这样的人：一个研究人脑中的语言或社会中的语言的科学家。在翻译行业，“语言学家”即指翻译或审校。\nLiveAlign\nmemoQ的对齐操作名称，只需将一堆源文档和目标文档扔到工具里，就可以进行对齐。该工具首先对齐文档，然后对齐句段，并在后台对其进行索引，以便能在编辑器中立即检索到结果。错误不可避免会有，不多你只需花时间对齐那些匹配到的句段。\nLiveDocs语料（LiveDocs corpus）\nmemoQ的翻译记忆替代品。翻译记忆不按特定顺序保存大量翻译片段，而LiveDocs语料库保留了整个翻译文档，并提供了相同类型的匹配。如果要检查过去翻译的上下文，可以直接从翻译编辑器跳到完整文档。翻译记忆有一个很大的优势：同样的翻译，它只存储一次。如果你的内容有很多重复，LiveDocs会变得很笨重。\n本地化（localization;l10n）\n有时用作翻译的同义词，不过通常本地化有更广泛的含义：它包括以正确的格式显示日期、以正确的货币显示货币等。为了使产品本地化，必须修改产品使其支持本地化操作，这叫做国际化。\n本地化工程师（localization engineer）\n了解CAT工具、讨厌的文件格式、正则表达式和其他奥秘的人。许多人也有很强的代码能力。他们确保在启动一个复杂的项目之前，所有内容都被正确导入，句段分割是正确的，不应该被修改的句段被锁定，等等。如果没有本地化工程师，复杂的项目将永远无法按时完成，而翻译人员则会拔光头发，搬到农场养猪。\n锁定使用了不同语言的句段（lock segments in different languages）\n没有一个CAT工具能够处理好源文档使用了混合语言的情况。在memoQ中隐藏着一个很好的功能可以锁定句段。这个不显眼的选项将检测每个句段的语言，如果它不同于文档的原文语言，则将其锁定。\n锁定的（locked）\n实际上，每个CAT工具的句段都有一个状态属性，如“新建”、“预翻译”或“已确认”。句段也可以被锁定，这使得它们是只读的。如果本地化工程师用客户批准或指定的翻译填充了一些片段，那么锁定可以确保这些片段不会被意外更改。在分析项目时，锁定的句段也很容易从字数统计中排除。\n语言质量保证（LQA）\n除了审读和修改译文，人工审校还可以标记他们找到的错误，从预先定义的列表选择错误的类型，错误的严重程度等其它细节内容。这些信息可以在以后进行评估，以客观地评价质量。LQA是在CAT工具在这方面提供的一个功能。\nLSC\n见自动检索（automatic concordance）\n语言服务提供商（LSP）\n向客户销售翻译服务的公司。\n机器翻译（MT）\n一种计算机系统，它把一个字符序列转换成另一种语言的序列。结果是人可以阅读的。目前主要有三种机器翻译系统。基于规则的系统（RBMT）需要人类手工制定语法规则。基于统计的系统（SMT）需要使用大量人工翻译文本进行训练。基于神经网络的系统（NMT）也需要使用人工翻译数据训练，但它们需要更多的计算，并且根据报道，可以得到更好的翻译结果。\n像谷歌翻译这样的机器翻译针对的是通用的领域。在翻译行业中，更常见的是定制专门的系统，这些系统做专门领域的翻译做得很好。这需要机器翻译专家和一个相关的、高质量的大型人工翻译语料库。\n使用机器翻译的一种方法是人的后期编辑：机器翻译系统产生的粗略的翻译，通常是不正确的和不符合文法的，但是在此基础上进行编辑比人从头翻译更便宜，更快。另一种方式是交互式的机器翻译，当人工译员在CAT工具中翻译文本时，会收到机器翻译系统的建议。\n机器翻译后编辑（machine translation post-editing）\n利用机器翻译的一种方法是译后编辑，即机器给出一个粗略的翻译，这个翻译可能并不正确，有语法问题，需要人来进行后期的编辑，改正错误，提高流畅度。\n主翻译记忆（master TM）\n见工作、主和参考翻译记忆（working, master and reference TM）\n匹配率（match rate）\n见翻译记忆匹配类型\nMatchPatch\n一种memoQ的功能，比较从翻译记忆和语料库得到的模糊匹配和翻译的原文不一样的部分，依赖于词库匹配、可自动翻译内容和非译元素的设置，生成对应的翻译。\n元数据（metadata）\n有关存储信息的其他详细信息，例如翻译单元的元数据包含“谁翻译的，什么时候翻译的，客户是谁”，而术语库条目的元数据包含“来源，客户是否批准”等。CAT工具通常支持一组标准字段，如上面的字段，但也允许用户定义自己的字段和类别以存储更多详细信息。\n移动端许可证（mobile license）\n见：CAL许可证（CAL License）\n单语审校（monolingual review）\n通过单语审校功能，你可以将翻译导出到其原始格式，在CAT工具环境外外进行更改，然后将这些更改从编辑过的目标语言文件中导回翻译环境。当您需要将工作发送给客户审校时，它特别有用，因为可能即使是双语Word文件，对于客户也显得太复杂了。\n为什么要将这些更改重新导入CAT工具？是为了确保您的TM仅包含最终版本的翻译。不然，翻译记忆的内容就都是低质量的垃圾内容了。\nMQXLIFF\nmemoQ的专有XLIFF格式文件，含有一些memoQ才有的信息，比如句段信息、QA警告、LQA错误、注释等等。\n多语言Excel（multilingual Excel）\n包含源文本、翻译、注释和其他信息的Excel文件。有时它是一个小巧的文件，有两列内容：源文本和目标文本。但有可靠的目击者报告说，他们见到过有50000行和25列不同语言的文件。这种巨大的的文件往往来自电脑游戏。\nMultiTrans XML\nSDL MultiTrans用于导出和导入术语的基于XML的格式。虽然不是官方标准，但它被广泛用于术语交换，即使是在完全不同的系统之间。\nMuse\n在memoQ中支持输入预测的资源之一。Muse通过对现有的记忆库和语料库的分析，抽取原文和译文对应的短语对。翻译新的原文句段时，Muse会查询之前存储的短语，并给出可能是原文中某个短语翻译的建议列表。\n神经网络机器翻译（NMT）\n见机器翻译\n不换行空格（non-breaking space）\n一种特殊的字符，看起来像一个普通的空格，但作用不同，因为它不允许句子在单词的左右两边换行。在法语中，冒号前面必须有一个非换行空格（你不希望一行内容的开头是“：”），数字和度量单位之间也必须有一个非换行空格（你也不希望开头是“cm”）。在大多数文字处理器中，您可以通过按ctrl+space来键入它。\n非打印字符（non-printing characters）\n空格、非换行空格、制表符和换行符。另外，在双向文本中使用的一些不可见字符。它们都是空白的，你通常看不到它们。和Word一样，CAT工具也有一个显示它们的选项，这样您就不会意外地键入两个空格，或者在该输入非断行空格的地方插入了一个正常的空格。\n非译元素（non-translatables）\n有点类似于术语，只是它们在所有语言中都是相同的。比如说品牌的名称，基本上是不需要翻译的。\n光学字符识别（OCR）\n一种将图像（如扫描的页面）转换为可编辑文本（通常是Word文档）的软件。在翻译中，OCR常用于将PDF格式的文档转换为可编辑或导入到CAT工具中的Word文档。\n在线项目（online project）\n一个在服务器中存储文档的Memoq项目，允许多个人同时翻译和查看文档，进行实时协同工作。在线项目还使分配工作变得非常简单，因为它们消除了在电子邮件中发送文件的功能，并防止了微不足道的错误，因为它们确保项目中的每个人都使用正确的设置和资源。\n在线翻译记忆（online TM）\n通过服务器或者云服务共享的翻译记忆。它们允许组织在一个中心节点存储它们的翻译，并能在需要时找到它们。他们还确保项目的翻译人员能够立即看到彼此的翻译，确保他们的工作是一致的。\n即时过滤（on-the-fly filter）\n所有高级CAT工具中都存在的一个功能，它允许您过滤正在处理的文档的句段。它是一个加强版的查找功能。你可以快速浏览包含某个词或者表达的句段，如果觉得翻的不好，可以随时修改。你也可以使用这个功能来隐藏已经确认的句段，这样就可以只关注需要工作的部分。\nPDF\nPDF是的Portable document format的缩写，设计目的是无论你在哪里查看或打印它，文档看起来都完全相同，这种一致性的代价是很难（几乎不可能）更改其中的文本。换句话说，它是一种单向格式，即你很难把PDF格式转换到其它格式，这使得它成为翻译行业最大的障碍之一。除了一些创新的解决方案，比如TransPDF，你最好的选择是用OCR工具将一个PDF文件转换成一个Word文件，然后翻译它。但最好是从您的客户获取源文档（InDesign、Framemaker或类似的DTP文件），并进行相应的翻译工作。\n机器翻译译后编辑（PEMT; post-edited machine translation）\n见机器翻译后编辑（machine translation post-editing）\n惩罚（penalty）\n有些翻译的可信度较低。它们可能太旧，来自水平较差的译者，或者适用于不同的客户和领域。惩罚意味着降低译文的匹配率，使其排名低于其它匹配。\n永久许可证（perpetual license）\n允许您永久使用软件的许可证。永久许可通常只适用于软件的特定版本，升级版本还是要花钱的。这是为了确保开发人员能够继续努力完善软件。\n插件（plugin）\n在较大的软件中执行特定任务的一个小模块。通常，任何人都可以开发一个插件，而无需该软件的开发人员参与。CAT工具中的一个典型例子是机器翻译插件。机器翻译商通过为CAT软件开发插件来为译员、语言服务商或公司提供他们的服务。只要CAT工具的开发人员通过创建和发布一个SDK，使得应用程序对外提供交互的接口，就可以创建插件。\n填充纯数字片段（populate number-only segments）\n很多时候，源文档有许多只包含数字的部分，比如财务报告。数字很有趣。他们不需要传统意义上的翻译，但是他们也不能直接翻译成译文：目标语言的数字使用分割符的约定是不同的。这个功能可以一次处理所有带数字的句段，并调整它们的格式。\n译后分析（post-translation analysis）\n缩写是PTA，它和普通的分析相似，不过是翻译完成后立刻执行的。翻译大型文本时会产生很多的“内部”记忆匹配，有模糊的也有精确的。当两个或两个以上的译员一起工作时，很难说谁会从头翻译一个句段，谁会得到别人翻过的内容的匹配。对此，memoQ会在它的在线项目进行跟踪，并在所有工作完成后给出精确而公平的任务量分析。\n顺便说一下，译前分析匹配的数字与同质性分析中的数字非常接近。不同的是，PTA的分析可以显示出译员各自在翻译时使用了多少内部匹配。这些内部匹配是一开始同质性分析时就有预测。\n输入预测（predictive typing）\nCAT工具最性感的功能之一，但名字并不性感。输入预测可以使翻译速度更快（通过减少击键）、内容更一致（通过提供正确的输入内容）。它分析用户输入的字符，然后根据当前句段的术语库匹配、自动可译元素、非译元素、Muse提示和其它资源来提供一个建议列表。\n预翻译的（pre-translated）\n见句段状态（segment status）和预翻译（pre-translation）\n预翻译（pre-translation）\n预翻译会分析文档中的每个句段，并自动用翻译记忆和语料库中的内容进行填充。\n预览（preview）\n预览功能可以原始格式或近似格式查看翻译的文档。CAT工具将文本拆分为句段，让您在相同的高效环境中进行翻译，而不用管原始文件格式。但视觉上下文信息是丢失了的，你看不到译文在原始文档中是什么样的。解决这种CAT软件自己造成的痛苦的方法是预览。\n项目主页（project home）\n在memoQ的项目主页，你可以添加或删除要翻译的文档、选择翻译记忆、术语库、Muse和其他资源。当你犯拖延症时，你也可以用无数其他方式来把玩你的工作环境。\n项目管理系统（project management system）\n项目管理系统可以跟踪翻译任务、价格、客户、供应商、截止日期、发票以及运行翻译业务或部门所需的大量其他内容。\n项目模板（project templates）\n处理很多有重复或至少类似的翻译工作，你不得不一遍又一遍地做同样的事情：选择合适的翻译记忆、术语库、轻量资源、设置、人员等，然后还要执行相同的操作，如分析、预翻译等。项目模板可以为以上这些定义规则。这样你就不会犯令人尴尬的错误，也不会因为不停的点击而导致肌腱炎，并且能在这类繁琐工作中保持清醒。此外，项目模板允许您重用本地化工程师等专家的工作，并使新员工更容易跟上进度。\n伪翻译（pseudo-translation）\n文本翻译是有趣的一个环节，但是如果你处理的是来自深奥系统的复杂文件格式，你需要确保你的工作可以正常导回原来的系统（正常生成目标文件），而不是在项目截止前弄坏你的客户花数百万美元买的旗舰应用程序。伪翻译允许您测试整个过程，而不需要实际翻译任何内容。它会把源文本替换为有趣的目标语言字符。\n译后分析（PTA）\n见译后分析（post-translation analysis）\n质量保证（QA; quality assurance; automatic QA）\n机器很难像人类一样创造出能引起共鸣的内容，但人类在正确处理数字和其他无聊和重复的事情上的表现确实很糟糕。这时质量保证检查可以发挥作用：它能验证了你的数字是否正确，你有没有键入两个连续空格，你是否使用了MegaCorp公司的官方术语，你在整个文本中是否以同样的方式翻译了相同的内容，你有没有忘记一个关键的标签，等等。如果愚蠢的机器做出了错误的判断，您总是可以选择忽略（禁止）个别的QA警告。\n参考翻译记忆（reference TM）\n见工作、主和参考翻译记忆（working, master and reference TM）\n正则表达式（regular expressions; regex）\n即使是人类写的文本也可以发掘出明确的模式。比如美国用MM/DD/YYYY来表示日期。而德国也是采用的类似的日期格式，不过他们使用点来作为间隔符。正则表达式是一种非常反直觉但非常有用的，可以精确描述以上类型内容的模式的方式。CAT工具全面支持正则表达式，从定义文件格式过滤器到自动可译元素，再到查找/替换，都有使用到。熟悉正则表达式，你就相当于半个本地化工程师了。\n拒绝的（rejected）\n见句段状态（segment status）\n重复（repetition）\n在源语文本中出现至少两次的句段叫做重复句段。出现重复是好事，因为通常你只需要翻译相同的内容一次。自动填充和完全匹配使用的就是重复的句段。对于必须以不同方式翻译相同内容的情况，您可以使用上下文ID进行区分。\n从右往左文本（RTL; right-to-left）\n见BiDi。\n软件开发套件（SDK; software development kit）\n一组工具和文档，允许开发人员构建自己的模块，以便与不同的软件一起工作。比如SDK允许第三方为CAT工具开发插件。\n句段（segment）\n我们翻译文本的时候，基本都是以句子为单位进行的。然而，没有人真正知道一个句子到底是什么。列表中的一个单词是一个句子吗？CAT工具决定完全回避句子的叫法，改用“句段”。\n一般来说（尽管并非总是如此），句段是翻译的基本单位：您在编辑器中按句段进行翻译，并把句段的翻译存储在翻译记忆中。你的翻译记忆和语料库匹配也指的是你目前正在翻译的句段。\n句段是使用句段分割规则来进行切分的，这些规则是用正则表达式描述的。就像所有的正则一样，它们在外行眼中看来就是一堆乱码，但它们基本上遵循这样的一个模式：“如果你发现句子的最后标点像一个句点，后面跟着一个或多个空格，后面跟着一个大写字母，那么就从那里开始一个新的句段。除非句号前的最后一个词是已知的缩写。”当您的CAT工具的文件格式过滤器导入源文档时，通常会在幕后悄悄地进行句段分割。\n但再全面的分割规则也难免会出错。为了解决这个问题，CAT工具有一个功能，可以合并相邻的句段，或将一个句段拆分为两个。\n句段状态（segment status）\n从你把一份文件导入你的CAT工具的那一刻起，通过翻译、审校、客户审校、一晚上好觉后第二天进行的校对以及二校，直到把它交付给你的客户，文本是以句段的形式存在的。因此，除了文本本身之外，还需要知道很多关于句段的信息：目标是来自翻译记忆的，还是我自己翻的？翻译有没有得到确认？它是不是被审校拒绝了？是不是还处于编辑状态，不是最终的完成状态？这是您可以在翻译环境中通过颜色和图标的形式看到的信息。\n我的火星人朋友们到来后的几年里都确信翻译人员的工作是把空的（灰色）片段转变成确认的（绿色）片段，他们认为这是一个非常吸引人的工作。现在他们知道自己错了，但他们仍然认为这份工作很棒。\n句段分割（segmentation）\n见句段（segment）\n同时翻译与审校（simultaneous translation and review）\n在线协作CAT工具的一个功能，允许几个人一起实时编辑同一文档。你可以把它看作是加强版的为翻译定制的Google Docs。\n支持与维护协议（SMA; support & maintenance agreement）\n许可协议允许您使用某个软件，而与之配套的SMA通常允许您获得人工支持和软件的新版本。通常，永久性许可证只收取一次性费用；与此相反，SMA每年收取一次费用。\n统计机器翻译（SMT; statistical machine translation）\n见机器翻译\n分割句段（split segments）\n见句段（segment）\n句段分割规则（SRX; Segmentation Rules eXchange）\n一种基于XML的标准，允许不同的CAT工具读取彼此的分割规则。\n子片段的利用（subsegment leverage）\n这是一个翻译行业最模糊词汇的有力竞争者，仅次于模糊这次词。CAT工具供应商标榜这一功能时，他们基本上想说：“我们正在做一些非常先进和有用的事情。”简单地说，这一功能可以根据原文片段的一部分得到翻译建议。产生这种建议的机制是相当先进的，可以从过去的翻译中总结出咋一眼看去并不明显的知识。\n统计信息（statistics）\n见分析（analysis）。\n字符串（String）\n用开发的语言描述，字符串是一个字符序列。翻译软件应用程序或游戏的用户界面时，出现在不同位置的所有文本块都称为“字符串”。通常，一个字符串显示为一个单独的句段，它有一个关联的上下文ID来消除它的歧义。\n结构标签（structural tags）\n见标签\n同步（synchronize）\n在memoQ在线项目中工作时，您可以选择不立即在服务器上保存每个翻译的句段，而是在本地收集大量更改，然后一次性与服务器交换。这一操作叫做项目同步，\n表格RTF（table RTF）\n见双语RTF（bilingual RTF）。\n标签错误（tag error）\n一些内联标记是可选的：也许源文本中的粗体格式在您的翻译中根本不需要。然而，还有一些标签是非常重要的。比如果“你还有N个敌人”这句话中，N是以标签的形式存储的，那么如果你省略了标签，翻译后的游戏程序可能崩溃，游戏玩家的愤怒将使你的客户破产。为了避免这种情况，CAT工具的QA模块可以在编辑器里给出标签错误的提示，并且直到标签错误得到修复才允许进行交付操作。\n标签插入模式（tag insertion mode）\n当你翻译时，标签可能是一个真正的麻烦：你需要考虑它们放在哪里，你需要快捷输入标签的方法。而且，标签会影响正常的翻译思路。因此，在memoQ中，您可以先集中精力翻译一个句段的文本，然后激活标签插入模式，并在目标句段的正确位置插入标签。\n清理标签（tag soup）\n导入的文档中充满了多余的、无意义的标签时，是一种不幸但频繁的情况。这通常发生在导入使用OCR转换PDF得到的Word文档时，因为生成的文档希望确保所有内容都显示在正确的位置，精确到百分之一毫米，所以会有很多标签。您可以通过调整OCR工具的设置、使用清理标签的宏（如Dave Turner的codezapper），或者缠着您的CAT工具的开发人员来做一些事情来改善情况。只有前两个被确凿地证明是有效的。\n标签（tags）\n我们需要翻译的内容大部分是文本，但不是唯一的内容。比如要确定翻译中的文本的哪一部分对应原文中有颜色的部分。另外还有结构化内容的处理，其中文本与标记（如超链接、交叉引用或占位符）交织在一起，当一个软件运行时，这些标记将被替换为数字。\nCAT工具通过引入标签来应对所有这些问题。句段中的标签在编辑器中的作用类似于字符，但看起来完全不同。它们被称为行内标签或者内联标签。\n像XML或HTML这样的格式，把标签编织到了自己的DNA中。其中一些标记定义结构（如标题、说明文字），并把文字封装在标签里面。这些称为结构标记或外部标记，不应出现在您的句段中。只有在导入之前XML过滤器配置不正确时，它们才会出现。你可以通过雇佣一个好的本地化工程师来解决这个问题。\n好的CAT工具的分析输出有一个单独的部分，该部分会显示了除了字符之外，文本还包含多少标记。这一点很重要，因为标签可能需要很多工作，会减慢翻译的速度。\nTB\n见术语库\n术语库交换格式（TBX; TermBase eXchange）\n一种基于XML的标准，允许CAT工具和其他软件交换术语。\n修订匹配（TC match）\n让人精神分裂的概念，不知道它是匹配率还是句段状态。当您需要翻译包含跟踪更改的原文句段时，它就有用了。TC匹配是指修订过的原文句段的原始文本的精确匹配，假装那些跟踪修订不存在。\n见跟踪修订（track changes）\n翻译编辑校对（TEP; translation-editing-proofreading）\n一种广泛使用的工作流程，一名译员和两名不同的人员，按顺序对翻译进行审校，目的是确保高质量的翻译，并为译员提供反馈以改进翻译。\n术语库（term base）\n一个“数据库”或CAT工具的一个组件，允许用户存储重要的单词/表达等等。它省去了两次研究同一术语的麻烦。它还帮助翻译人员遵守客户指定的术语，或者至少与自己保持一致。事实上，如果不同的人同时翻译同一个大文本，在不同的地点进行在线协作，术语库是保持一致性所必需的。\n通常与词汇表互换使用，但它们并不完全相同。词汇表通常只是包含两种语言的单词列表，而术语库有结构信息和元数据。\n术语抽取（term extraction）\n高级CAT工具的一种功能，可以从新的源文本或现有翻译对中提取重要的单词和表达。输出结果通常包含许多错误的术语，但它允许翻译人员在开始翻译之前研究重要的术语，将它们包含在术语库中，确保随后正确地翻译它们，并保持一致性。\n术语数据库（terminology  database）\n见术语库\n翻译记忆（TM; translation memory）\n翻译记忆这一想法产生了最初的商业翻译技术。为什么要翻译同一句话两次？翻译记忆是存储句段及其翻译的数据库。翻译记忆技术发展迅速，模糊匹配、检索和子片段匹配是利用翻译记忆的新方式。\n翻译记忆匹配类型（TM match types）\n翻译记忆像一个袋子，装着原文句段和其对应的翻译。当新的句段出现时，CAT工具会在这个袋子里寻找以前翻译过的相似句段，并将其作为匹配项返回。如果袋子里有相同的句子，那就是一个精确匹配，匹配率为100%。它可以变得更好：如果有一个翻译不仅句段内容相同，而且上下文也完全相同，那就是一个上下文匹配。如果匹配率低于100%，那就是模糊匹配。通常，高匹配度的模糊匹配价值更大：这些匹配只在标点、大小写或数字上有所不同，因此更易于使用。\n翻译记忆驱动的句段分割（TM-driven segmentation）\nmemoQ的一种高级功能，在预翻译时动态分割或合并句段，以获得更好的翻译记忆匹配。这个想法很简单。如果一个译员在将翻译存储在记忆库之前合并了两个句段，而现在相同的两个句段又出现了呢？通过识别这种情况，新的文本中的这两个句段可以得到合并，从而得到一个完美的匹配。\n翻译管理系统（TMS; translation management system）\n帮助您管理翻译和组织资源的软件。以下这种情况需要管理：“1500个文件必须翻译成25种语言，6名译员和2名审校同时为每种语言工作，确保没有人覆盖过去批准的翻译，并在下周一前准备好，实时了解项目的进展情况，直到交付。”以下这种情况需要组织：“我必须从2000种为不同用户和语言对提供的资源中找到正确的翻译记忆和术语库。”\n翻译记忆交换格式（TMX; Translation Memory eXchange）\n一种基于XML的格式，用来交换翻译记忆。采用该标准是业界朝着互操作性迈进的关键一步，目前几乎所有工具都支持该标准。\n跟踪修订（track changes）\n法律要求许多受监管行业（如制药）跟踪其对关键文件所做的每一项更改，例如使用说明和药物的副作用。不仅如此，当他们向多个市场销售时，他们还必须在翻译材料中体现所有这些变化。作为一名翻译人员或LSP，在不丧失理智，不因为追求利润而被起诉的情况下实现这一目标的唯一方法是，您的CAT工具具有特殊功能，既能处理跟踪修订的文档，又能保留翻译记忆、术语库、质量检查和其他所有功能的好处。\n见跟踪修订匹配（TC match）\n翻译单元（translation unit）\n在CAT工具中，用户以句段为单位翻译文档。而当把原文句段的翻译存储在TM中时，原文和译文加上一些元数据（如谁翻的，什么时候翻的）就被合在一起转换为一个翻译单元。\n垃圾进，垃圾出（trash in, trash out）\n假设你在你的TM中存储了一个无意义的翻译。当你收到更新的文档时，预翻译会将其视为一个完美的匹配，结果你就没有再看它第二眼。如果用这些数据训练一个机器翻译引擎，它将产生质量极差的翻译。一旦垃圾进入系统，它就会一直存在。该怎么避免呢？通过QA，通过TEP，通过分离工作和主翻译记忆以及其他类似的操作。这需要你能够集中式管理资源，制定正确的处理流程，避免容易产生错误的手工操作。\n两列Excel（two-column Excel）\n见多语言Excel（multilingual Excel）\nUnicode\n根据维基百科，Unicode是一种计算行业标准，用于对世界上大多数书写系统中表示的文本，进行一致的编码、表示和处理。\n在我看来，Unicode是自切片面包以来人类发明的最好的事情。这意味着，如果你用你自己语言的特殊字符写一个文本，那么世界上任何地方的人都可以使用任何带有CPU和显示器的设备来阅读该文本。甚至是在Excel里的文本。\n不过，我们的世界不是完美无缺的，你必须记住，虽然Unicode不支持克林贡语，但它确实有手枪的emoji。\nUTF-8\n见Unicode\n提供商（vendor）\n在我们的行业中，为其他人或企业提供翻译服务的人或企业。\n视图（view）\nCAT工具显然是解构主义的狂热爱好者，最早的版本就把文本撕成称为句段的片段。你也可以通过视图来充分调用这些句段。“我刚刚将此用户指南转换为1300个句段，并对其进行了预翻译。现在给我那些没有翻译记忆匹配的片段，要求至少出现两次，其中有单词‘眯眼松鼠’。另外，给我显示只出现过一次的片段，并且按字母顺序排列。”这是视图允许你做的事。\n网络编辑器（web editor）\nCAT工具的一个组件，允许在线项目中的译员和审校在浏览器中工作，而不需要在自己的计算机上安装软件。Web编辑器对传统的桌面工具来说就像Google Docs之于Word一样。不过高级的CAT工具既提供在线版也提供桌面版，还不强迫您在两个不兼容的公司之间做出选择。\n字数统计（word count）\n见分析（analysis）\n工作、主和参考翻译记忆（working, master and reference TM）\n保持事物井然有序是一项由来已久的挑战。如果你不把它处理好，结果会是垃圾进，垃圾出。在翻译项目中，一个好的管理方法是将一个TM指定为主版本（来自主版本的翻译优先于其他版本）；将另一个TM指定为工作TM（新的、未经审校的翻译存储在工作版本中，保持主版本的纯净）；其余翻译记忆则作为参考（主版本TM的内容可能不够全面）。\nXLIFF\nXML本地化交换文件格式的缩写，由OASIS维护的标准。实际上，它是一种文件格式，允许在源/目标双语形式的工具之间传递可翻译文本。\n可扩展标记语言（XML; eXtensible Markup Language）\n一种极为通用的格式，用于将结构化信息存储在机器可读的文件中。对于人来说也具有一定的可读性。翻译的大量内容来自XML文件，特别是当内容的来源是CMS系统时。一般来说，除非您是本地化工程师，否则您不需要了解XML的详细信息。\nX-translate\n你已经完成了一半的文件翻译工作，其中有大量的注释和状态各不相同的句段。这时，你的客户打电话给你说：“嘿，我们的编辑很忙，我们有一个修改过的源文件，我们实际上需要你翻译这个文件，而不是上周的那个。”如果您的CAT工具有X-translate功能，这将不是问题。X-translate将原始源文档与更新的源文档进行比较，逐句段进行，并重新记录你的工作，包括注释、忽略的QA警告、句段状态和所有其他内容。如果源文本的句段有变化，那就保持一个未翻译的初始状态。这样你可以翻译更改的部分，并在之前停止的地方继续翻译。", "filename": "2019-03-24-cat-glossary.md"}, {"id": 269, "text": "\ndate: 2019-03-24 16:43:50+08:00\nlayout: post\ntitle: 将各种格式文件转换为纯文本内容\ncategories: 技术随笔\ntags: CAT\n\n一个搜索引擎要检索文件的内容，首先要把提取它的纯文本内容。\nApache Tika就是这样一个工具，它可以提取doc、docx、pdf等格式文件的文本内容。\n使用Tika facade，可以完成提取文本的操作：\n```java\nimport java.io.File;\nimport java.io.IOException;\nimport org.apache.tika.Tika;\nimport org.apache.tika.exception.TikaException;\npublic class TikaExtraction {\npublic static void main(final String[] args) throws IOException, TikaException {\n  //Assume sample.txt is in your current directory              \n  File file = new File(\"sample.txt\");\n\n  //Instantiating Tika facade class\n  Tika tika = new Tika();\n  String filecontent = tika.parseToString(file);\n  System.out.println(\"Extracted Content: \" + filecontent);\n\n}       \n}\n```\n以上代码来自：https://www.yiibai.com/tika/tika_content_extraction.html。\nTika还支持处理音视频，提取元数据。\n不过Tika也有不支持的文件，比如idml格式的文件。这时，可以选择okapi的tikal，把文件转换为xliff后再提取xliff的纯文本内容。\n我制作了这样的一个把各种文件提取为纯文本的web工具all2txt，代码在此：https://github.com/xulihang/all2txt", "filename": "2019-03-24-convert-files-to-plain-text.md"}, {"id": 270, "text": "\ndate: 2019-03-31 19:38:50+08:00\nlayout: post\ntitle: 文摘\ncategories: 收集\ntags: \n\n学习阮一峰的每周分享，把看到的文章摘录下来。不过我不会每周更新，只是统一在一篇文章里进行收录。讲技术细节的文章不做整理，主要是一些议论文类的。\nDo the right thing, Wait to get fired\n原文：https://brendansterne.com/2013/07/11/do-the-right-thing-wait-to-get-fired/\n招聘网站Indeed创办人Brendan Sterne的一篇文章，引起了热议。引用的谷歌员工的话如下：\n\nNew Google employees (we call “Nooglers”) often ask me what makes me effective at what I do.  I tell them only half-jokingly that it’s very simple: I do the Right Thing for Google and the world, and then I sit back and wait to get fired.  If I don’t get fired, I’ve done the Right Thing for everyone.  If I do get fired, this is the wrong employer to work for in the first place.  So, either way, I win.  That is my career strategy.\n\n意思是这个员工能力很好，他会选择做对公司和世界都有用的东西。如果公司没有开除他，说明他的确做对了。如果开除了他，说明这家公司并不是一家好公司。大公司里有一套约束人的制度，要求员工遵守。但他们又希望员工能打破常规，带来点新的东西。\n在我看来，有时员工新入职时就有改变公司，改变世界的雄心，但大型企业存在的复杂规则有它存在的道理，在没有彻底了解的情况下想实现自己的理想是不容易的。如果不想花很久时间来搞清这套规则，可以先去制度简单的公司。这个在外企当过实习生的我也是深有体会。\n人存在的意义\n原文：《存在主义心理治疗》读书笔记\n\n存在主义理念把世界看作是偶然的，也就是任何事情都可能是另一副样子。人构成了自身、自己的世界以及在这个世界中自身所处的情境。不存在“意义”。在宇宙中没有宏大的设计，没有指导生活的原则，除非个体自己创造这些原则。因此，最根本的问题变成了：需要意义的个体如何在一个没有意义的世界中找到意义？\n\n《存在主义心理治疗》这本书本身比较晦涩难懂，我关心的是人存在的意义到底是什么。人存在的意义其实是自己定义的。在生活中，我们可以通过帮助别人、实现自己的目标等方式来获得意义感。忙碌起来，有意义感，焦虑也会减少，这样心理疾病就可以得到治疗。\n名人名言录\nhttp://www.defprogramming.com这一网站收集了很多计算机领域专家的名言。\n比如，我看了一条鼠标发明者Douglas Engelbart关于创新的观点：\n\nThese days, the problem isn't how to innovate; it's how to get society to adopt the good ideas that already exist.\n\n我的理解是我们现在的社会并不缺乏创新，难点在于怎么把新的东西在社会中应用起来，这可能会遇到很大的阻力。\n职场\n每天在领英看到很多《哈佛商业评论》推送的职场文章。\n\n\nMaking Joy a Priority at Work\n排球比赛中运动员分工明确，每次得分，每次获胜都是一次激励。职场中成就感、与他人的连接等带来的快乐也是可以和竞技比赛的相仿的。\n\n\nThe Surprising Power of Simply Asking Coworkers How They’re Doing\n人都希望有归属感，被人关注。在工作中问问同事他在做什么，可以增进彼此的关系。\n\n\nHow to Tell If a Company’s Culture Is Right for You\n如何知道公司的文化是不是适合自己？面试的时候，被面试人和面试官之间可能说了不少谎话，很难获得对公司的正确认识。这时可以采取咨询公司的员工，要求实习一段时间等方法来获得正确的认识。\n\n", "filename": "2019-03-31-articles-digest.md"}, {"id": 271, "text": "\ndate: 2019-04-03 16:09:50+08:00\nlayout: post\ntitle: 技术传播领域的工具\ncategories: 收集\ntags: 技术写作\n\n技术传播的工具其实和常见的桌面出版工具有很多相似之处，不过主要的功能是用来写技术文档。技术传播者主要的工作应该是创造内容，但是我们往往会花费很多时间在工具的学习。而且，现在可以选择的工具真是太多了。现在，我打算做一个收集，并做简单的介绍。\n商业软件\n商业软件一般提供了很好的集成式的软件环境，用户只需要注重内容的写作。它们一般都支持DITA等基于XML格式的标准，支持所见所得的方式进行编辑，也可以切换到代码编辑模式，支持从单一文件生成多种目标格式。商业软件一般都宣传自己简单易用，用户支持好，相较免费软件，学习成本较低。\nOxygen XML Editor\n从名字可以看出，Oxygen是一款XML编辑器，在技术写作方面主要和DITA、Docbook等标准配合使用。它的界面清爽，可视化编辑工作做得不错。基于DITA-OT，它可以从DITA文件生成很多目标格式的成品文档。它的帮助文档也做得很丰富。\n\nXmetal Author Enterprise\n世界上第一款所见即所得的XML编辑器（1.0版发布于1999年）。它主要是支持DITA和SGML文件的编辑，和Oxygen的提供的功能相近，帮助文档和案例也很丰富。但我测试下来，输入时没有好的自动提示，发生错误也不指出具体哪里错了，只是跳转到对应的片段，使用起来不是很方便。有些操作，比如在编辑bookmap文件时再新建一个topic，做得比较隐蔽，不看文档还不知道怎么操作。\n\nAdobe Framemaker\nFramemaker最近几年一直在推基于DITA的结构化文档。相比于以前像Word一样基于样式的，比较自由的方式，结构化的写作对使用的元素有严格要求。内容都是存储在结构化的元素里，用户不用管样式，更多的是要管用什么元素，元素有什么属性。\nFramemaker有三种视图模式：XML View、Author View和WYSWYG View。XML模式就是XML代码编辑模式，这时菜单也会相应改变，添加XPath、XSLT等操作。WYSWYG View就是所见即所得模式，内容会被预览为一个A4 PDF的内容，有一个窗口，可以显示文档的结构。Author View也是所见即所得的，不过更像Word里的Web视图。\n使用Framemaker可以打开上面Oxygen的示例文件，因为都是基于DITA，可以在两个软件中操作，不过Oxygen使用的一些自定义元素，比如修订用到的元素，就没有效果了。\n\nFramemaker也算是一款老牌的商业软件，但是国内的教程很少，有的话大多是很早之前的了，所以只有看官方文档。这个视频介绍得不错：https://my.adobeconnect.com/structuredframemaker17/\n另外还有官方推荐的免费的入门教程：https://courses.techcommtools.com/p/fm2019intro/\nFramemaker属于Adobe的技术传播套件（Technical Communication Suite），套件里还有RoboHelp、Captivate、Acrobat等其它组件。Robohelp和madcap比较类似，更简单易用，captivate专注电子学习，acrobat是专业的PDF编辑软件。\nMadCap Flare\nMadCap Flare并不采用DITA，而是使用了自己的一套类似html的xml格式，文件名都是htm。它也是基于主题（topic）和同源开发（single sourcing）的概念设计的。它支持导入framemaker、robohelp或者dita的项目文件，把这些文件转换为自己格式的文件。\n\n这是一个madcap项目的结构，可以感受一下：\nC:.\n│  AllAboutSanDiego.htm\n│  Beer.htm\n│  Food.htm\n│  Home.htm\n│  SanDiegoAttractions.htm\n│  SanDiegoCuisine.htm\n│  \n├─PrintOnlyTopics\n│      Copyright.htm\n│      PrintTOC.htm\n│      Resources.htm\n│      TitlePage.htm\n│      \n└─Resources\n    ├─Images\n    │      balboapark.png\n    │      balboapark.png.props\n    │      Bullet1.png\n    │      \n    ├─MasterPages\n    │      HomePage.flmsp\n    │      OtherTopics.flmsp\n    │      \n    ├─PageLayouts\n    │      Chapters.flpgl\n    │      Copyright.flpgl\n    │      \n    ├─Stylesheets\n    │      MainStyles.css\n    │      StylesForHomePage.css\n    │      \n    └─TableStyles\n            BasicAlternateRows.css\n            Simple.css\n其实就相当于下一部分会提到的jekyll，提供一套主题，然后用户基于这套主题添加和管理内容。madcap使用起来并不是很直观，而且会被限制在它这个环境。\n与Madcap Flare配套的还有一系列软件，比如Madcap lingo，是类似于SDL Trados的计算机辅助翻译软件，可以用来翻译madcap flare的项目。\n使用上述这类商业软件，初次使用也还是需要花挺多时间摸索的。不过它们都有共通性。比如都有Index、Glossary，都是基于主题的，都可以给输出进行各种参数的设置。商业软件使用的格式不同，但基本可以互操作。\n开源软件\n开源软件更加丰富，而且衍生出一整套工具链和方法。一般采用的方法是docs-as-code，文档即代码，用写代码的方式写文档。\n程序员应该更加喜欢这类模式：可以使用免费的称手的编辑器，比如visual studio code；使用简易化的标记语言，比如markdown、restructuredText、asciidoc；还可以用git来进行版本控制和团队协作，不需要复杂的CMS系统。\n其实程序员写代码时，就通常把文档写在代码里。于是就产生了把用来说明程序的类、函数的内容，自动提取出来生成API文档的工具，比如Python语言有Sphinx，Java有javadoc，C有Doxygen。\n另外还有一种API，是REST API，主要是一些网络接口，和上面提的API不一样，也有专门的工具，叫Swagger。\n这样的方式对技术传播人员提高了要求，要掌握一些编程工具。\n文档需要有发布机制，也要能像商业软件和DITA一样，从单个文件格式发布到多种目标格式。上面提到的Sphinx、javadoc和doxygen都能将内容以网页的形式发布。Sphinx支持的格式更多，PDF、网页、LaTeX等都能支持。\n另外，现在也流行静态网页生成器，比如jekyll，可以基于liquid语法定制一套主题，自动从配置文件、markdown文件生成网站。\n有一篇讨论doc like code的主题演讲博客，可以看一下：https://idratherbewriting.com/2018/03/09/docs-as-code-tools-and-workflows-denver-presentation/，里面提到了如何解决文档即代码模式缺少的传统DITA模式具有的内容重用等功能。\n另外也可以使用基于XML的DITA和docbook，xml语言的编辑会比较复杂，可以选择vim之类的编辑器，或者专门的XML编辑器，比如XML Copy Editor，来编写XML，然后使用对应的工具生成文档。\n其它的，比如man page等等，就不提了。\n在线软件\n分为传统CMS和基于git类服务的系统。\n在线CMS系统：\n\neasyDita\nSDL Tridion Docs \n\ndocs-as-code：\n\nread the docs，sphinx项目的托管平台\nGitHub，一般都用GitHub托管git项目\nGitbook，用git+markdown来写作，有一套自己的工具链\n\n其它\n还有很多传统的文档格式，比如Windows的HLP、CHM格式，也有新兴的ePub格式，这类本质都是基于html技术实现的。上面提到的软件基本都能生成这类格式的目标文件。\n一些工具：\n\neasyCHM\nCalibre\n\n另外，除了文本，帮助文档还可以以音视频、虚拟现实、增强现实和聊天机器人等新的方式存在，这样涉及的工具就更多了。", "filename": "2019-04-03-tech-comm-tools.md"}, {"id": 272, "text": "\ndate: 2019-04-06 22:02:50+08:00\nlayout: post\ntitle: 你想出名吗\ncategories: 随笔\ntags: \n\n你想出名吗？我想人们应该都想出名，让自己被别人知道。但是，出名后的生活会更快乐吗？\n出名后作为公众人物，影响力大了，要负起更多责任。同时，出名后就没有那么自由了，出门会被人认出来，是明星的话还要服从公司的安排，衣着和言行都要注意。\n再说软件开源，本来只是一个不知名的项目，开发者一个人维护的。突然，这个项目得到了很多的关注，很多人参与了进来，那这个时候，原来的维护者会有很大的压力。另外，有了别人的参与，自己对项目的掌控或多或少就不自由了。有人能给代码做帮助是很好的，但也怕有人水平不够，反而带来了困扰（参见：我为什么不再公开开发Yin语言）。\n其实，事物的发展是螺旋式上升的，一个阶段有一个阶段的特点。成名前的生活可能更无忧无虑，而成名后可以凭借自己的影响力做更多有意义的事情。做好自己，找到不同阶段的快乐，如果有机会成名，就把握住机会。\n这篇文章的动因是我看了杨超越的经历，发现在18线女团CH2时，超越过得还是挺快乐的，但是参加创造101后，明显承受了不少压力。这时，用粉丝的话说应该就是，回不去了，就快点长大吧。\n其实，对于大多数人，没有成名，在一个小众的圈子里可以过得很好。CH2当初定位高校偶像女团，受众主要是大学生。我前面的一篇博文，讲的小众编程语言，B4X的用户一般都是个人开发者，有很多非专业出身的用户，也有很多资深的程序员用户，因为圈子小，讨论的氛围好，学习的资料也比较清楚。hi-pda论坛，主要针对电子书用户，采用邀请注册，做小而精的论坛。\n但是小众的坏处就是影响面小，有时候会缺少经济支持，这个问题也是自古就存在的。所以，人内心深处，应该多少都是渴望成名的吧。", "filename": "2019-04-06-do-you-want-popularity.md"}, {"id": 273, "text": "\ndate: 2019-04-06 20:54:50+08:00\nlayout: post\ntitle: 小众编程语言\ncategories: 随笔\ntags: \n\n最近每天会看很多实习生招聘的描述。技术类的岗位，前端一般要求掌握HTML、CSS和JS，常用的框架之一，比如Vue、React和Angular，然后最好还会webpack等工具。后端一般用Java，要求掌握Spring框架，还有Mybatis。大数据一般要求会SQL，Hadoop、Elasticsearch等。而机器学习，除了掌握原理，也要求掌握主流框架，比如TensorFlow、PyTorch等。\n一般公司要求实习生掌握主流的语言，比如C\\C++、Java、Python、PHP还有最近流行起来的Go等。作为公司的软件，需要有一个团队进行合作，选择学的人多的容易招人，招到的实习生来了不用怎么培训，做的工作也容易交接。当然，也有公司使用冷门的语言，比如Grammaly，使用Common Lisp开发的后端。但它也用别的语言，采用微服务的形式，把不同语言开发的产品结合起来。\n主流公司都要使用主流的语言，那小众语言的存在价值是什么呢？这个世界是多样化的，程序语言也同样是各式各样的，满足不同群体的需要。比如Lisp是函数式编程语言、R用于统计、Erlang用于开发容错性高的产品、Scratch是图形化编程。而B4X是可以用一种Basic风格的语言做到跨平台原生软件的开发。\nB4X是我最熟悉的编程工具是一款小众产品，圈子不大，但好在社区活跃，开发者也很勤奋。B4X使用的Basic语言非常容易学习，而且IDE功能很强大，安装也方便，入门容易，深入学习也不难。其实B4X只是把Basic语言进行转译，转译为Java、Objective-C这样的主流语言，可以使用这些语言的类库，可以说是站在了主流语言的肩膀之上的一款小众产品。\n针对个人开发者或是小团队，其实B4X非常实用，开发高效，一种语言完成多个平台的开发。B4X的B4XSerializator库可以把不同平台的数据类型以二进制的形式存储，要用时可以转为平台的原生数据类型，类似于Protobuf。除了UI部分，其它Basic语言写的代码基本可以共享。\n编程的主要目的是解决问题，使用哪种语言其实并不重要，重要的是找到合适的语言和工具。\n如果你的目的是进入大公司，应该学习主流语言。如果，你想用编程开发小软件，解决自己工作的问题，或者做一个自由职业者，那选择什么语言是比较自由的。如何选择语言，可以看看这篇文章：我该学习哪门编程语言。", "filename": "2019-04-06-minority-programming-language.md"}, {"id": 274, "text": "\ndate: 2019-04-09 19:46:50+08:00\nlayout: post\ntitle: 那些译者的故事\ncategories: 收集\ntags: \n\n本文主要收集含有翻译笔记、感想之类内容的译者博客，并给出一些文章示例。\n\n《Redis实战》、《Go Web编程》译者黄健宏：http://blog.huangz.me/\n翻译笔记之一：关于改动原文的思考，原文写得不够好，译者可以进行修改。译者就应该把自己的理解注入到译文当中， 让译文比原文更好， 而不仅仅是翻译那么简单。\n翻译笔记之四：消除人称代词，英文中常出现we、you等人称代词，翻译到中文不能全直接翻译为我和你。\n\n\n《黑客与画家》译者阮一峰：http://www.ruanyifeng.com/\n我要翻译Paul Graham了，谈翻译Hackers and Painters。\n\n\n《翻译漫谈》作者余晟：https://www.luanxiang.org/blog/\n翻译漫谈：我的翻译经历\n\n\nKotlin 官方参考文档开源版翻译，灰蓝天际：https://hltj.me/\n开源文档翻译的质量保障实践，翻译 Kotlin 官方参考文档的实践经验\n\n\n", "filename": "2019-04-09-stories-of-translators.md"}, {"id": 275, "text": "\ndate: 2019-04-13 22:34:50+08:00\nlayout: post\ntitle: 软件著作权的申请\ncategories: 随笔\ntags: \n\nBasicCAT虽然是开源软件，但还是申请了国内的软著保护自己的权利。软著其它的用处还有可以申请国家高新企业、满足国内安卓市场上架要求、然后学术上算是一个成果。软著的申请花了我不少时间，我也稍微记录一下。\n作品版权和软件著作权是由中国版权局进行审核和登记的，软件主要的登记流程是去官网在线填写登记表，打印出来，并准备软件文档、代码、身份证复印件，把资料送到版权局。\n版权局在各大城市有几个分理处，但华东地区只收华东地区户口的申请人的申请，而北京接受全国的。如果不能亲自送，可以邮寄。\n版权局的官网网站只支持IE浏览器，网站上有软件登记的具体说明和邮寄地址。\n这里讲一些注意事项：\n\n软件的全称应该以软件和系统结尾，比如BasicCAT计算机辅助翻译软件。\n程序语言应该填写常见的，比如Java、Basic，冷门的可能不通过。\n注意代码和文档，要求单面打印，页眉是软件全称和版本号，右上角要求标页码。\n申请表中著作权人栏目中省份城市应与身份证上面的地址一致。\n\n我申请了三次，一次寄到北京被要求补正，一次去上海的华东版权大厅被告知北京户口不能在华东办理，最后在1月7日在线登记然后把资料寄到北京，2月20日审核通过并进行受理，4月2日复审通过并登记。所以邮寄过去，不加急的话大概等三个月。\n版权登记现在还在用纸质材料，希望以后能不用邮寄材料，完全通过在线的方式提交，然后审核的话，先机器自动检测一下提交的材料是否正确，如果正确最好能够直接通过，不正确就给出修改意见，这样会方便很多。当然，如果全自动了，版权局的不少同志可能就清闲了。", "filename": "2019-04-13-software-copyright-application.md"}, {"id": 276, "text": "\ndate: 2019-04-21 20:26:50+08:00\nlayout: post\ntitle: 想了就去做\ncategories: 随笔\ntags: \n\n空的时候，人就容易多想。\n一天，我刷微博时看到图灵社区底下的一条关于引进的外国技术类书籍的评论，说书是好的，但翻译太差，还不如出影印版。我想图书翻译一直存在质量的问题，这不就是存在一个市场吗，能不能做一个平台，提高图书翻译的质量？\n我当时的构想是做一个出版社和译者的联络平台。译者一般都有擅长的领域，我们可以按国家图书分类做一个领域的划分，让译者选择自己擅长哪些领域。出版社要翻译某些领域的书时，可以根据领域分类找到合适的作者，查看作者的简历。如果出版社愿意把书开源，那么译者之前的翻译成果也可以显示在上面。\n这个平台同时还提供对于计算机辅助翻译软件的支持，主要是多人翻译时进行知识共享。然后一个领域的书翻译好后，译者和出版社可以选择是否公开翻译过程中生成的翻译记忆库、术语库等等。特别是术语，很多领域的新词很难找到对应的翻译，如果有一个开源的专业领域术语库，对该领域的翻译应该有很大的帮助。这样的事情，国外的mymemory，国内的tmxmall其实就有在做，但做得并不算好。\n于是我就直接联系出版社，推荐了我的辅助翻译软件，希望通过了解出版行业来完善这一想法。但现实是，让传统出版社人员采用新技术并不是容易的事。首先公司内，策划编辑、文字编辑和美术编辑都有了各自熟悉的一套工具，而且各自做好自己的工作，很少想着怎么让整体的工作效率更高。我想想推广软件还是先从个人译者开始容易点。但是出版社是提供图书翻译稿件的，如果本来一个InDesign制作的图书，只给译者一个PDF，然后整理译文后用Word重新排版，会耗费很多工夫，在各个流程还都有可能引入错误。因为问题太过复杂，我暂时放弃了做联络平台的构想。\n我本来对我的平台是很有期待的，但实际研究后发现难度不小，我的目标，提高中国图书翻译的质量，太过于远大。很多行业就像一台大型的机器，在不断运转中，很难做大的改变，零部件的替换也不容易。需要我们对这些机器有足够的了解，然后耐心地对其进行改变。\n所以，想了就去做，不是说马上做出一个成品，而是研究应不应该做，怎么样做好之后再决定要不要做。\n实践出真知。16年我去美国，本来以为美国是个繁华的国家，结果去了美国南部城市后，发现和我想的很不一样。市中心很小，人都住在郊区，交通不便，要开汽车，公共交通落后，基础设施破落，子女可能住在离父母很远的地方。我一个人，如果徒步，很难去什么地方玩耍。当然，在旧金山和纽约这样的地方是可以的，和国内的城市很像，人口密集，比较热闹。\n很多时候，一开始想的和后来做的会不一样。有时候想得很坏，但做的结果很好。有时候想得很好，但做了才发现当时的想法有很多不足的地方。", "filename": "2019-04-21-you-have-an-idea-and-you-do-it.md"}, {"id": 277, "text": "\ndate: 2019-04-28 20:17:50+08:00\nlayout: post\ntitle: 语言的歧义性和多样性\ncategories: 随笔\ntags: \n\n自然语言本身是充满歧义的，因为歧义，给人们的理解带来了困扰，但也因为歧义的存在，给了人们不少欢乐。比如很多笑话提到的中国大败日本，今借小张5000元。还有不少修辞，比如双关，爸爸的花儿谢了。语言是模糊的，中文的“打”有多重意思，可以搭配很多词，打电话、打人、打的。一词多义一般人能判断，对于机器则不是一件容易的事。\n语言还是多样的，一个事物，可能有不同的说法。比如番茄、西红柿都是指一种蔬菜。\n最近翻译技术文档，讲求术语的统一。这让我在翻译时需要记录之前的单词都是怎么翻译的，虽然CAT软件有术语管理，但还是需要手动进行管理，比较麻烦。而且目前BasicCAT也没有Trados那样的Adaptive MT，不能让机器翻译实时学习，所以常常需要手动去改，比如把噪音改成噪声。\n技术文档使用受控的语言是有必要的，这个领域更适合机器来做，受控语言能保证质量。而创作型文本，则会充分使用语言的多样性，这才是人能发挥智慧的领域。", "filename": "2019-04-28-ambiguity-and-diversity-of-language.md"}, {"id": 278, "text": "\ndate: 2019-04-28 21:09:50+08:00\nlayout: post\ntitle: 机器翻译译后编辑注意事项\ncategories: 随笔\ntags: \n\n因为机器翻译的应用，会出现以往人直接翻不会出现的一些问题，需要特别注意。\n很多时候机器对原文存在理解问题，这时需要发挥人的智慧，理清原文的结构，理解原文的正确意思并用目的语表达出来。\n我会把平时翻译中碰到的值得注意的地方整理到这里。\n注意搭配关系\n比如以下的机器翻译对原文的动宾搭配存在理解错误。\n原文：\n\nreduce time taken to execute the network and memory\n\n百度翻译：\n\n减少执行网络和内存所需的时间\n\n这里execute的宾语是network，不包括memory。memory是reduce的宾语。另外，直接翻译为减少内存不符合中文表达，改为减少内存占用。\n合适的翻译：\n减少执行网络所需的时间和内存占用\n其实这里的原文也是可以改进的，memory比较短应该放在前面，time有修饰成分比较长应该放在后面。为了用好机器翻译，有时候得先做一些译前编辑。\n注意一词多义\n原文：\n\nEnsure you have enough processing and storage capacity\n\n百度翻译：\n\n确保您有足够的处理和存储容量\n\ncapacity一词多义，有能力和容量这两种意思，放在processing和storage后面没有问题。但翻译到中文需要进行区别。\n合适的翻译：\n确保您有足够的处理能力和存储容量\n类似的还有do、make、improve这类含义宽泛的词。\n可以用机器翻译翻译一下这句话试试：improving latency and efficiency，是不是结果存在词语搭配的问题。\n注意漏译\n神经网络模型存在漏译问题，主要是翻译过程提前终止。另外结果可能更“达”了，但却不“信”了：行文流畅了但意思变了。\n注意语序的调整\n机器翻译一般是直译，有时也会针对语序问题做调整。但较复杂的情况下，还是会存在问题。\n原文：\n\nIn written tests, PHL participants could write the codes for each letter of the alphabet with 98% accuracy versus 59% for control.\n\n有道翻译：\n\n在书面测试中，PHL参与者可以为字母表中的每个字母编写代码，准确率为98%，而对照组为59%。\n\n原文中的could表示概率，不是能力。如果准确率放在后面，could的意思就变成了能力，表示参与者有能力编写代码，但实际意思应该是参与者编写代码的准确率是98%。\n合适的翻译：\n在书面测试中，PHL参与者可以98%的准确率为字母表中的每个字母编写代码，而对照组为59%。\n编辑策略\n\n先阅读机器翻译。MTPE是一种注重翻译效率的方法，随着机器翻译质量的提高，可以通过直接阅读机器翻译来了解原文内容，然后进行编辑。\n注重内容的准确性，但不必进行过多润色。一般译后编辑项目，读者阅读的主要目的是获得信息，不必做精细的优化，只要保证术语一致、语句通畅、信息准确就行。\n译文难以读懂时，选择从原文重新翻译。\n\n相关资料：\n\nTAUS译后编辑指南\nTAUS译后编辑定价指南\n人工智能给翻译带来的便利和挑战 – 李长栓\nAdvice to freelance translators on MT post-editing projects\n", "filename": "2019-04-28-attentions-of-machine-translation-post-editing.md"}, {"id": 279, "text": "\ndate: 2019-04-28 21:07:50+08:00\nlayout: post\ntitle: 英译中风格指南\ncategories: 随笔\ntags: \n\n最近翻译技术文档，存在很多中英混杂的情况，这时翻了一下翻译公司的风格指南，以及出版社的审稿要求，发现有一个规范还是很重要的。\n复数\n英文的缩写词后面带一个s表复数，比如TVs，翻译时如果保留英文缩写，得去掉s。TVs->TV。\n标点\n英文用半角标点，中文使用全角标点，这是要注意的地方。另外中文全角标点，比如逗号，不像英文那样后面要跟一个空格。\n书名号\n英文中表示图书名，一般用斜体表示，中文得用书名号把名字包起来。\n全角括号与半角括号\n英文翻译为中文，有时碰到术语，想用括号把原文也保留。比如张量(Tensor)。如果括号里的内容是英文和数字，没有中文，那么括号用半角括号，否则用全角括号。\n空格\n一般中文和英文之间要有空格：Windows 应用程序。但我觉得不是绝对的，看着顺眼就好了。\n特殊标记\n商标、上下标翻译过来得保留，比如Intel®翻译为英特尔®。\n单位换算\n出版社一般要求把英里这些单位换成国内使用的，比如英里换成千米，华氏度换成摄氏度。\n其它的一些繁琐规则我就不列出了，什么每个列表项用不用句号结尾要保持统一，列表条目数量最好不要多于9条，尽量使用被动句之类的。\n风格指南要有，但也应该给译员一定的自由度，这篇博客也可以参考一下：不要给专业译员太长的翻译风格指南 ", "filename": "2019-04-28-style-guide-of-English-to-Chinese-translation.md"}, {"id": 280, "text": "\ndate: 2019-05-01 20:16:50+08:00\nlayout: post\ntitle: Trados插件开发\ncategories: 技术随笔\ntags: CAT\n\nSDL Trados是目前行业里占有率最高的计算机辅助翻译软件之一，给Trados开发插件比开发和推广一款新的软件要容易很多，有更多的实际需求，而我写的BasicCAT更适合对工具选择的自由权较大的用户。所以，还是得专门研究下主流CAT软件，以应对客户定制化的需求。下面是教程内容。\n可以开发什么样的插件\nTrados虽然闭源，但是开放了很多API，主要有以下几种[^apis]：\n\nCore，核心框架\nFile Support Framework，定制文件过滤器，以支持新的文件格式\nProject Automation，定制项目的自动化操作\nTranslation Memory，可以使用第三方的翻译记忆或者机器翻译\nIntegration，定制界面，比如修改右键菜单、制作新的视图\nVerification，用于QA检查\nBatch Task，添加批处理操作\nTerminology Provider，提供第三方术语\n\n环境要求\nTrados是使用Windows上的.net框架，用C#编写的，所以插件的开发也使用C#。开发插件需要以下环境：\n\nWindows\nVisual Studio\nTrados Templete for Visual Studio\n\n目前虽然出了Trados 2019，主流的还是使用2015-2017版，需要搭配Visual Studio 2017使用，模板下载：https://marketplace.visualstudio.com/items?itemName=sdl.TradosStudiotemplatesforVisualStudio。\n实战 —— 开发一个机器翻译插件\n比较简单的就是开发机器翻译插件了，目标是做一个mymemory的插件，调用这个API: MyMemory: API technical specifications，实现以下效果：\n\n官网的示例可以参考：Creating a Translation Service Provider Plug-in。\n新建项目\n安装完成后，打开Visual Studio，有四类SDL插件开发模板可选，要开发机器翻译选择Translation Provider。\n\n项目结构如下：\n│  SDL Translation Provider3.sln\n│\n├─SDL Translation Provider3\n   │  MyTranslationProvider.cs\n   │  MyTranslationProviderFactory.cs\n   │  MyTranslationProviderLanguageDirection.cs\n   │  MyTranslationProviderWinFormsUI.cs\n   │  pluginpackage.manifest.xml\n   │  PluginResources.resx\n   │  SDL Translation Provider3.csproj\n   │  packages.config\n   │\n   ├─Properties\n   │      AssemblyInfo.cs\n   │      PluginProperties.cs\npluginpackage.manifest.xml是项目的声明文件，定义了项目的描述、名称和作者等信息，这里我们还可以添加第三方的dll。比如添加如下内容[^3rd_Dll]以包括Newtonsoft.Json.dll。\nxml\n  <Include>\n    <File>Newtonsoft.Json.dll</File>\n  </Include>\nPluginResources.resx是项目的资源文件，可以用来存储图像和文字内容，主要是Trados插件的名字、图标等。\nMyTranslationProvider是项目的主类，继承自ITranslationProvider[^ITPIF]，定义了插件是否支持某些功能，比如片段搜索、翻译等等，另外还有很多属性。\nMyTranslationProviderLanguageDirection是针对一个语言对方向，提供翻译功能。\nMyTranslationProviderFactory是一个插件的扩展类，定义了插件的URI Scheme，Trados使用这个Uri来区别不同的插件。\nMyTranslationProviderWinFormsUI是UI相关的类，可以用WinFrom定制设置界面，比如机器翻译的API密钥。\n构建插件\n首先，在项目属性里添加一个强名称签名文件，满足构建的要求。然后点击生成，会自动生成.sdlplugin这个插件文件并进行安装。\n具体的修改\n大多数的属性和方法都还没有实现，使用了以下抛出错误的代码。\ncsharp\nthrow new NotImplementedException();\n这样插件没有办法正常运行，我们可以参考TranslationMemoryApi文档和这个MT Enhanced Trados Plugin的源代码进行修改。\n这个机器翻译插件的主要功能就是利用mymemory提供的API，把原文片段发送给它，获得翻译，然后解析json格式的返回，把译文显示在Trados的TM视图。而提供片段翻译的方法是Direction类的SearchSegment，返回一个SearchResults类型的结果，以下是我改的Direction类的内容：\n```csharp\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing Sdl.LanguagePlatform.Core;\nusing Sdl.LanguagePlatform.TranslationMemory;\nusing Sdl.LanguagePlatform.TranslationMemoryApi;\nusing Sdl.Core.Globalization;\nusing System.Windows.Forms;\nusing System.Net;\nusing Newtonsoft.Json;\nusing Newtonsoft.Json.Linq;\nnamespace SDL_Translation_Provider1\n{\n    class MyTranslationProviderLanguageDirection : ITranslationProviderLanguageDirection\n    {\n        #region ITranslationProviderLanguageDirection Members\n    private MyTranslationProvider _provider;\n    private LanguagePair _languageDirection;\n    private TranslationUnit inputTu;\n\n    public MyTranslationProviderLanguageDirection(MyTranslationProvider provider, LanguagePair languages)\n    {\n        #region \"Instantiate\"\n        _provider = provider;\n        _languageDirection = languages;\n        #endregion\n    }\n\n    private SearchResult CreateSearchResult(Segment searchSegment, Segment translation,\nstring sourceSegment)\n    {\n        #region \"TranslationUnit\"\n        TranslationUnit tu = new TranslationUnit();\n        tu.SourceSegment = searchSegment.Duplicate();//this makes the original source segment, with tags, appear in the search window\n        tu.TargetSegment = translation;\n        #endregion\n\n        tu.ResourceId = new PersistentObjectToken(tu.GetHashCode(), Guid.Empty);\n\n        int score = 0; //score to 0...change if needed to support scoring\n        tu.Origin = TranslationUnitOrigin.MachineTranslation;\n        SearchResult searchResult = new SearchResult(tu);\n        searchResult.ScoringResult = new ScoringResult();\n        searchResult.ScoringResult.BaseScore = score;\n        tu.ConfirmationLevel = ConfirmationLevel.Draft;\n\n        return searchResult;\n    }\n\n    public ImportResult[] AddOrUpdateTranslationUnits(TranslationUnit[] translationUnits, int[] previousTranslationHashes, ImportSettings settings)\n    {\n        throw new NotImplementedException();\n    }\n\n    public ImportResult[] AddOrUpdateTranslationUnitsMasked(TranslationUnit[] translationUnits, int[] previousTranslationHashes, ImportSettings settings, bool[] mask)\n    {\n        throw new NotImplementedException();\n    }\n\n    public ImportResult AddTranslationUnit(TranslationUnit translationUnit, ImportSettings settings)\n    {\n        throw new NotImplementedException();\n    }\n\n    public ImportResult[] AddTranslationUnits(TranslationUnit[] translationUnits, ImportSettings settings)\n    {\n        throw new NotImplementedException();\n    }\n\n    public ImportResult[] AddTranslationUnitsMasked(TranslationUnit[] translationUnits, ImportSettings settings, bool[] mask)\n    {\n        throw new NotImplementedException();\n    }\n\n    public bool CanReverseLanguageDirection\n    {\n        get { throw new NotImplementedException(); }\n    }\n\n    public SearchResults SearchSegment(SearchSettings settings, Segment segment)\n    {\n        Segment translation = new Segment(_languageDirection.TargetCulture);//this will be the target segment\n\n        SearchResults results = new SearchResults();\n        results.SourceSegment = segment.Duplicate();\n\n        translation.Add(DoTranslate(_languageDirection, inputTu.SourceSegment.ToPlain()));\n        results.Add(CreateSearchResult(segment, translation, \"source\"));\n        return results;\n\n    }\n\n    public SearchResults[] SearchSegments(SearchSettings settings, Segment[] segments)\n    {\n        SearchResults[] results = new SearchResults[segments.Length];\n        for (int p = 0; p < segments.Length; ++p)\n        {\n            results[p] = SearchSegment(settings, segments[p]);\n        }\n        return results;\n    }\n\n    public SearchResults[] SearchSegmentsMasked(SearchSettings settings, Segment[] segments, bool[] mask)\n    {\n        if (segments == null)\n        {\n            throw new ArgumentNullException(\"segments in SearchSegmentsMasked\");\n        }\n        if (mask == null || mask.Length != segments.Length)\n        {\n            throw new ArgumentException(\"mask in SearchSegmentsMasked\");\n        }\n\n        SearchResults[] results = new SearchResults[segments.Length];\n        for (int p = 0; p < segments.Length; ++p)\n        {\n            if (mask[p])\n            {\n                results[p] = SearchSegment(settings, segments[p]);\n            }\n            else\n            {\n                results[p] = null;\n            }\n        }\n\n        return results;\n    }\n\n    public SearchResults SearchText(SearchSettings settings, string segment)\n    {\n        Segment s = new Sdl.LanguagePlatform.Core.Segment(_languageDirection.SourceCulture);\n        s.Add(segment);\n        return SearchSegment(settings, s);\n    }\n\n    public SearchResults SearchTranslationUnit(SearchSettings settings, TranslationUnit translationUnit)\n    {\n        //need to use the tu confirmation level in searchsegment method\n        inputTu = translationUnit;\n        return SearchSegment(settings, translationUnit.SourceSegment);\n    }\n\n    public SearchResults[] SearchTranslationUnits(SearchSettings settings, TranslationUnit[] translationUnits)\n    {\n        SearchResults[] results = new SearchResults[translationUnits.Length];\n        for (int p = 0; p < translationUnits.Length; ++p)\n        {\n            //need to use the tu confirmation level in searchsegment method\n            inputTu = translationUnits[p];\n            results[p] = SearchSegment(settings, translationUnits[p].SourceSegment); //changed this to send whole tu\n        }\n        return results;\n    }\n\n    public SearchResults[] SearchTranslationUnitsMasked(SearchSettings settings, TranslationUnit[] translationUnits, bool[] mask)\n    {\n        List<SearchResults> results = new List<SearchResults>();\n\n        List<KeyValuePair<string, string>> errors = new List<KeyValuePair<string, string>>();\n\n\n\n        int i = 0;\n        foreach (var tu in translationUnits)\n        {\n            if (mask == null || mask[i])\n            {\n                var result = SearchTranslationUnit(settings, tu);\n                results.Add(result);\n            }\n            else\n            {\n                results.Add(null);\n            }\n            i++;\n        }\n\n        if (errors.Count > 0)\n        {\n            string messages = \"\";\n            foreach (KeyValuePair<string, string> pair in errors)\n                messages += pair.Key + \":  \" + pair.Value + \"\\n\";\n            MessageBox.Show(messages);\n        }\n\n        return results.ToArray();\n    }\n\n    public System.Globalization.CultureInfo SourceLanguage\n    {\n        get { throw new NotImplementedException(); }\n    }\n\n    public System.Globalization.CultureInfo TargetLanguage\n    {\n        get { throw new NotImplementedException(); }\n    }\n\n    public ITranslationProvider TranslationProvider\n    {\n        get { return _provider; }\n    }\n\n    public ImportResult UpdateTranslationUnit(TranslationUnit translationUnit)\n    {\n        throw new NotImplementedException();\n    }\n\n    public ImportResult[] UpdateTranslationUnits(TranslationUnit[] translationUnits)\n    {\n        throw new NotImplementedException();\n    }\n\n    #endregion\n\n    private String DoTranslate(LanguagePair langPair, String text)\n    {\n\n        string sourceLang = langPair.SourceCulture.Name;\n        string targetLang = langPair.TargetCulture.Name;\n\n\n\n        //create the url for the translate request\n        string url;\n\n        url = String.Format(\"https://api.mymemory.translated.net/get?q={0}&langpair={1}|{2}&de={3}\", text, sourceLang, targetLang,\"mail_address@163.com\");\n\n\n        string result = \"\"; //this will take the result from the webclient\n\n        //delete the follwoing line for production...only to be able to trace http calls using Fiddler\n        //ServicePointManager.ServerCertificateValidationCallback = delegate { return true; };\n\n        using (WebClient webClient = new WebClient())\n        {\n            webClient.Encoding = Encoding.UTF8;\n            try\n            {\n                result = webClient.DownloadString(url);  //gets us the json data indicating supported source languages for this target\n            }\n            catch (WebException e) //will come back 400 bad request if there is a problem\n            {\n                throw e;\n            }\n        }\n\n        String returnedResult = parseReturnedResult(result);\n\n        return returnedResult;\n    }\n    private string parseReturnedResult(string input)\n    {\n\n        JObject jo = (JObject)JsonConvert.DeserializeObject(input);\n        String result = jo[\"responseData\"][\"translatedText\"].ToString();\n        return result;\n\n    }\n\n}\n\n}\n```\n因为我们只是实现机器翻译，其它什么对于翻译记忆使用的片段搜索等功能就可以略过。另外还有密钥的存储、设置界面的定制等等，我这里就不具体写了，官网文档更详细。\n其它文档：\nSDK合集\n参考资料：\n[^apis]: SDL AppStore 开发人员计划 SDK \n[^3rd_Dll]: 3rd Party Assemblies and SDL Trados Studio Plugins\n[^ITPIF]: ITranslationProvider Interface", "filename": "2019-05-01-SDL-Trados-plugins-development.md"}, {"id": 281, "text": "\ndate: 2019-05-01 22:05:50+08:00\nlayout: post\ntitle: CAT工具的定制性\ncategories: 技术随笔\ntags: CAT\n\n上一篇文章讲到了Trados的插件开发，其实主流的CAT软件，比如Trados、memoQ、Deja Vu和OmegaT等，都支持开发插件。OmegaT我相对熟悉一点，除了插件，它还支持运行脚本。\n另外，句段分割、质量检查规则，以及自定义文件格式过滤器（如纯文本、XML解析），也都是属于可定制的内容。\n为什么要提供定制，说到底还是翻译会碰到的问题实在太多了，软件很难做到包罗万象，适合所有的问题。而且，很多时候，做进去的功能对于某些问题很适合，对于某些问题则一点关系都没有。所以，通过插件来定制解决特殊问题的能力是很重要的。\n雪人CAT的一个特点就是它针对不同的语言对推出不同的版本，这样对源语和目标语的针对性更强，软件操作也极大地简化，比如创建项目只需选择是英到中还是中到英。而且因为只需要包含中英的词典和模型，软件体积也会小巧不少。\nTrados的机器插件开发，把TM和MT混在一起，增加了开发的复杂度。其实调用机器翻译是一个很简单的过程，就是调用API，然后可以再用一个替换词表，对生成的结果进行些替换什么的。Trados机器翻译插件的类多达起码4个，而BasicCAT的机器插件只需一个类，几十行代码即可完成，相对来说简单很多。因为我喜欢把一切都设计得很简单，而B4J也正是这样的工具。\n雪人CAT和Trados插件的例子涉及了定制的细化和定制的难度问题。\n除了计算机辅助翻译软件，其它大多数软件也都提供定制功能。比如Office的宏和VBA、WordPress的插件等等。而开源的软件，可以直接修改源码做定制，Linux有很多的发行版，都是做了定制化。欧委会基于OmegaT开发了DGT-OmegaT以加强其术语功能。相比于闭源软件通过开放API提供有限的定制功能，开源软件的定制性要强大得多。\n不过，有时候也要考虑，是基于软件定制容易，还是重新写一个工具容易。比如我碰到一个Notepad++批量修改编码的插件，需要安装Python等一系列依赖，还不一定好使。那我干嘛不直接用独立的工具呢。", "filename": "2019-05-01-on-customizability-of-CAT.md"}, {"id": 282, "text": "\ndate: 2019-05-02 14:16:50+08:00\nlayout: post\ntitle: CAT工具的自动传播功能\ncategories: 技术随笔\ntags: CAT\n\nCAT工具一般有提供一个叫做自动传播的功能，它的英文原文是auto-propagation。我一直觉得这个词翻译得不好，听起来很别扭。在Trados、Deja Vu和OmegaT中，它被翻译为自动传播，而memoQ中则被翻译为自动沿用。\n我们看一下词典里的释义：\n\nMultiplication or increase, as by natural reproduction.\nThe process of spreading to a larger area or greater number; dissemination.\nPhysics The act or process of propagating, especially the process by which a disturbance, such as the motion of electromagnetic or sound waves, is transmitted through a medium such as air or water.\n\n第一个释义对应于中文的繁殖，一个变成多个。第二个释义是散布到更广泛的区域。第三个释义是物理意义上的传播，比如声音的传播。\n中文的传播含义比较广泛，可以对应英文的communication、dissemination等词。现代汉语词典的解释是广泛散布、推广。\n那么CAT里auto-propagation的作用是什么呢？当一个片段被翻译后，如果下文有相同内容的片段，就会用译文进行填充。其实就相当于在向别的相同片段推广这个译文。\n所以翻译为自动传播还是合理的。这也是CAT中广泛使用一个术语了。\n在OmegaT中，翻译是以翻译记忆格式进行存储的。打开项目文件时，会自动读取翻译记忆，把译文填充进去。这样的一个好处是如果原文更新了，还是能把翻译过的内容自动填进去。而基于XLIFF的项目文件往往需要执行重新填充的操作，比如memoQ提供的X-translate功能。\n建立项目时可以选择是否传播翻译。如果不传播，那么存储的每条翻译记忆都会带上上下文信息，如下：\nxml\n <tu>\n      <prop type=\"file\">Apple.docx</prop>\n      <prop type=\"prev\">Processing</prop>\n      <prop type=\"next\">I love my country.</prop>\n      <tuv lang=\"EN\">\n        <seg>Capacity</seg>\n      </tuv>\n      <tuv lang=\"ZH\" changeid=\"xulihang\" changedate=\"20190502T061438Z\" creationid=\"xulihang\" creationdate=\"20190502T061438Z\">\n        <seg>能力</seg>\n      </tuv>\n    </tu>\n    <tu>\n      <prop type=\"file\">Apple.docx</prop>\n      <prop type=\"prev\">Storage</prop>\n      <prop type=\"next\">Processing</prop>\n      <tuv lang=\"EN\">\n        <seg>Capacity</seg>\n      </tuv>\n      <tuv lang=\"ZH\" changeid=\"xulihang\" changedate=\"20190502T061430Z\" creationid=\"xulihang\" creationdate=\"20190502T061430Z\">\n        <seg>容量</seg>\n      </tuv>\n    </tu>\n这样基本可以解决片段文本相同、需要的译文不同的问题。\n如果选择传播翻译，那么译文会有默认翻译和可选翻译这两个选项。\n\n默认翻译会用于自动传播，可以根据时间知道两个片段是同时修改的，而修改一个片段也会影响另一个片段。\n\n可选翻译保存时会包含上下文信息，以做区别。翻译记忆中是这样保存默认翻译和可选翻译的：\n```xml\n\n<tu>\n  <tuv lang=\"EN\">\n    <seg>Capacity</seg>\n  </tuv>\n  <tuv lang=\"ZH\" changeid=\"xulihang\" changedate=\"20190502T032959Z\" creationid=\"xulihang\" creationdate=\"20190502T032959Z\">\n    <seg>容量</seg>\n  </tuv>\n</tu>\n<tu>\n\n\n<tu>\n  <prop type=\"file\">Apple.docx</prop>\n  <prop type=\"prev\">Processing</prop>\n  <prop type=\"next\">An&lt;t0/&gt; Updated Version.</prop>\n  <tuv lang=\"EN\">\n    <seg>Capacity</seg>\n  </tuv>\n  <tuv lang=\"ZH\" changeid=\"xulihang\" changedate=\"20190502T033532Z\" creationid=\"xulihang\" creationdate=\"20190502T033414Z\">\n    <seg>能力</seg>\n  </tuv>\n</tu>\n\n```\nOmegaT的传播功能，更多可以参考官方文档：Propagation and one-to-many matching HowTo", "filename": "2019-05-02-auto-propagation-function-on-CAT-tools.md"}, {"id": 283, "text": "\ndate: 2019-05-03 10:26:50+08:00\nlayout: post\ntitle: 翻译记忆服务器探究\ncategories: 技术随笔\ntags: CAT\n\n翻译记忆服务器提供一个集中式的翻译记忆服务。用户通过API，获得匹配的翻译记忆条目，不需要在本地拥有一份翻译记忆库，也不需要在本地进行计算。\n开源的在线本地化软件Pootle支持两种在线翻译记忆服务：自己开发的amaGama、基于Elasticsearch的翻译记忆服务。\namaGama\namaGama是用Python+Flask+PostgreSQL构建的，它的代码数量不多，目前用户只能通过API获得匹配，不能实时更新远程数据库。翻译记忆数据库需要本地更新（从PO、TMX和XLIFF导入双语数据）。\n为了提高速度，有使用memcache进行缓存，也有考虑存储编辑距离的计算结果。它主要的一条SQL查询匹配的语句如下：\npython\nquery = \"\"\"\nSELECT * from (SELECT s.text AS source, t.text AS target, TS_RANK(s.vector, query, 32) * 1744.93406073519 AS rank\n    FROM sources_%s s JOIN targets_%s t ON s.sid = t.sid,\n    TO_TSQUERY(%%(lang_config)s, prepare_ortsquery(%%(search_str)s)) query\n    WHERE t.lang = %%(tlang)s AND s.length BETWEEN %%(minlen)s AND %%(maxlen)s\n    AND s.vector @@ query) sub WHERE rank > %%(minrank)s\n    ORDER BY rank DESC\n\"\"\" % (slang, slang)\nElasticsearch\nElasticsearch是基于lucene的高性能分布式全文检索引擎。Pootle通过以下Elasticsearch的查询语句获得匹配：\npython\nes_res = self._es_call(\n            \"search\",\n            index=self._settings['INDEX_NAME'],\n            doc_type=language,\n            body={\n                \"query\": {\n                    \"match\": {\n                        \"source\": {\n                            \"query\": unit.source,\n                            \"fuzziness\": 'AUTO',\n                        }\n                    }\n                }\n            }\n        )\n每个条目存储的结构如下(python dict)：\n{\n    '_index': self.INDEX_NAME,\n    '_type': unit['store__translation_project__language__code'],\n    '_id': unit['id'],\n    'revision': int(unit['revision']),\n    'project': unit['store__translation_project__project__fullname'],\n    'path': unit['store__pootle_path'],\n    'username': unit['change__submitted_by__username'],\n    'fullname': fullname,\n    'email_md5': email_md5,\n    'source': unit['source_f'],\n    'target': unit['target_f'],\n    'iso_submitted_on': iso_submitted_on,\n    'display_submitted_on': display_submitted_on,\n}\n然后通过编辑距离筛选结果。ElasticSearch它本身支持的最大编辑距离是2，用于修复拼写错误。这里的编辑距离计算是amaGama自己实现的。\n我测试下来，觉得利用Elasticsearch的全文检索功能预先检索相关片段，然后对所得的片段用编辑距离筛选是一个不错的模式。片段第一次检索会按相关度进行排序，编辑距离可以确定具体的相似度。直接检索检索结果比使用编辑距离有一些优点，比如China vs Japan和Japan vs China，两者的含义是一样的，但如果使用编辑距离计算相似度，差别就比较大。所以可能也不妨提供个选项，不使用编辑距离筛选。\n如果Elasticsearch是本地服务，用户的翻译单元会添加进去，如果是远程的，则不是自动添加。\n除了Pootle，Transifex也有使用Elasticsearch作为翻译记忆的后端，具体可以看这篇博文：Elasticsearch at Transifex。\n其它\nBasicCAT目前采取的方法是中央服务器只存储翻译记忆，用户在使用时，会把远程的翻译记忆先同步到本地，然后在本地进行相似度计算。这对于共享项目翻译记忆还是很好用的。但是如果记忆库很大、或者记忆库需要保密，则不是很好使了。\n类似的还有OmegaT的协作方法，基于SVN/Git服务器共享翻译记忆tmx文件。\n2019/11/18更新\nMaxPrograms发布了TMEngine这一开源的翻译记忆服务器程序，提供常见的翻译记忆操作，支持mapdb、mysql、mariadb等数据库。它的算法不是很先进，索引占据很大的空间，检索效果还不准确。\n下面是它的一些API操作，使用curl演示。\n建立TM：\n```\ncurl -X POST \"http://localhost:8000/TMServer/create\" -H 'Content-Type: application/json' -d'\n{\n  \"name\": \"First Memory\",\n  \"type\": \"MapDbEngine\"\n}'\n```\n导入翻译记忆：\ncurl -X POST \"http://localhost:8000/TMServer/import\" -H 'Content-Type: application/json' -d'\n{\n  \"id\": \"1574061624814\",\n  \"file\": \"E:\\\\FileRecv\\\\通用领域记忆库10_英中.tmx\",\n  \"project\": \"Main TM\"\n}'\n查看导入结果或者查询结果：\n```\ncurl -X POST \"http://localhost:8000/TMServer/status\" -H 'Content-Type: application/json' -d'\n{\n  \"process\": \"1574061941890\",\n}'\n{\n  \"result\": \"Completed\",\n  \"data\": {\"matches\": [{\n    \"similarity\": 61,\n    \"origin\": \"1574061624814\",\n    \"source\": \"Are you from Sandu?<\\/seg><\\/tuv>\",\n    \"properties\": {\n      \"creationdate\": \"20191118T152541Z\",\n      \"project\": \"Main TM\",\n      \"tuid\": \"1574061949773\",\n      \"creationid\": \"xulihang\"\n    },\n    \"target\": \"你是来自三都吗？<\\/seg><\\/tuv>\"\n  }]},\n  \"status\": \"OK\"\n}\n```\n模糊匹配：\ncurl -X POST \"http://localhost:8000/TMServer/search\" -H 'Content-Type: application/json' -d'\n{\n  \"id\": \"1574061624814\",\n  \"text\": \"you are famous.\",\n  \"srcLang\": \"en-us\",\n  \"tgtLang\": \"zh-cn\",\n  \"similarity\": 50,\n  \"caseSensitive\": false\n}\n'\n片段搜索：\ncurl -X POST \"http://localhost:8000/TMServer/concordance\" -H 'Content-Type: application/json' -d'\n{\n  \"id\": \"1574061624814\",\n  \"text\": \"computer\",\n  \"srcLang\": \"en-us\",\n  \"limit\": 5,\n  \"isRegexp\": false,\n  \"caseSensitive\": false\n}\n'\n另外商业软件SDL Trados也早就提供了GroupShare在线服务，能供多人共享翻译记忆，可以参见它的博文：翻译记忆库技术的过去和现在。\n参考资料：\n\nTranslation Memory - Pootle\namaGama documentation\n", "filename": "2019-05-03-exploration-of-translation-memory-servers.md"}, {"id": 284, "text": "\ndate: 2019-05-04 09:55:50+08:00\nlayout: post\ntitle: CAT工具的互操作性\ncategories: 技术随笔\ntags: CAT\n\n世界上存在各式各样的计算机辅助翻译工具，如何在不同的工具间共享数据？\n这个问题也可以表述为如何实现CAT工具的互操作性。为了实现互操作性，我们需要大家都支持的中间格式，而这类中间格式已经有了标准，目前主要有以下四种：\n\nTMX，用于翻译记忆交换\nTBX，用于术语交换\nSRX，用于句段分割规则交换\nXLIFF，用于本地化数据交换\n\n有关这几个标准的介绍可以参考我之前写的文章：TMX、TBX、SRX，LISA的三大翻译标准、 XLIFF简介。\n下面主要讲一下实现的难点。\n翻译记忆的交换\n翻译记忆除了保存原文和译文，还有创建者、创建时间、上下句段文本、备注等各种信息，这方面各个软件的支持都不一样。比如OmegaT是依赖TMX文件存储翻译的，会给它拓展很多的标签。这些拓展的标签导入另一个软件时可能就会丢失。\n另外还有格式的问题，行内格式一般用标签表示，可以转为为tmx支持的标签，如<bpt>、<ept>、<ph>等。但处理同样的docx文件，不同的CAT软件生成的tag数量和位置不一定匹配。\nXLIFF\nXLIFF是一种中间格式，SDL Trados Studio使用的SDLXLIFF格式是一种修改过的XLIFF文件。利用这类中间文件，可以实现翻译项目在不同的CAT软件中进行。比如用Trados处理docx文件生成的sdlxliff可以放到OmegaT里翻译，翻译好后用Trados打开，继续相关操作。\n但是像OmegaT这样不生成中间格式，只在内存里存储数据的软件，就难以做到这点。有点讽刺的是闭源的Trados居然比开源的OmegaT在这点上做得更好。当然，OmegaT的这种模式也有好处[^did]，而且它出生的时候XLIFF格式都还没有制定[^dgt]。\n另外还有句段状态的对应问题。OmegaT里句段状态只有两种，已翻译和未翻译。只要句段有输入文本，就算翻译。而Trados的句段状态有很多，比如草稿、已翻译、未翻译、已审阅、已签发等等。句段状态信息会存储到XLIFF文件里。因为OmegaT的句段状态比Trados少，所以OmegaT的句段状态转到Trados里是可以的，Trados转到OmegaT则会有句段状态的不对应问题。\n总结\n每个CAT工具都有自己的特点，要在保留自己的特点的同时做到和其它软件的互操作性不是一件容易的事情，即使有相关的标准，也只能做到软件间的部分兼容。\n[^did]: OmegaT - Dublin Computational Linguistic Research Seminars \n[^dgt]: Interoperability between DGT-OmegaT and SDL Trados Studio", "filename": "2019-05-04-interoperability-of-CAT-tools.md"}, {"id": 285, "text": "\ndate: 2019-05-15 22:37:50+08:00\nlayout: post\ntitle: 图片翻译\ncategories: 技术随笔\ntags: CAT\n\n有时看到国外的文章不错，就想翻译过来。但没有原始文档，译文的版式只能做到尽量还原。其中图片的处理就是比较费劲的一件事。\n网上的文章一般都配有图片，除了有起到插画功能的图片，还有很多长图，相当于把一个排版精美的说明书以图片形式发布。这些图片可能是Photoshop、InDesign等软件生成的，因为没有原始格式，我们只能直接处理图片。如果有原始格式，那用对应的软件打开翻译或者使用CAT软件翻译就行。这里讨论的是JPG、PNG这类格式的图片的翻译。\n一般方法\n\n\n提取文字并翻译\n如果文字较多，需要先提取文字，导入CAT软件进行翻译。提取文字可以使用常见的OCR软件。\n我开发的tesseract-clipboard是一个不错的选择，可以对存在剪贴板里的截图进行文字识别操作。直接使用ABBYY FineReader这类软件对整个图片进行处理会有很多不需要翻译的内容被识别进去。\n\n\n处理图片\n我使用Gimp处理图片，首先框住原文部分，用背景色进行填充，然后输入译文。整个操作全手动进行，比较费劲。\n\n\n自动方法\n自动方法需要识别图片中文字的区域，得到对应的top、left、height、width之类的位置和大小信息，并把原文导出到一种文件格式，用CAT翻译这个文件，然后再进行译文回填：新建一个图层，用背景填充，覆盖原文区域，再新建一个译文文字图层；结果导出为gimp、photoshop之类的软件使用的格式供后期进行修改。\n不过以上还只是构想。全自动的工具用深度学习算法是可以实现的，但不一定能保证效果。目前来看，还是类似上述的计算机辅助图片翻译方法较为合适、\n图片翻译与PDF翻译\n其实图片的翻译和扫描版PDF的翻译是类似的，解决好图片翻译的问题，很大程度上也可以实现PDF格式的翻译。\n非扫描版PDF，支持文字复制、图片提取，但处理也比较复杂，很难直接把原文字符替换为译文字符。PDF转Word，遇到复杂的页面也很难保证效果，没有原始文件的话，大概率还是需要重新排版。\n如果图片翻译技术有了突破，直接PDF转图片，然后翻译的话，就不用研究复杂的排版问题了。不过这种方式也会有其它问题，比如原文和译文字符长度不匹配，没有空间容纳或者空白空间过多的问题。\n更新\n我开发了一款图片翻译软件ImageTrans，以上功能已经实现了。", "filename": "2019-05-15-translation-of-images.md"}, {"id": 286, "text": "\ndate: 2019-05-21 20:27:50+08:00\nlayout: post\ntitle: 译者应该了解的数字营销知识\ncategories: 随笔\ntags: 翻译 营销\n\n数字营销(digital marketing)通过数字传播渠道来推广产品和服务，常见的渠道有网站、社交网络、邮件等。\n把翻译作为一个服务来看待，主要接触的客户都是企业。企业需要翻译的内容，有内部资料，也有企业的官网、社交账号的内容等等。其中有不少市场、公关类的文本。假设一个外国的企业要打入中国市场，它的官网除了介绍性的内容、在线工具的界面，还有数百篇的博客文章，翻译这时往往不能仅仅做好内容的翻译，还得做一些营销与运营的工作。特别是甲方的in-house翻译，一般都要身兼多职。蒙特雷的翻译与本地化管理专业就有设置营销课程。而技术写作(technical writer)岗位涉及的工作其实也类似，所以这个职业有很多种名字，比如content strategist, information developer等等。\n以网站的推广为例。\n用户访问网站一般是通过链接或者搜索引擎。\n链接\n链接分为内链和外链。内链就是内部的网页互相引用，比如维基百科的词条跳转。而外链则存在于第三方网站，比如有人觉得这个网站的某篇文章很好，进行了引用。译者要做的就是注意管理链接，并适当进行补充。\n搜索引擎\n搜索引擎爬取网站并索引，用户使用关键词检索，搜索引擎查询相关结果，并使用特定算法进行排序，有使用反向链接数量多的，有使用TF-IDF（基于关键词频率和含该词的文档频率进行加权）的，有给知名站点加权的（比如百度百科总是排前面）。\n从搜索引擎获得的流量有两种，一种是自然流量(organic traffic)，一种是付费流量(paid traffic)。\n付费流量主要通过购买搜索引擎和网络广告商的推广服务。\n比如针对某几个关键词，购买百度的推广服务，让网站排在前面。不过百度会在搜索引擎结果页(SERP)中标注哪几条是广告，我一般都是无视广告结果的。百度的推广服务还支持投放广告。网上的站点基本都是通过广告来获益的，主要的广告商有百度推广、阿里妈妈、Google Ads等等。而企业作为广告主，会购买这类服务，投放自己的广告，用户每次点击广告，企业都要给展示广告的网站付费，这个叫做PPC(pay per click)。\n付费的方式一般见效快，但投入的成本高，而且一旦不再投钱，效果可能就立刻消失了。长远的方式是吸引自然流量。\n而自然流量主要需要做好网页内容的搜索引擎优化(SEO, search engine optimization，利用搜索引擎的规则提高网站在有关搜索引擎内的自然排名)。\n网页的优化，术语叫做On Page Optimization，有人翻译为页面优化。需要注意技术和文字等几个方面。具体可以看这篇文章：页面SEO优化清单：针对用户和搜索引擎优化博客内容，比如关键词的使用，需要注意哪些HTML标签。\n作为国际公司，网站是有多个语言版本的，需要考虑国际化SEO的问题，同样也有技术和文字两个方面。技术方面要考虑语言使用hreflang属性，让搜索引擎知道网页是什么语言的。文字方面，哪些关键词，适合于目标语言国家，可以获得较高的排名。\n另外，翻译的内容是集成进原来的网站还是另外再搭一个也会有很多问题需要考虑。且不说重新搭比较麻烦，关于使用二级域名（如en.xulihang.me）还是目录（如xulihang.me/en）就有很多讨论，很多人认为前者不好，因为不能获得主站在搜索引擎中的权重。\n与搜索引擎优化搭配的还有搜索引擎营销(SEM, search engine marketing )和在线名誉管理(ORM, online reputation management)。\n百度的竞价排名就是SEM的一种方式。SEM有很多工具，比如SEMrush、moz等等，它们除了结合Google Analytics等流量统计工具的数据分析自己的网站，还能分析竞争对手的网站，了解竞争对手在利用哪些关键词获得流量，从而给自己的网站添加带这些关键词的内容。\nORM需要做到在网上维持企业的一个正面形象，那就得占领主流的媒体。所有很多时候需要发一些软文。比如针对百度，贴吧、百科、文库都是需要占领的地方。\n对于译者而言，大多数时候要考虑的还是SEO的问题，只有把内容做好了，才能做到长期吸引用户。而多了解文字翻译以外的东西，对于翻译任务也可以有更好的把握，这些是人们常说的本地化、全球化与单纯的翻译间的区别。\n搜索SEO translation，可以发现更多相关文章。\n当然，如果不喜欢营销类的文本，译者可以选择从事其他类型的翻译。\n2020.10.31更新：\n补充一个跨境电商的例子：在翻译或者撰写文案过程中，通常要做关键词研究。比如灭蚊灯，在英文中对应mosquito killer lamp和bug zapper等表达，文本需要尽可能涵盖这些关键词。\nGoogle Ads提供了一个关键字规划师(Keyword Planner)的功能，可以查找相关的关键词。\n\n译者自身也经常需要对自己做推广，数字营销方面的内容也是需要用到的。\n相关链接：\n\nZac的SEO每天一贴\nSEMrush\nMoz SEO Learning Center\nNetconcepts中国\n", "filename": "2019-05-21-digital-marketing-for-translators.md"}, {"id": 287, "text": "\ndate: 2019-05-22 16:02:50+08:00\nlayout: post\ntitle: HTTP 301重定向\ncategories: 网络\ntags: \n\n最近在考虑改变域名的问题，目前博客使用的是blog.xulihang.me这一域名，想转换到xulihang.me。但其实前者已经有了不错的权重，没有必要迁移。\n不过，我还是研究了一下，怎么把让xulihang.me的访问跳转到blog.xulihang.me。\n主要使用的是HTTP 301状态码，表示永久迁移，这样搜索引擎会把xulihang.me和blog.xulihang.me看做一个网站。\n我的xulihang.me解析到一台VPS，开了http服务，但因为没有什么内容，就简单地给首页添加了一段JavaScript，3秒后进行跳转：\njs\nvar i = 3; \nvar intervalid; \nintervalid = setInterval(\"fun()\", 1000); \nfunction fun() { \n    if (i == 0) { \n        top.location.href='https://blog.xulihang.me';\n        clearInterval(intervalid); \n    } \n    document.getElementById(\"mes\").innerHTML = i; \n    i--; \n}\n这样的不足之处是返回的状态码不是301，真的迁移域名的话是不合适的。\n这里，我使用lighttpd的url.redirect进行跳转。添加以下代码到lighttpd.conf：\n$HTTP[\"host\"] =~ \"^[a-z]*\\.*(.*)$\" {\n  url.redirect = ( \"^/(.*)\" => \"https://blog.xulihang.me/$1\" )\n}\n这样，xulihang.me或者www.xulihang.me这样的域名都会自动跳转到blog.xulihang.me。并且状态码是301。以下是curl的结果：\n```\nroot@ip-172-31-35-138:/etc/letsencrypt/live/xulihang.me# curl -v xulihang.me\n* Rebuilt URL to: xulihang.me/\n*   Trying 18.223.21.100...\n* TCP_NODELAY set\n* Connected to xulihang.me (18.223.21.100) port 80 (#0)\n\nGET / HTTP/1.1\nHost: xulihang.me\nUser-Agent: curl/7.58.0\nAccept: /\n< HTTP/1.1 301 Moved Permanently\n< Location: https://blog.xulihang.me/\n< Content-Length: 0\n< Date: Wed, 22 May 2019 08:17:27 GMT\n< Server: lighttpd/1.4.45\n<\n* Connection #0 to host xulihang.me left intact\n```\n\n另外，我还考虑了HTTPS的问题。可以使用Let's encrypt的免费证书。\n这里，我之前使用了ocserv，会占用443端口。不过好在我使用docker运行的ocserv，可以较为方便地将443映射到其它端口。\n具体操作可以参考这篇文章：lighttpd支持HTTPS\n获得的证书90天后过期，到时候重新运行一遍就行了。\n参考链接：\n\nPermanent redirect (301) with lighttpd\ncertbot\n\n其它服务器程序的配置方法：\nnginx: https://www.nginx.com/blog/creating-nginx-rewrite-rules/", "filename": "2019-05-22-http-301-redirect.md"}, {"id": 288, "text": "\ndate: 2019-05-24 09:21:50+08:00\nlayout: post\ntitle: 翻译中用到的Office技巧\ncategories: 技术随笔\ntags: CAT\n\n最近接到的很多翻译任务，都使用了一些Office的技巧，还是挺有想法的，我这里整理一下。\nExcel的vlookup\nvlookup是Excel中的一个常用函数，它的语法规则如下：\nVLOOKUP(lookup_value,table_array,col_index_num,range_lookup)\n它可以查询某个值在另一张表中对应的内容。比如在sheet1中有需要翻译的内容，第一列是原文，第二列是译文：\n原文  译文\nword    （待翻译）\nbook    （待翻译）\nsheet2里有之前的翻译记忆：\n原文  译文\nword    单词\ntext    文本\n使用以下公式可以找到word这个词在翻译记忆表格中是否有完全匹配，有则进行填充，无则显示#N/A错误：\nVLOOKUP(A2,Sheet2!A:B,2,FALSE)\n更多见微软的文档：VLOOKUP function\n制作Word双语段落对照\n很多时候项目要求提交双语对照的内容，但是Trados没有提供这一功能（虽然内部有开发双语合并工具），于是有人想出来了利用Trados可以不处理Word的隐藏文本来制作双语段落对照的方法。\n选中文本设置隐藏的方法有很多，比如设置特殊格式，制作表格等等。\n我这里讲一下表格的方法，在交给译员翻译之前需要做的处理。\n\n选中文本，点击插入-表格-文本转换成表格，选择1列，文字分割位置为段落标记。\n插入第一列的内容，可以生成第二列，两列文本相同。设置第一列文本为隐藏文本。\n点击表格-布局-转换为文本，文本分隔符是段落标记。\n\n这样，译员翻译好后生成文档，再把隐藏的原文取消隐藏，就可以得到双语段落对照。\n当然，这是不能修改CAT工具时的一种workaround。其实完全可以处理xliff文档，把每个trans-unit标签下target标签的内容替换为原文+译文。\n只翻译Excel表格中需要翻译的行与列\n有时候，Excel表格只需要翻译部分行与列，比如一张中英数据混杂的表格，可能只需翻译表头，不用翻译其它内容。\n这时我们可以把不需要翻译的行与列设置隐藏。\n测试Okapi Rainbow是支持这一操作的，除此之外，也可以在Rainbow的Filter设置的Excel部分选择是否翻译表名、哪些前景色的文字需要排除，哪些行与列需要排除。", "filename": "2019-05-24-office-tricks-used-in-translation.md"}, {"id": 289, "text": "\ndate: 2019-05-25 19:21:50+08:00\nlayout: post\ntitle: 翻译质量\ncategories: 随笔\ntags: 翻译\n\n最近收到TransPerfect的审校，发现他们严格按照SAE J2450这一质量评估标准来做的。这里想讨论有关翻译质量的问题。\n翻译质量评估标准(Translation Quality Metrics)\n业界的标准有LISA QA、SAE J2450、TAUS DQF等等。SAE J2450将错误分为以下几类：\n\nWrong Term \nWrong Meaning \nOmission \nStructural Error \nMisspelling \nPunctuation Error \nMiscellaneous Error \n\n除了文本的错误，还有格式、标点等错误类型，毕竟翻译服务交付的是一个使用类似docx格式的成品。\n错误类型有对应的罚分，统计错误和罚分，最终可以得到一个分数，如果分数过低，译稿就不通过，到时候稿费可能也不会给。\nSAE J2450是针对汽车行业设计的，这类文本使用的算是受控语言，对词、句式的选择有很大的限制。所以，使用这类评估方法是有必要的。\n这里提一下，在做英译中时尤其要注意汉语的语法问题，这是汉语母语译者的一大问题，主要是从小没有接触语法方面的训练，翻译出来的内容对不对光凭语感。这也是汉语本身存在的问题，不如英语严谨。所以英译中审校需要有很好的汉语水平，且对语法问题敏感。\n技术类翻译可以使用这些标准，但是文学类需要灵活变化的文本则并不怎么适用。因为这时很难做到字对字的对应，而且很多漏译是合理的。本来原文的创作就有随意性，那为什么翻译就要一板一眼的呢？\n主流的CAT软件还集成了根据这些模型进行审校和打分的功能，比如Trados的TQA和memoQ的LQA功能。和根据规则自动检查错误的QA不同，TQA目前主要还是人工对错误进行识别和分类。\n以下是Trados编辑TQA的界面：\n\n导出的Word文件可以附带批注，不过测试有时候生成的docx文件会有问题。\n\n如何衡量翻译质量(how to assess translation quality)\n如何衡量翻译质量其实是翻译理论的核心问题[^quality]。\n就比如直译和意译的问题，a piece of cake，我们都知道翻译为小菜一碟，而如果一定要直译，翻译成一块蛋糕，大多数人都会判断这个翻译翻错了。\n从功能学派的角度看，对翻译质量的衡量应该结合翻译的类型和目的。结合现在很火热的人工智能和机器翻译，谷歌翻译提供网页翻译，用户即使不懂该网页的语言，也能通过机器翻译了解大概内容。用户的目的是获取信息，这时候对翻译质量的要求并不高，对即时性、性价比要求较高。如果翻译的内容是一份航空航天领域的技术文档，那就是一个字也不能错，否则就可能导致空难。所以，这时候对翻译质量的要求是严格还原原文的内容，可以使用上面的翻译质量评估标准。\n而翻译的内容如果是文学作品，那可能又要求译者隐身，尽量让读者看不出这是翻译过来的。这时对翻译的评估就变得模糊。一般的图书翻译，由译者和编辑共同完成，译者完成翻译后，编辑进行润色和改错，使成品符合出版要求。另外，也会对翻译中的难点进行集中讨论，可能一时间没有好的结果，译者出去轧个马路回来就有了灵感。\n讲到翻译的难点就涉及一个不可译的问题，比如很多修辞方法难以翻译，特别是和语言本身关联性很大的押韵等修辞。\n更多论述可以看Juliane House的《TRANSLATION QUALITY ASSESSMENT》。\n什么使我们不懈追求翻译质量(what makes us pursue a perfect translation quality)\n什么使我们不懈追求翻译质量？是爱吗，也是责任。\n翻译质量和译者的主观性有很大的关系。如果译者翻译的内容不是他喜欢和熟悉的，那他只会想着应付任务，不会想着去不断改进翻译。童书译者 Daniel Hahn 一直只做童书的翻译[^hahn]，《冰与火之歌》的译者屈畅六级也没过[^quchang]，但翻译出了高质量的中文译本。\n而在语言服务行业的专业译者更多的是一份责任。医药、航天领域的翻译枯燥吧，但它很重要，翻译好它有意义，而且能得到一笔不错的收入。翻译行业一般分垂直领域，译者在垂直领域做多了，掌握相关内容后，翻译速度和质量也会提高，但仍然需要有耐心和细心。\n翻译质量评估标准相关链接：\n\nLISA QA Metric\nJ2450 Translation Quality Metric \nDQF: Quality benchmark for our industry\n\n参考资料：\n[^quality]: House, J. (2014). Translation Quality Assessment: Past and Present. \n[^hahn]: TRANSLATION Daniel Hahn advocates for children's literature https://www.wordsandpics.org/2019/04/translation-danny-hahn.html\n[^quchang]: 英语六级没过，却翻译了《冰与火之歌》 http://culture.ifeng.com/a/20170825/51754576_0.shtml", "filename": "2019-05-25-on-translation-quality.md"}, {"id": 290, "text": "\ndate: 2019-05-26 10:47:50+08:00\nlayout: post\ntitle: Intel人工智能课程\ncategories: 技术随笔\ntags: AI\n\n4月份的时候接到了一份翻译任务，翻译Intel的人工智能课程（链接：https://software.intel.com/zh-cn/ai/courses，提供讲义、教学视频、工具等）。\n我主要翻译pptx讲稿，在翻译过程中也算是对人工智能有了更深入的认识。这份教材还算容易理解。\n翻译过程中需要查询各种术语，主要参考的机器之心的术语表和tmxmall上的翻译记忆。\n下面介绍下概述性的人工智能简介一课的内容。\n人工智能简介\n定义\n什么是人工智能、机器学习、深度学习。\n机器学习的两种类型：有监督学习、无监督学习。\n使用机器学习的例子：识别虚假的信用卡交易（需要确定使用哪些特征）。\n深度学习使用神经网络，则不需要定义特征(feature)。\n历史\n一些大事件，比如图灵测试的提出。\n两次寒冬：1960-1970，1980-1990\n现在的人工智能因为深度学习的突破性进展、算力的提高和大数据，正火热发展。\n应用\n人工智能在各行各业的落地，比如视频监控，可以不需要人来盯着。\n有监督学习、数据采集与增强\n有监督学习需要使用标注过的数据。数据一般分为特征和目标，比如一封电子邮件，有某些关键词（特征）的话，可以推断为垃圾邮件（目标）。机器学习使用一定的算法来利用这些数据进行训练，并对新的数据做出推理。\n主要的工作流程是：问题陈述-数据采集-数据探索与预处理-建模-验证-决策与部署\n因为提供学习的数据是有限的，生成的模型可能会过拟合，在学习的数据上表现很好，但对于真实数据，表现很差。另外也有欠拟合，不能反应数据的特征。\n一个解决方案是将数据拆分为两组：训练集和测试集。训练集是训练过程中使用的数据，测试集是用于测量性能的数据，可以模拟未知的数据。\n因为机器学习依赖大量数据，所以数据的收集很重要。除了手工制作，还可以利用网上的现成数据，比如维基百科、开源数据集等等。网站的数据一般都要编写爬虫进行获取。\n数据有很多类型，比如文本、音频、图像等等。有的时候图像数据不够，可以通过一定的算法增加图像。比如车牌照片，可以生成不同号码的版本，增加数据量。\n有监督学习需要标注的数据，这一过程由人工来做需要耗费大量精力。可以使用半监督学习来辅助进行标注。\n获取的数据可能还会存在很多质量问题，比如数据中的偏差和异常值问题。\n深度学习\n深度学习直接对大量的数据进行处理。它受到生物学中的神经元的启发。多个特征输入一个神经元，神经元给它们赋予各自的权重，然后通过一个激活函数得到输出。可以有多层神经网络，网络的训练就是要确定合适的权重。\n因为这种完全连接的网络计算需求大，又提出了卷积神经网络。另外，因为训练成本很高，所以一般选择在预训练的数据上进行额外训练，做一种“微调”，叫做迁移学习(Transfer learning)。\n软件和硬件\n软件\nIntel给出了一系列针对Intel CPU进行优化的工具，比如Python的Intel发行版、Intel® Math Kernel Library数学库等等。\n另外还介绍了一些用于数据科学的Python*类库、机器学习框架和一些大数据软件。\n用于数据科学的Python*类库：numpy、pandas、matplotlib、scikit-learn、TensorFlow\n机器学习框架：TensorFlow、Caffe、Theano、MXNet\n大数据：Apache Spark、BigDL\n硬件\n从网络的角度看，有位于中心的数据中心、处于中间的网关还有位于边缘的设备。\n训练通常在数据中心进行，可以提供更高的处理器功率和更多的物理空间。\n网关计算机将信息从边缘设备路由到数据中心，再从数据中心路由出去。\n位于边缘的设备需要和数据中心交换信息，但由于距离太远，所以很多边缘计算应该尽可能有边缘设备自己进行。边缘计算通常用于推理而不是模型训练。\n所需的计算设备是CPU、GPU和专用的人工智能处理器，另外还有FPGA，通过定制化的硬件提供更高的性能。不过人工智能模型映射到硬件并不是一件容易的事情。\nIntel神经计算棒(Intel Movidius Neural Compute Stick)是一个专门用于神经网络推理的便携设备，它里面搭载的Intel Movidius Myriad 视觉处理单元(VPU)就是一种专门的人工智能处理器。它可以增强边缘设备的推理能力，是树莓派这类设备的好搭档。\n其它课程：\n自然语言处理：NLP简介、预处理(nltk、textblob和spaCy)、抽取文本特征、主题模型（LDA潜在语义分析）、文本生成（马尔科夫链、LSTM）、文本相似度（编辑距离、余弦相似度）、机器学习（朴素贝叶斯、词袋模型）、深度学习(word2vec、gensim)。\n时间序列分析：时间序列分析常用于经济预测、股票市场分析、需求计划与预测、异常检测等等。\n计算机视觉：捕获图像、预处理图像、处理图像。涉及传统的及深度学习的计算机视觉内容。\n利用英特尔FPGA进行深度学习推理：英特尔收购了FPGA巨头Altera，也推出了自己的FPGA设备。\n边缘计算机视觉：使用Intel神经计算棒完成计算机视觉任务。\n机器学习和深度学习两门课的实用性很强，目前Intel已经优先给出了中文版本。", "filename": "2019-05-26-intel-ai-courses.md"}, {"id": 291, "text": "\ndate: 2019-05-28 20:14:50+08:00\nlayout: post\ntitle: 翻译与程序员\ncategories: 随笔\ntags: \n\n翻译和程序员这两个职业，我把他们放在一起是因为两者有相似性。\n翻译的基础是语言，程序员的基础是计算机知识。\n语言和计算机，两者都被人称作工具。工具是要用来解决问题的。那解决什么问题呢？这个就得和具体的领域结合了。但是因为领域太多了，人是学不过来的，所以得专注于一些细分领域。\n计算机学科，学科内部有人专门研究图形，有人专门研究安全，也有人专门研究存储。具体到应用，则需要多一些将理论和行业知识结合，进行工程实践的能力。翻译也有分类，有文学翻译、技术翻译等。基本上有多少个行业，就有对应垂直领域的译员和软件。\n基础打扎实了，不见得你能胜任工作。因为还要有领域知识要学。当然基础是做好的工作的前提。\n我们学习基础的时候，虽然苦，但基本都是很快乐。因为我们只需要专注于学习语言、学习计算机知识。\n而真要到以此谋生时，则会遇到各种不如意的事情。\n首先是自由职业还是公司上班的选择。翻译和编程，都是较为容易变现的技能，可以成为自由职业者。但经营好客户关系，不断发掘新的客户，不是每个人都擅长的。所以，为了稳定的生活，大多数人还是得去公司上班。\n在公司里，如果能充分发挥人多力量大的规模效应，可以取得一个人不能完成的成就，比如一些全国人民都用得到的大项目。但开源组织其实也能做到，Linux项目就是一个例子，但一般的开源项目都没有好的商业模式，很难做下去并做好。可以用爱发电，但爱也是有限的。\n然后是对于工作内容的选择。程序员比翻译好的一点是，编程可以自己创造东西，而翻译则受限于原文。在公司内部工作，会受限于各种因素。更不要说是在外包公司，基本上没有什么自己选择的空间。翻译还是写软件，都是在给别人提供服务。\n随之而来的是一个自我实现的问题。作为程序员，除了接受别人给的任务，你是否想自己做一款软件？作为翻译，你是否能主动去发现翻译需求？\n还有很多翻译和程序员，在做了多年本职工作之后，又投身于其他行业。翻译和程序员在接触各种项目时，会接触到不同的行业和岗位。如果他们碰到合适的，那很有可能会转型，做管理、销售、公关、运营，或者自己创业都是有可能的。\n最后，翻译和编程是非常具有创造性、值得热爱的活动。如果当做爱好的话，应该会增加很多幸福感。翻译足以怡情，而编程可以训练思维，并能切实提高工作效率。两者的成品：译文和软件，也都是看得见摸得着的创作成果。", "filename": "2019-05-28-translator-and-programmer.md"}, {"id": 292, "text": "\ndate: 2019-05-30 19:58:50+08:00\nlayout: post\ntitle: 事实与观点\ncategories: 随笔\ntags: \n\n最近看到Sparrho的一篇文章：Science Can Transform The Post-Truth Society，文章提到皮尤的一次研究。该研究从新闻中挑出5条事实和5条观点，让美国人判断。结果判断对全部事实和全部观点的比例分别只有26%和35%。\n具体问题和调查结果如下图：\n\n判断事实与观点(Fact or Opinion)是英语写作、英语新闻课上常提到的话题。网上还有很多的视频和小游戏，教孩子如何判断。一些论述，比如苹果是一种水果，狗是最好的宠物，会展示给孩子，让孩子判断。这类论述一般比较简单有趣，不过对于大人可能有点无聊。\n但我发现，现在人们在网上花大量的时间获取信息，其中的大部分都是观点。\n大家可以看一下知乎的热榜（截取自2019/05/30 20:24）：\n\n大家如何看待太原师范学院「女生自述遭受室友的校园暴力」事件？\n如何看待韩国球员完胜中国队后脚踏熊猫杯的行为？\n如何看待 5 月 30 日 CGTN 主播刘欣与 FOX 主播的这场辩论？有哪些值得关注的信息？\n为什么用剑插入人身体后，人在未死亡前无力还击了？\n演员亲自答：如何评价《隐形守护者》中的各个角色？\n请问有女孩子愿意陪一个男生长大吗？\n太原师范学院怎么样？\n有什么事是你租房以后才知道的？\n你活到现在为止，总结出最大的人生经验是什么？\n为什么《新闻联播》结束后总有播音员在收拾稿子的片段？\n\n基本上都是在问别人的观点，很少有关于事实的问题。\n现在人们做出的每个决定，基本都要参考别人的观点。找饭店要看评价，买东西要看评价，选专业要看评价，找工作要看评价。\n其实如果用户的基数很大，那么对于一个事物的评价就会变得越来越和事实接近。比如一家饭店的饭菜为大多数人喜爱，这是可以通过评价得出的事实。\n而如果只是一篇软文，因为它只能表示一方的观点，那就很难判断它是否和实际情况一致。因为这种情况的存在，我们就想去阅读大量的相关文章，来获得一个相对客观的认识。这个过程会耗费大量的时间，而且因为我们接受的都是二手的经验，缺少主观的感受。\n但是主观的感受也不一定准确，你看到的不一定是事实，就比如各种魔术表演。而我们在认识事物的时候，还常常会产生偏见。\n类似于这个明星长得好看不好看这样的问题，本来就有很大的主观因素，它永远也不会是一个事实问题。但是人们就是喜欢这类问题，希望发现和自己的观点相似的观点，也想看看一些不一样的观点。\n观点应该是基于事实的，现在很多键盘侠，看到一条新闻，没仔细看就发表观点。我之前也写过一篇文章：谁主张谁举证——谈网络黑子。\n一篇同样关于该研究的文章：你分得清新闻消息里哪些是事实陈述，哪些是观点吗？ - 好奇心日报", "filename": "2019-05-30-fact-and-opinion.md"}, {"id": 293, "text": "\ndate: 2019-06-02 23:13:50+08:00\nlayout: post\ntitle: B4X简介\ncategories: 技术随笔\ntags: B4X\n\nB4X是一套用来开发跨平台应用的工具，包含针对安卓的B4A、针对iOS的B4i以及针对Java的B4J。它使用现代化的Basic语言，可以快速开发应用(RAD)。所编写的Basic代码会被转译到对应平台的代码，比如Java、Objective-C、C、JavaScript等等。\n主要优点：\n1. 现代化的Basic语言\nB4X目前最重要的产品是B4A，它将Basic转译为Java，实现原生开发。因为基于Java，所以B4X也是一种面向对象的语言，在很多方面可以看到受到了Java影响。不过B4X的面向对象比较简单，对象有属性和方法，但是不能继承。而转译到Java的一个好处就是可以使用JVM平台上的各种类库。\n当然，作为Basic风格的语言，使用Basic风格的关键字，比如If...Then、For...Next、Sub...End Sub、Dim等。\n2. 跨平台\nB4X支持的平台：\n\n移动端：Android(B4A)、iOS(B4i)\n三大操作系统(B4J)：Windows、macOS、Linux\n嵌入式：Arduino(B4R)、树莓派（B4J+arm版Linux）\n另外还可以开发Web应用(B4J)\n\nB4X目前不能做到编写一次代码，在各个平台上运行。但这给了我们原生环境编程的体验。我们需要了解Android、iOS的生命周期，了解它们的常用控件，一直到软件如何发布。很多原生平台的类库，可以直接进行封装，供B4X语言调用。\n而纯粹使用B4X语言编写的代码，则可以在多个平台中共享。UI的跨平台方面，作者也在使用XUI进行尝试。\n3. 强大的集成开发环境\n安装包只有10几MB，配置所需环境也很简单，有详细的说明。\nIDE功能强大，支持智能提示、自动补全、断点调试、调试代码热交换等等，有很好的图形化界面设计器。\n针对Android和iOS的界面设计，还提供了远程的界面预览功能。iOS开发需要Mac电脑，还提供了Mac编译主机服务。\n4. 活跃的社区\nB4X作者Erel是一个非常勤奋的开发者，他会非常耐心地回答用户的问题。主要的讨论场所就是B4X的论坛。论坛基于xenforo构建，Erel还做了各种加强，比如一个好用的搜索引擎。\nB4X虽然不是很热门，但也有很多粉丝用户，其中有现实中从事程序员工作的技术大牛，也有普通的希望学习软件开发的新手。技术高手除了开发各种类库、写教程外，也会热心地回答其它用户的问题。\n论文的秩序维持是一件重要的事，比如发的帖子不能跑题，提与主题无关的问题要另开一个新帖子，提问时要贴出代码而不是图片等等。虽然严肃，但也创造了很多B4X用户才知道的梗，比如这个帖子提到了很多：B4X Forum memes\n5. 丰富的学习资源\n文档齐全，手册、教程还有各种函数、类库的文档。\n一些集合帖：\n\nB4X小册子，包含B4X语言、分平台开发、自定义控件等内容：[B4X] Documentation Booklets - klaus \n网络相关集合贴：[B4X] The Networker's Guide To The Galaxy\nB4J示例程序（包含猜数字、字体选择多页示例、Canvas绘图、文本读取、排序等等）：Getting Started Examples\n\n很多内容，比如各种网络协议、安全问题、SQL和数据库等复杂的东西，B4X上的帖子都有清楚地讲解，而且B4X代码比较容易读懂，所以也可以用B4X来快速了解和应用各种技术。\n除了文档，Erel还专门录制了教学视频：B4X Video Tutorials\n我的博客也会继续发与B4X相关的内容。\n另外讲讲B4X的在国内的情况。国内的用户不多，也没看到哪家公司招聘时说需要B4X开发者。不过应该是存在使用B4X作为主力开发语言的公司的。而个人用户可以使用B4X快速开发相关工具，帮助自己提高工作效率或者为他人定制软件。\nB4X的推广，早期有沉默蜂，在163上写了很多B4A的博客，他也创建了QQ群。还有几个其它的群，有一个群的群主是刺鱼，管理员有王爷、icefairy333等人。但B4X的主要交流场所还是论坛，交流的语言是英文。\n台湾联合大学的盧坤勇教授有把B4J加入了他的程序语言课程里：第十七章 使用B4J建立跨平台應用程式\nB4X套件是闭源软件，其中，B4A和B4i是收费产品，B4J和B4R则是免费的。平时论坛里用户经常会贴出自己的源码，不过在GitHub和StackOverFlow等地方并不活跃。如果想使用主流语言，还是推荐使用Java、Python之类的，关于这点，可以看我之前的文章：小众编程语言。\n看了下B4X论坛上我的注册信息，算算我从2009年左右接触basic4ppc，学习编写PPC软件，到后来大一时利用B4A编写听雨书房，大二时利用B4i编写听雨BBS客户端，再到现在一直专注于用B4J开发桌面端和网页应用，也已经过了10年了。\n\n我业余时间学习了Autoit、C、Pascal、B4X、Python、C#、Swift、JavaScript等各种语言，但是目前使用得最顺手的还是B4X。", "filename": "2019-06-02-a-brief-introduction-to-B4X.md"}, {"id": 294, "text": "\ndate: 2019-06-02 10:35:50+08:00\nlayout: post\ntitle: 博文写作\ncategories: 随笔\ntags: \n\n博文写作和一般的写作一样，要经过采集、构思、表述等多个步骤。\n写作首先得有一个想法。很多人运营公众号，他们追逐时事热点，因为这可以获得更多的点击。而我的想法怎么来呢，我想了下，主要是因为我经历了一些事情，想用文字对其进行记录。比如，看完了一本书、参加了一次社团活动、完成了一个编程任务等等。\n但也有的时候，我的想法是散步的时候或者网上搜索的时候，自然而然地产生的。\n我发现散步的时候，人的思绪才会开始奔驰。有时候，在电脑前做几个小时也解决不了的问题，出去散会儿步就有了解决办法。\n网上搜索呢，一般人都是带着目的去搜索的，但是根据采莓模型(berry-picking model)，人一开始的检索词并不是完美的，通常是较为宽泛的。人会根据检索得到的内容，找到新的兴趣点，不断地调整自己的检索词。比如我搜索matrix67，发现知乎上一篇帖子，其中提到了她夫人的博客，于是我又访问她夫人的博客，看到了很多有趣的博文。\n有了想法后，我一般就直接开始文字的书写（表述）。收集资料和写提纲之类的我一般真的懒得做。当然，如果这个想法是一个实践性任务，比如编写一个程序，那我会先进行实践，过程中肯定也要收集大量的信息。\n表述就是把我的想法用文字表示出来，但是用文字表示总归是有失真的地方，而且因为组织文字还是挺费脑的，有时候会不耐烦。\n博文写好后，我一般就直接发布了。发布后，我会再阅读一遍，检查有没有错别字。过段时间后，如果发现博文有明显的错误或者有需要补充的地方，会进行一些完善。", "filename": "2019-06-02-how-do-I-write-blog-posts.md"}, {"id": 295, "text": "\ndate: 2019-06-04 20:05:50+08:00\nlayout: post\ntitle: 专业领域翻译\ncategories: 随笔\ntags: 翻译\n\n在遇到不熟悉的专业领域翻译的时候，如果不进行搜索、查词典，恐怕一句话都翻译不出来。\n最近一次翻译测试，我以人工翻译的形式翻译了类似以下的关于纺织服装业的内容：\n\n中国的纺织服装业在世界上有着独特的地位而广东是中国纺织服装业的大省。纺织服装业是劳动密集型、低技术的产业，但广东凭借自身独特的优势，构建了一套产业体系，并使纺织服装业成为其支柱产业。本文将以理论和实证相结合的研究方式作出分析。\n\n我在阅读的过程中，会圈出哪些词是需要查询的。比如纺织服装业、劳动密集型、低技术、产业体系、实证、支柱产业等等。\n首先了解什么是纺织服装业。它其实包含两个部分，纺织业是生产布料的，而服装业是生产成衣的。放到词典里查，找到The textile and apparel industry，textile and garment industry，textile and clothing industry等几种译法。可以知道，纺织业肯定是textile industry，不确定的是服装业的翻法。于是在Bing上搜索apparel industry，第一条是Clothing industry的维基百科条目，解释如下：\n\nClothing industry or garment industry summarizes the types of trade and industry along the production and life chain of clothing and garments, starting with the textile industry (producers of cotton, wool, fur, and synthetic fibre) via fashion industry to fashion retailers up to trade with second-hand clothes and textile recycling. \n\n再搜clothing industry，获得500万条结果，而apparel industry的结果数量是200万。推定clothing industry是合适的译法。\n劳动密集型翻译为labour-intensive，实证翻译为empirical study，这个我是知道的，不过我还是查了下词典进行验证。\n低技术，我想到参考高端的译法high-end，用连字符创造形容词low-tech。产业体系不确定是industrial architecture还是industrial system，查词典是发现例句用的system，于是采用。\n最后翻译如下：\nThe textile and clothing industry in China holds a unique position in the world and Guangdong is a major province of the textile and clothing industry in China. The textile and clothing industry is a labor-intensive and low-tech industry, but Guangdong has formed its industrial system based on its unique advantages and made it a pillar industry. This paper will combine theoretical study and empirical study to make an analysis.\n百度翻译如下：\n\nChina's textile and apparel industry has a unique position in the world, and Guangdong is a major province of China's textile and apparel industry. Textile and apparel industry is a labor-intensive and low-tech industry, but Guangdong has built up a set of industrial system by virtue of its unique advantages and made textile and apparel industry its pillar industry. This paper will make an analysis in the way of combining theory with practice.\n\n这时如果有机器翻译，还是能省事不少。百度翻译还会给出相关短语的翻译（虽然这里给出的用处不是很大）：\n\n纺织 spinning and weaving; textile process\n世界上    on earth\n广东 Guangdong\n服装 dress; clothing; costume; fashion\n劳动密集型  labor-intensive\n凭借 rely on; depend on\n支柱产业   support/pillar industry\n实证 authentic proof; substantial evidence; excess syndrome\n相结合    adjoin, combine\n\n我们学专业领域英语(ESP，English for special purpose)时，往往需要阅读大量的单语文本和平行文本，学习这个领域，了解这个领域的用词。\n现在的机器翻译本身就是基于大量的文本训练的，它见识过的文本应该是远远多于译员的。但是机器和人一样，要面对选择哪个对应翻译的问题。机助翻译模式在这个时候，就需要发挥人的判断能力了。\n这里提两个专业领域翻译用到的工具：\n\n\nCNKI翻译助手\n知网基于其庞大的文献构建的词典，可以按学科分类检索内容。可以知道每条查询有多少种翻译，每种翻译出现了多少次，并进一步查看例句。\n2. 语料快搜\nTMXMall的翻译记忆检索工具，但是没有分类检索功能，翻译质量也难以保证。不过可以作为参考。\n\n\n其它还有搜索引擎、各类电子词典和机器翻译，其实整个互联网的内容都可以提供帮助。\n不过如果长期从事某个领域的翻译，还是应该系统地进行学习。\n分领域翻译实践案例\n武术\n中国人自己一般没有翻译武术为英语的需求，这方面其实海外华人和老外做得比较多。\n比如翻译武术中的三种手法：拳、掌、勾，以及五种步法：弓步、马步、虚步、仆步、歇步。我们可以了解这些是什么后自己尝试翻，但是这样有难度，也和之前的翻译不一致。所以我们还是进行搜索。\n可以搜索到以下网页：\n\nKung Fu Stances - UK Shaolin Temple - Facebook\nThe Five Basic Shaolin/Wushu Stances\nWushu stances - wikipedia\n\n对于这种武术动作，一般验证翻译时看图片很有用。\n相关文章：\n\n互联网在翻译中的应用 - 李长栓\n500G+记忆库术语库\n", "filename": "2019-06-04-ESP-translation.md"}, {"id": 296, "text": "\ndate: 2019-06-09 22:53:50+08:00\nlayout: post\ntitle: 音域\ncategories: 随笔\ntags: 音乐\n\n我没有学过乐理，对相关概念不是很熟悉，这次通过网络了解了音域相关的概念，把了解的东西整理成此文。\n我最近用调音器检查自己唱歌的音的音准对不对。我唱歌虽然不怎么跑调，但音准把握得不好，唱的时候会有几个音，要么偏高，要么偏低。看网上说合唱的时候，让大家的调(key)和伴奏相配合不是一件容易的事，有时候需要把伴奏的调值降低一点。\n研究过程中，我了解了音域(pitch range)的概念，就是人声音的范围。\n首先了解下音高(pitch)，这个词在语音学里也有用到，比如为了发出普通话的四个声调，音高要有变化。音高是由频率(frequency)决定的。\n而在音乐中，音高就是我们常说的Do Re Mi Fa So La Si Do，也记作CDEFGAB。从较低音的Do到更高音的Do叫做一个八度(Octave)，普通人有两个八度就不错了。\n钢琴中存在7个八度，从左至右，在CDEFGAB下方标上数字，以表示属于哪个八度。如下面这个音域图（图片来源）：\n\n音高和频率需要有一个对应关系，一般A4对应440Hz。\n另外表示八度还有其它的方法，什么大字组、小字组的，如下图所示（图片来源）：\n\n在传统西方歌剧里面，有分男女低中高音，以下来自维基百科。\n\n女高音(Soprano): C4 (middle C) to C6 (high C)\n女中音(Mezzo-soprano): A3 (A below middle C) and A5 (2nd A above middle C).\n女中音(Contralto): F3 (F below middle C) to E5.\n男高音(Tenor): B2 (2nd B below middle C) to A4 (A above Middle C)\n男中音(Baritone): G2 (two Gs below middle C) to F4 (F above middle C).\n男低音(Bass): E2 (two Es below middle C) to E4 (the E above middle C).\n\n还有乐器，也会有音域范围，比如大提琴的音域范围比小提琴的低。可以参考下图（图片来源）：\n\n我测试我的音域大概在G2-E4，标准的男中音哈。不过讨论人的时候还有真声、假声、头声等概念，我这里主要测的真声。\n网上搜索Vocal Range，可以获得更多人的音域的相关内容。", "filename": "2019-06-09-pitch-range.md"}, {"id": 297, "text": "\ndate: 2019-06-10 15:52:50+08:00\nlayout: post\ntitle: 模式识别与人\ncategories: 技术随笔\ntags: AI\n\n听CH2的音乐，《启航》、《快乐迪斯科》和《听雪恋歌》，可以感受到一种青春少女的风格，而《至我》则很像举办大型活动时播放的音乐。但要说为什么我会有这种感觉，我说不上。\n最近看到严锋老师在微博上发了有关上海高考作文的内容，作文题目如下：\n\n“倾听了不同国家的音乐，接触了不同风格的异域音调，我由此对音乐的‘中国味’有了更深刻的感受，从而更有意识地去寻找‘中国味’”\n这段话可以启发人们如何去认识事物。请写一篇文章，谈谈你对上述材料的理解和感想。\n\n照着材料里的说法，或许应该把各种风格音乐都接触一遍，然后才能感受到每种音乐的特点。每种风格应该可以由一些特征决定，比如使用的乐器，演唱者的声音，节奏，旋律变化等等。但因为我不是专业人士，不懂音乐欣赏，我只能有一个大概的认识。我能感受到CH2音乐有一种青春少女风，但对于为什么，则解释不清楚。\n最近人工智能很火热，它的基础是机器学习方法。机器学习主要使用有监督学习，学习对一些特征做了标注的数据，从而完成分类任务。而最流行的机器学习方法是深度学习，它不需要我们对特征做提取。我们给机器一个输入和一个输出，比如输入为一封邮件，输出为是否垃圾邮件，它就能自动发现两者之间的联系，存储为模型。以后再给它一个输入，它就能利用这个模型进行输出。这是基于统计实现的方法。\n当然人工智能有很多种，比如符号主义人工智能，它会使用各种逻辑判断来进行分类。比如判断是不是垃圾邮件，有如下的逻辑：\nIf 该邮箱地址的域名短时间内发送了大量邮件 And 邮件内容含有**等词语 Then 垃圾邮件\n机器学习是基于统计的方法，而上述的则是基于规则的方法。两种都需要完成的任务是模式的识别。模式识别(pattern recognition)是和人工智能紧密相关的一个词，以前的计算机科学课程还没有机器学习，但会有模式识别。机器学习还是基于规则的方法，都属于模式识别。\n模式识别的定义（来自维基百科）：\n\nThe field of pattern recognition is concerned with the automatic discovery of regularities in data through the use of computer algorithms and with the use of these regularities to take actions such as classifying the data into different categories.\n\n大致意思是从数据中自动发现规律并用于数据分类的方法。一般单独说模式识别时，指的是用计算机进行处理的方法。其实这里的定义已经倾向于使用统计式的方法，因为规则是需要人来制定的，就不能说是自动发现。\n我们可以发现，机器的模式识别和人的模式识别有相似性。\n规则是容易解释的，但是统计式的方法并不容易解释原理。这就像普通人对于音乐的感知一样，他能大致感受到某种风格，但不能给出清晰的解释。而不管是统计式还是规则，都需要对大量的数据进行分析才能完成复杂的分类任务。人也一样，需要接触很多内容，才能做出正确的分类，就比如各种音乐类型。\n人的分类方法其实也有两种，一种是基于规则的分类方法，一种是基于神经元的统计式分类方法。\n统计式方法给人大致的认识，比如能帮助人识别眼前的事物。而基于规则的方法，需要人后天学习，比如判断某篇文章是正面的还是负面的。利用规则的方法的准确度往往很高，结果是可解释的。\n统计式方法常常需要和规则相结合，比如我们识别出了事物，该把它归为哪一类，这个类别是人为制定的。\n不过人的大脑的机能至今也没有人能解释清楚，本文只是我自己的一点想法。", "filename": "2019-06-10-pattern-recognition-and-people.md"}, {"id": 298, "text": "\ndate: 2019-06-11 19:44:50+08:00\nlayout: post\ntitle: 基于Elasticsearch构建翻译记忆Web服务\ncategories: 技术随笔\ntags: CAT\n\n此前的一篇文章翻译记忆服务器探究主要介绍了Pootle采用的基于PostegreSQL的amagama和Elasticsearch两种实现方式。\nPostegreSQL对性能要求没有Elasticsearch那样高，但是学习难度不小。我这里先基于提供REST API的Elasticsearch设计自己中间件程序，用于提供翻译记忆检索的Web服务。\n构想的索引结构见以下新建索引的命令：\n$ curl -XPOST 'http://localhost:9200/tm/_doc?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"creator\": \"kimchy\",\n    \"createdTime\": \"1560259504000\",\n    \"field\": \"generic\",\n    \"tag\": \"自我介绍\",\n    \"doc\": {\"id\":\"\", \"filename\":\"\", \"seg_num\":,\"\"}\n    \"text\": {\"zh\":\"我是男人。\",\"en\":\"I am a man.\"} \n}\n在检索时，比如检索英译中项目的翻译记忆，可以使用以下命令：\ncurl -XGET 'http://localhost:9200/tm/_search?pretty=true' -H 'Content-Type: application/json' -d '\n{\n    \"query\" : {\n        \"bool\": {\n            \"must\":\n                [\n                    {\"match\" : { \"text.en\": \"I am a woman.\" }},\n                    {\"exists\" : { \"field\": \"text.zh\" }}\n                ]\n            }\n        }\n}'\n获得检索结果后可以进一步用编辑距离计算相似度并排序。\n其实索引的内容是照搬了现有的翻译记忆的条目设计，比如谁创建的，什么时候创建的，一条记忆可以包含多个语种的文本。除此以外，还可以设置领域和标签。领域的种类是有限的，而标签可以由用户自行添加。\n关于如何上传翻译记忆，有两种方法，一种是用户翻译一条，上传一条，一种是导入tmx文件或者其它双语格式文件。\n使用前一种，则基本可以替代本地的翻译记忆数据库，直接通过网络API保存和检索翻译记忆。后一种因为是翻译结束后导入，可以保证质量。另外，导入的双语文件可以是xliff或者是BasicCAT的工作文件，这样可以提供上下文信息。所以我在上面的索引结构里还添加了翻译记忆来自于哪个翻译文件，对应的片段号是多少。\n还要考虑一个翻译记忆的更新问题，可以根据文件名和文本确定是否有该条记忆，如果有则进行更新操作，没有则新建一个索引项目。\n做好核心功能后，还可以添加多用户的功能以及社区协作模式，类似globse。但用户多了可能难以确定哪个版本的质量好，如何保证质量还需要进一步研究。\n相关链接：\nelasticsearch 嵌套对象之嵌套类型", "filename": "2019-06-11-translation-memory-web-service-based-on-elasticsearch.md"}, {"id": 299, "text": "\ndate: 2019-06-11 10:10:50+08:00\nlayout: post\ntitle: Fiddler修改网络请求返回结果\ncategories: 网络\ntags: \n\n最近碰到网易的一个表单系统提交图片失败的问题。于是我想研究下代码，看能否成功提交表单。该网站使用regularjs开发，生成的js文件没有minify，行数达到27000多行。对于本就不熟悉前端的我来说，调试的难度不小。\n该表单除了基本的文字信息，还要传两张图片。使用的方法是利用form进行上传，然后返回服务器上的地址。因为上传会进行页面跳转，所以在上传时会先建立一个iframe用于上传，成功后再将其删除。\n以下是上传部分的代码：\n```js\n/*\n * 上传\n * @param form\n * @param callback\n * @private\n /\n__upload: function (form, callback) {\nvar self = this,\n    //$form = $(form),\n    ifr = document.createElement('iframe'),\n    rnd = (Math.random() + '').substr(-8),\n    name = 'upload-ifr' + rnd;\nifr.style.display = 'none';\n\n// 需要在 append 页面时, 对 name 属性赋值\nifr.setAttribute('name', name);\ndocument.body.appendChild(ifr);\nform.setAttribute('target', name);\nifr.onload = function () {\n    var ifrBody = ifr.contentDocument.body,\n        html = ifrBody.innerHTML,\n        json;\n    html = html.replace(/^<.+?>/, '').replace(/<.+?>$/, '');\n\n    json = eval('(' + html + ')');\n    callback && callback(json);\n    ifr.remove();\n};\n// 延迟零毫秒，再次提交\nsetTimeout(function () {\n\n    form.submit();\n\n}, 0);\n\n},\n```\n上传时报错，内容如下：\nUncaught SyntaxError: Unexpected identifier\n    at HTMLIFrameElement.ifr.onload (index.js:482)\n对应的内容是json = eval('(' + html + ')');。\n于是我就网上搜索该错误，说是要把引号换成双引号。我直接在浏览器中修改js，发现不能生效。\n我想起之前爬取netflix时使用的Fiddler，可以用本地文件替换请求的文件。因为Fiddler捕获流量是通过本地代理实现的，所以它可以在中间做操纵。\n这一功能叫做AutoResponder。我们要设置需要截获的请求的URL和返回的本地文件的地址。\n但是我直接替换js文件发现没有效果，可能是regularjs比较特殊。于是我转向修改文件上传请求的返回结果。因为是服务器返回的上传文件失败的错误，使得整个提交失败。\n有两张图片需要上传，第一张可以上传成功，而第二张时会报错。我们可以把第一张的返回结果保存下来，以后上传的返回结果都用Fiddler修改为这一成功上传的结果，这样就可以成功保存信息。\n但因为返回的结果中带有上传后的图片的服务器URL，这样两张图片的地址就一样了。好在上传两张图片时会出错，单独上传一张时可以成功。所以，只要重新单独上传那张图片就行了。\n操作方法：\n\n\n保存成功上传图片时的返回结果\n\n结果文件是个txt文件，内容如下：\n```\nHTTP/1.1 200 OK\nServer: nginx\nDate: Tue, 11 Jun 2019 01:25:18 GMT\nContent-Type: text/html;charset=utf-8\nConnection: keep-alive\nVary: Accept-Encoding\nContent-Length: 319\n{\"code\":\"200\",\"data\":{\"createTime\":null,\"description\":\"\",\"id\":14,\"name\":\"图片名.jpg\",\"nosKey\":\"715208-***\",\"token\":\"\",\"url\":\"图片URL\"},\"msg\":\"\"}\n```\n\n\n添加AutoResponder规则\n\n\n\n记得开启Fiddler的流量捕获。", "filename": "2019-06-11-use-fiddler-autoresponder-to-modify-response.md"}, {"id": 300, "text": "\ndate: 2019-06-12 12:49:50+08:00\nlayout: post\ntitle: CAT工具与翻译理论\ncategories: 随笔\ntags: CAT\n\n写这篇文章主要是因为我在开发和使用BasicCAT过程中，主要关注的都是资源管理、团队协作、交互设计以及具体的实现等问题，但对于翻译这一转换过程本身并没有太多关注。目前计算机辅助翻译的核心就是翻译记忆和句段分割，辅之以各种双语资源，并提供流程管理和质量检查功能。另外作为编辑器，会想方设法减少用户的操作次数。\n但很明显，目前的CAT软件是基于语言服务行业需求设计的，并没有融入多少翻译学的知识，设计者本身可能没有多少翻译研究的背景。\n这样带来的一个缺点是译员需要去适应工具，并且在自动化工具的影响下，翻译变成了一件体力劳动，特别是机器翻译的介入，译者已经不需要做传统的分析转换和重构工作，更多地是直接阅读译文来了解原文意思，并做一点编辑。\n但其实，不管是直接翻译还是译后编辑，都需要了解一点翻译的理论知识，这样在翻译中碰到问题还可以有理论支持，做出修改也更有底气。\n而将理论融入到软件设计之中，目前看来，还没有软件能够做好。\n之前整理的一些翻译理论：\n\n翻译理论整理（一）\n翻译理论整理（二）\n\n整理中：\n\n英汉对比与翻译\n", "filename": "2019-06-12-CAT-tools-and-translation-theories.md"}, {"id": 301, "text": "\ndate: 2019-06-12 14:56:50+08:00\nlayout: post\ntitle: 英汉对比与翻译\ncategories: 笔记\ntags: 翻译\n\n前文讲到了CAT工具和翻译理论，而我目前最感兴趣的莫过于英汉对比研究。\n我们可以尝试翻译以下这句话：\n\nDams are a dramatic example of a human activity that degrades freshwater ecosystems.\n\n百度翻译：\n\n水坝是人类活动退化淡水生态系统的一个引人注目的例子。\n\n搜狗翻译：\n\n水坝是人类活动破坏淡水生态系统的一个戏剧性例子。\n\n我的翻译如下：\n人类活动会恶化淡水生态系统，水坝就是突出的一个例子。\n英文中的定语可以同时存在于名词的前面和后面，但汉语一般都要放在前面。这样定语会会过长。我们可以把过长的定语转换成一个短句。另外还有dramatic这个表示程度的形容词，在中文中很难找到对应的表达，这个时候需要结合语义，选择合适的中文词。\n以上例子来自MTI教材，秦洪武、王克非编著的《英汉比较与翻译》。\n关于英汉比较与翻译这个书名，网上就有不少翻译版本，这本书翻译为Comparison and Translation Between English and Chinese是比较合理的。我一开始想，如果对比研究的目的是为了指导翻译实践，则可以翻译成Comparison of English and Chinese and its application in translation。\n英汉对比研究涉及的更多的是语言学层面的内容，很多讲英汉对比与翻译的书本质上还是借助翻译来对比两种语言，并且会使用大量的语言学术语。这本书在我看来与实践结合得更加紧密，所以打算阅读这本书，做一些笔记。\n第一章 语言比较\n主要讲翻译需要在有足够的双语能力的基础上进一步培养转换文本的能力。并给出了一个例子，就是我上面举的。\n汉语和英语，一个是象形文字，一个是表音文字，存在很多的不同。但它们都是用于描述这个世界上存在的事物的，所以文字底下的语义是大致相同的。\n这里我再引用许渊冲的一段话，可以说是很好的概括了翻译的要义。\n\n译可译，非常译。\n忘其形，得其意。\n得意，理解之始；\n忘形，表达之母。\n故应得意，以求其同；\n故可忘形，以存其异。\n两者同出，异名同理。\n得意忘形，求同存异：\n翻译之道。\nTranslation is possible: it’s not transliteration.\nForget the original form; get the original idea!\nGetting the idea, you understand the original;\nForgetting the form, you express the idea.\nBe true to the idea common to two languages;\nBe free from the form peculiar to the original!\nIdea and form are two sides of one thing.\nGet the common idea; forget the peculiar form;\nThat’s the way of literary translation.\n—— 许渊冲《译笔生花》前言，文心出版社，2005\n\n第二章 词\n\n\n形态和语言类型\n英语是屈折语，汉语是综合语，不像英语那样有动词过去式、单复数等形式。每种语言都有一词多类的现象，比如汉语的研究对应英语的research，都能做名词和动词。但也有不能对应的，比如汉语的调查，动词对应英语的investigate，名词对应investigation。所以翻译时对于词的词性分析是很有必要的。\n\n\n构词方法\n主要构词法有以下五种：\n\n语缀法，例如英语的antibody、antitrust、employee，汉语的歌手、制造商、胖子等\n转换法，use做动词表示使用，做名词表示用处，而且读音会变化。汉语中也有这类用法，比如他太娘了，其中的娘是名词变成了形容词。\n缩略法。 比如亚太、地铁、NASA、UFO等等。\n重叠法。 汉语中多见，比如三三两两、亮晶晶。\n复合法。汉语的五种类型：联合式（朋友）、偏正式（雪白）、动宾式（理发）、补充式（提高）、主谓式（地震）。而英语不像汉语这样倾向于给事物添加类属标记，重个体思维，比如柳树叫willow，杨树叫poplar，计算机不叫computing machine，叫computer。\n\n\n\n对应关系\n英文中的hand，可以有多重意思，比如give me a hand中表示帮助，《权力的游戏》中King's Hand表示一个职位。其实我觉得这些都是对手这个原来意思的引申义，只是有的引申义在别的语言中还不存在。而中文的酒的确是对应了英文中的多个词，比如wine、spirits、beer。\n\n\n实词的比较\n汉语的实词指名词、动词、形容词、数词、量词、代词。英语没有量词，且一般把代词列为虚词。\n\n\n名词\n\n汉语和英语都没有阴阳性。\n英语有单复数形式，要注意把英语的复数体现出来，比如在名词前加几个、一些等等。\n英语有主格、宾格、所有格。而汉语的名词、代词有没有格的范畴。\n\n\n\n\n\n第三章 句子结构\n第四章 并列句、复合句\n第五章 语篇\n第六章 英汉文化比较\n我的个人实践\n这里再记录下翻译实践中有关英汉对比的内容\n及物动词与不及物动词\n英语的动词有及物动词和不及物动词。spread这个词，及物用法时需要用施事和受事，比如He spreads his arms，不及物用法时表示事物自己改变自己，比如Fire spreads quickly。这可以从语法上保证语义的完整。而汉语很多内容会有成分残缺，但母语者对这些不是很敏感。例如使用社交媒体进行传播，感觉很对，但是翻译到英文Use social media to propagate时会发现少了宾语，这时只好改成Use social media for propagation。\n待更新……", "filename": "2019-06-12-comparison-and-translation-between-English-and-Chinese.md"}, {"id": 302, "text": "\ndate: 2019-06-17 17:06:50+08:00\nlayout: post\ntitle: 常见快速翻译任务类型\ncategories: 随笔\ntags: 翻译\n\n最近做了不少快速翻译任务，因为世间万物都是可以用文字来描述的，所以会遇到各种各样的翻译需求，总结一下常见的。\n名称\n各种部门的名字：桌面端设计中心、普法科。\n公司名：某某某白酒公司。\n论文标题：期刊集群化管理系统。\n营销\n比如给一个中文的口号，想对应的英文。\n影评\n关于LGBT电影《鸟笼》的评论。\n文学性文本\n小英雄雨来的故事。\n关于柠檬精的一首诗。\n地址\n碰到一个澳门地址，人名使用澳门政府粤语拼音书写，地名直接用的葡萄牙语。这时得使用Google地图，寻找对应的中文。比如以下地址：Edf Commercial Si Toi，对应的中文是时代商业大厦。\n功能性文件\n\n简历\n自我介绍\n技术文档\n\n其它\n有出于学习目的，向翻译咨询修改意见的。其实需要请人提供翻译服务的人，一般也是对自己水平不够自信，希望有一个高质量的结果。", "filename": "2019-06-17-common-quick-translation-types.md"}, {"id": 303, "text": "\ndate: 2019-06-17 11:51:50+08:00\nlayout: post\ntitle: 翻译内嵌HTML的Excel文件\ncategories: 技术随笔\ntags: CAT\n\n最近收到一个单元格内包含HTML内容的Excel文件。Excel文件其实类似于数据库，所以里面可能会存储各种各样类型的内容，常见的一种就是HTML。\nHTML作为标记文本，还是比较容易处理的。但是内嵌在Excel里，用CAT软件处理的话就不是很容易。\n于是我想出了一个方法：\n\n将Excel单元格中的HTML内容导出为HTML文件，命名方法是“行号-列数.html”。\n用CAT软件翻译这些HTML，我这里选择了OmegaT。\n翻译好后再进行导回。\n\n我基于Apache POI写了一个处理软件：ExcelCell-Replacer\n对于这类复杂的情况一般只有自己写工具处理。不过对于像Trados这样，不断获得用户反馈的软件，它的功能基本上能应对各种需要。比如Excel内嵌HTML这种情况，可以使用Trados的嵌入内容处理器。\n具体的操作和配置文件可以见此文：Translating Excel files with embedded HTML content in SDL Trados Studio\n在项目设置里，要选择应用于文档中的哪些结构，比如单元格(sdl:cell)。之后定义规则。标记内容的处理主要还是依赖于正则表达式。\n\n可以设置是标记对（比如HTML的段落标签）还是占位符（比如HTML的换行标签）。可以根据标签的属性赋予格式，比如strong标签表示加粗。\n\n在高级设置里可以设置是包含还是排除标签，以及是否能够隐藏标签等等。\n\n如果不排除标签，翻译时会显示标签：\n\n设置排除后效果如下：\n\n但并不是所有标签都应该排除，比如strong是行内标签，用于格式化部分文字。\n\n这时我们可以更进一步，设置strong标签对应的样式，并设置为隐藏标签。最后结果如下：\n", "filename": "2019-06-17-translate-Excel-files-containing-html.md"}, {"id": 304, "text": "\ndate: 2019-06-23 16:44:50+08:00\nlayout: post\ntitle: Photoshop文档本地化脚本\ncategories: 技术随笔\ntags: CAT\n\n因为Photoshop使用的PSD格式并不是开放的格式，我们只有使用脚本工具将文字进行导入和导出。\nAdobe的全系列产品基本都提供了脚本的支持，Photoshop支持使用三种语言编写脚本：用于macOS的AppleScript、用于Windows的VBScript以及两个平台都能用的JavaScript。\n详细内容见官方文档：Adobe Photoshop Scripting\n我这里针对Windows平台，主要参考了VBScript的文档。VBScript是通过操作COM来完成任务的，所以我们也可以使用其他编程语言，比如Autoit、Java+Jacob等等，能操作COM就行。我习惯了Autoit，于是这次还是使用它来编写工具。\n\n\n将目录下所有PSD文档中的文字图层的内容导出，内容保存为txt，以psd的文件名命名。因为内容以换行分割，而原来图层的文本可能有换行，所以如果使用图层文本需要对换行做处理。这时可以选择使用文字图层的名字，基本上名词和内容是一样的，只是换行变成了空格。很多文字图层被包括进了组(LayerSet)里，这时还要使用递归遍历所有组里面的文字图层。\n```autoit\ninclude \ninclude \nLocal $aFileList = _FileListToArray(@WorkingDir, \"*.psd\", $FLTA_FILES, True)\nIf @error = 1 Then\n   MsgBox($MB_SYSTEMMODAL, \"\", \"Path was invalid.\")\n   Exit\nEndIf\nIf @error = 4 Then\n   MsgBox($MB_SYSTEMMODAL, \"\", \"No file(s) were found.\")\n   Exit\nEndIf\nDim $text=\"\"\nFor $i=1 to $aFileList[0]\n   $psdName=$aFileList[$i]\n   $fileName=StringReplace($psdName,\".psd\",\"\",-1, $STR_NOCASESENSE)\n   ConsoleWrite(\"filename\"&$fileName)\n   $text=\"\"\n   Export($fileName)\nNext\nFunc Export($fileName)\n   $app = ObjCreate(\"Photoshop.Application\")\n   $doc=$app.open($fileName&\".psd\")\n   Local $hFileOpen = FileOpen($fileName&\".txt\", $FO_OVERWRITE)\nIf $hFileOpen = -1 Then\n      MsgBox($MB_SYSTEMMODAL, \"\", \"An error occurred when reading the file.\")\n      Return False\n   EndIf\n$LayerSets=$doc.LayerSets\n   $ArtLayers=$doc.ArtLayers\n   handleLayerSets($LayerSets)\n   handleArtLayers($ArtLayers)\n   FileWrite($hFileOpen, $text)\n   FileClose($hFileOpen)\n   $doc.close()\nEndFunc\nFunc handleLayerSets($LayerSets)\n   For $i=1 to $LayerSets.Count\n      $LayerSet=$LayerSets.Item($i)\n      handleArtLayers($LayerSet.ArtLayers)\n      handleLayerSets($LayerSet.LayerSets)\n   Next\nEndFunc\nFunc handleArtLayers($ArtLayers)\n   For $i=1 to $ArtLayers.Count\n      $artLayer=$ArtLayers.Item($i)\n      if $artLayer.Kind=2 Then\n        ConsoleWrite(\"name:\" & $artLayer.name & @CRLF)\n        Dim $content = $artLayer.name\n        $content=StringRegExpReplace($content,\"\\r\",\"\")\n        $content=StringRegExpReplace($content,\"\\n\",\"\")\n        $content=StringReplace($content,\" \",\"\")\n        ConsoleWrite($content& @CRLF)\n        $text=$text & $content & @CRLF ;& $Layer.name & @TAB\n      EndIf\n   Next\nEndFunc\n```\n\n\n将翻译导回每个PSD文档，根据每个图层的名字查找对应的翻译，相当于供完全匹配翻译记忆。除了单纯的文本替换，如果原来使用的字体不适用于译文，还要进行字体的修改。\n```autoit\ninclude \ninclude \nLocal $oDictionary\n$oDictionary = ObjCreate(\"Scripting.Dictionary\")\nLocal $fsFileOpen = FileOpen(\"font.txt\", $FO_READ)\nLocal $font = \"\"\nIf $fsFileOpen <> -1 Then\n   $font=FileRead($fsFileOpen)\nEndIf\nLocal $aFileList = _FileListToArray(@WorkingDir, \"*.psd\", $FLTA_FILES, True)\nIf @error = 1 Then\n   MsgBox($MB_SYSTEMMODAL, \"\", \"Path was invalid.\")\n   Exit\nEndIf\nIf @error = 4 Then\n   MsgBox($MB_SYSTEMMODAL, \"\", \"No file(s) were found.\")\n   Exit\nEndIf\nLocal $hFileOpen = FileOpen(\"完整版记忆.txt\", $FO_READ)\nIf $hFileOpen = -1 Then\n   MsgBox($MB_SYSTEMMODAL, \"\", \"An error occurred when reading the file.\")\n   Return False\nEndIf\nWhile True\n   $line=FileReadLine($hFileOpen)\n   if @error Then ExitLoop\n   $source=StringLeft($line, StringInStr($line,@TAB)-1)\n   $text=StringRight($line, StringLen($line) - StringInStr($line,@TAB))\n   if $source<>\"\" Then\n      $oDictionary.Add($source, $text)\n   EndIf\nWEnd\nFileClose($hFileOpen)\nFor $i=1 to $aFileList[0]\n    $psdName=$aFileList[$i]\n    $fileName=StringReplace($psdName,\".psd\",\"\",-1, $STR_NOCASESENSE)\n    ConsoleWrite(\"filename\"&$fileName)\n    $txtName=$fileName&\".txt\"\n    if FileExists($txtName) Then\n        ConsoleWrite($txtName)\n        Import($fileName)\n    EndIf\n Next\nFunc Import($fileName)\n   $app = ObjCreate(\"Photoshop.Application\")\n   $doc = $app.open($fileName&\".psd\")\n$LayerSets=$doc.LayerSets\n   $ArtLayers=$doc.ArtLayers\n   handleLayerSets($LayerSets)\n   handleArtLayers($ArtLayers)\n;$doc.Save()\n   ;SaveAs($doc,$filename)\n   ;$doc.close()\nEndFunc\nFunc handleLayerSets($LayerSets)\n   For $i=1 to $LayerSets.Count\n      $LayerSet=$LayerSets.Item($i)\n      handleArtLayers($LayerSet.ArtLayers)\n      handleLayerSets($LayerSet.LayerSets)\n   Next\nEndFunc\nFunc handleArtLayers($ArtLayers)\n   ConsoleWrite(\"handling\")\n   For $i=1 to $ArtLayers.Count\n      $ArtLayer=$ArtLayers.Item($i)\n      if $ArtLayer.Kind=2  Then\n         $source=$ArtLayer.name\n         $source=StringRegExpReplace($source,\"\\r\",\"\")\n         $source=StringRegExpReplace($source,\"\\n\",\"\")\n         $source=StringReplace($source,\" \",\"\")\n         if $oDictionary.Exists($source) Then\n            $ArtLayer.textItem.Contents = $oDictionary.Item($source)\n            if $font<>\"\" Then\n               $ArtLayer.textItem.Font= \"NotoSansHans-Regular\"\n            EndIf\n            $ArtLayer.textItem.Justification=2 ;center\n            $ArtLayer.textItem.Capitalization=2 ;capcase\n            $ArtLayer.textItem.Kind=2 ;paragraph\n         Endif\n      EndIf\n   Next\nEndFunc\nFunc SaveAs($doc,$filename)\n    Dim $ObjSaveOptions=ObjCreate(\"Photoshop.JPEGSaveOptions\")\n    ;if @error Then Exit\n    With $ObjSaveOptions\n       .EmbedColorProfile = True\n       .FormatOptions = 1\n       .Matte = 1\n       .Quality = 1\n    EndWith\n    Dim $path\n    $path=$filename&\".jpg\"\n    ConsoleWrite($path&@CRLF)\n    $doc.SaveAS($path,$ObjSaveOptions,True,2)\n EndFunc\n```\n\n\nAdobe给了参考文档，但没有一个很好的脚本编辑器，只能根据文档查询各种对象和方法，开发稍微不方便一点。\n相关链接：\n\nAutomate adobe photoshop\nAdobe Photoshop UDF\n", "filename": "2019-06-23-adobe-photoshop-localization-script.md"}, {"id": 305, "text": "\ndate: 2019-06-27 14:35:50+08:00\nlayout: post\ntitle: SDL Trados使用踩坑\ncategories: 技术随笔\ntags: CAT\n\n虽然不喜欢用Trados，奈何部门的人都要用它，只好将就用一下，碰到各种坑，这里总结一下。\n\n\n术语库的制备\nTrados使用的术语库需要用Multiterm制作。\n具体操作流程是用MultiTerm Convert转换原格式文件为导入术语库用的特殊XML格式文件，然后用MultiTerm导入这一生成的XML文件。\n详细内容可以见这篇文章：How to import a bilingual Excel glossary into MultiTerm – for use in Trados Studio\n这里的一个坑就是导入的XLSX文件，要有表头，而且表头的名字要使用Multiterm术语库里定义的语言的名字，比如Chinese和English，否则导入失败，提示以下错误（错误中的表头我设置成了“中文”）：\n-1  Does not conform to the target termbase definition.\n   Reason: 找不到输出表 'I_中文' 。\n   Source: MultiTerm150.Server.Termbase15.0\n搜了下错误内容，发现proz上08年就有这一错误的讨论：Does not conform to the target termbase definition\n\n\n另一种方法是使用Glossary Converter，参加下一条。\n\n\n翻译记忆库的制备\nTrados只能导入ttx、tmx等双语格式的文档，不支持tab分割的txt和excel。这时一般Trados用户的做法是从SDL OpenExchange（现在叫SDL AppStore）下载Glossary Converter。这个工具可以转换Excel表格为Trados支持的翻译记忆和术语库格式。\n\n\n内嵌内容处理器\nTrados可以使用正则来处理文本中的标签。比如Excel文件常被用作数据库，单元格内会存储各种带标签的内容，有HTML标签，也有其他自定义标签。内容可以用正则识别，但是怎么处理有颇多的设置。比如标记里的内容是不是要翻译，最终显示在编辑器的内容需要什么样的设置等等。\n另外在写正则式时要注意转义，比如$是需要转义的。\n\n", "filename": "2019-06-27-SDL-Trados-usage-experience.md"}, {"id": 306, "text": "\ndate: 2019-06-30 11:39:50+08:00\nlayout: post\ntitle: 文字与视频\ncategories: 随笔\ntags: \n\n想写这篇文章最初是因为看到了何同学的5G评测视频，视频的主要内容其实很简单，可以总结为5G速度非常快。但何同学讲述了自己整个测速、思考的经历，加上赏心悦目的视频剪辑技巧，获得了一致好评。\n同样内容，如果以文字的形式表现，恐怕无法吸引到这么大的关注。以前有人说我们进入了读图时代，那现在随着移动互联网的发展，可能我们又进入了一个视频时代。再加上抖音和短视频，基本上每个人现在都有创造自己的视频作品。\n不过何同学的视频其实没有什么干货，信息含量比较低。7分钟的视频的内容，阅读文字可能只要半分钟。这是视频的类型决定的，比如何同学视频里的刷公交卡、百度搜索等场景，我们都比较熟悉，能想象出来。而如果视频是一个动物纪录片，那动物的形态、动作、声音，这些可能都是崭新的信息，也是难以用文字来描述的。这时候视频的信息量比文字更大。\n视频存储在电脑上比文字占据的空间多得多，但是视频的信息太丰富了，每秒几十帧画面，镜头不断切换，还有音频和内嵌的文字，人需要挑选和处理信息。而文字是人对现实的抽象，是浓缩的内容。\n比如给放一段舞蹈视频，放了100遍后，问一开始是先出左脚还是右脚，可能还是答不上来。而用文字描述内容，比如第一个八拍有那几个动作，有什么要点，这样结合视频就非常容易记住。\n大多数人刷视频主要还是图一个视觉享受，这时单纯的文字就显得枯燥乏味。文字现在是融入了图像、视频之中。这也给翻译带来了挑战。", "filename": "2019-06-30-text-and-video.md"}, {"id": 307, "text": "\ndate: 2019-07-05 20:32:50+08:00\nlayout: post\ntitle: 专用于电商的阿里机器翻译\ncategories: 技术随笔\ntags: CAT\n\n阿里的各种服务基本都是和电商挂钩的，它推出的机器翻译API就针对电商做了定制。\n电商翻译常见的类型就是标题的翻译，比如这个：森马夏季短袖T恤女甜美撞色chic韩版娃娃领学生Polo衫糖果色百搭T。图片如下：\n\n我们分析下标题，会发现标题其实是由很多的关键词堆砌而成的，以上标题可以拆分成如下的短语：\n森马\n夏季\n短袖\nT恤\n女\n甜美\n撞色\nchic\n韩版\n娃娃领\nPOLO衫\n糖果色\n百搭T\n那么标题的翻译主要的考验就是分词和构建对应的词典。这一任务其实不用神经网络，单纯用规则的方法也可以有比较好的效果。阿里就提供了自定义词典的接口。\n现在我们来比较一下几家机器翻译的结果：\n阿里电商：\n\nSemir Summer Short Sleeve T-shirt Female Sweet Contrasting Color Chic Korean-Style Peter Pan Collar Students Polo Shirt Candy-Colored Versatile T\n\n阿里通用：\n\nSamma summer short-sleeved T-shirt female sweet hit color chic Korean version of the baby collar student polo shirt candy color Wild T\n\n百度：\n\nSunma Summer Short-sleeved T-shirt Woman Sweet Colour Chic Korean Doll Collector Student Polo Shirt Candy T-shirt\n\n谷歌：\n\nSenma summer short-sleeved T-shirt female sweet contrast color chic Korean version of the doll collar student Polo shirt candy color wild T\n\n有道：\n\nSummer sema short sleeve T shirt girl sweet contrast color chic han doll led students Polo shirt candy color joker T\n\n搜狗：\n\nSenma summer short sleeve T-shirt female sweet contrast color chic Korean doll collar student Polo shirt Candy-colored Joker T\n\n腾讯：\n\nSamma summer short-sleeved T-shirt sweet impact chic Korean doll collar student Polo shirt candy color T-shirt\n\nIBM Watson：\n\nSenma summer short-sleeved T-shirt female sweet chic chic Korean version doll collar student Polo shirt candy color T-T T\n\n一些常见的词，基本都能翻译出来，比如短袖、T恤、POLO衫等等，有一些针对服装设计的词，比如撞色（contrast color），有部分机器翻译没翻译出来，而森马这类专有名词则只有阿里电商翻译正确。\n另外一些我自己也不太熟悉的表达，比如糖果色、娃娃领。\n查了下娃娃领也叫彼得潘领，但不知道英文中是不是也有两种叫法，比如doll collar和Peter Pan Collar这两种。我在亚马逊检索Peter Pan Collar可以找到类似的内容，比如这条：Allegra K Women's See Through Contrast Peter Pan Collar Lace Top \n\n当我检索doll collar时结果却很少，看来Peter Pan Collar是合适的翻译。\n综合比较下来，的确阿里的电商版本效果最好。不过可能是我选择的标题关系。\n针对特定领域的机器翻译现在看来还是非常有用的，因为不同领域，各种句式、用词都会不同，使用针对性的方法可以改善结果。\n另外，机器翻译API一般只提供一个结果，其实一个中文词可能包含多个外文词表达的意思。比如露肩，我知道翻译为cold shoulder，但发现阿里翻译成了off-the-shoulder，我以为是翻错了，但仔细一想这个意思也是对的，而且能在亚马逊上搜索到。搜索了下图片，发现off-the-shoulder是没有肩带的，相当于中文的一字肩。而cold shoulder我认为翻译为肩膀镂空比较合适。\n再提一下阿里机器翻译的接入。虽然提供的sdk很方便，但是BasicCAT的插件不能直接引用jar，于是我就自己写代码实现。但自己看文档写调用比较复杂，主要一点是签名的问题，是我除了亚马逊之外碰到的第二复杂的。以后碰到这种我还是偷个懒，放弃插件的方式，直接把SDK引入主程序里使用吧。", "filename": "2019-07-05-alibaba-machine-translation-for-ecommerce.md"}, {"id": 308, "text": "\ndate: 2019-07-21 22:48:50+08:00\nlayout: post\ntitle: 转换Excel中的繁体到简体\ncategories: 技术随笔\ntags: \n\nExcel和Word一样，是自带简繁转换的，但是我在处理暗黑2的繁体中文时出现了错误，无法转换。于是我想利用opencc来做。\nopencc是使用cygwin编译的，可以直接命令行调用，使用以下命令可以将繁体转换为简体，其中的txt文件要求utf-8编码。\nopencc -i input.txt -o output.txt -c t2s.json\n一种方法是使用Apache POI直接操作Excel，将繁体内容导出，调用opencc命令行转换，然后导回。\n还有一种方法是使用Excel的开发功能，新建一个VBA模块，通过自定义函数来调用opencc进行转换。\n因为我嫌vba操作文本文件比较麻烦，默认使用的gbk编码而不是utf8，所以选择了用B4J搭建一个服务器，提供转换接口，VBA访问http://127.0.0.1/t2s?text=TraditionalChinese来获得转换后的简体中文。\nVBA代码如下：\n```\nFunction T2S(text As String) As String\n    Dim xmlhttp As Object\n    Set xmlhttp = CreateObject(\"MSXML2.XMLHTTP\") '创建XML对象\n    xmlhttp.Open \"GET\", \"http://127.0.0.1:8080/t2s?text=\" & encodeURI(text), False\n    '用GET 发送请求\n    xmlhttp.Send\n    T2S = xmlhttp.responsetext\nEnd Function\nFunction encodeURI(strText As String) As String\n    strText = Replace(strText, \"\", \"\\\")\n    strText = Replace(strText, \"'\", \"\\'\")\n    strText = Replace(strText, Chr(13), \"\\r\")\n    strText = Replace(strText, Chr(10), \"\\n\")\n    strText = Replace(strText, Chr(0), \"\\0\")\n    With CreateObject(\"msscriptcontrol.scriptcontrol\")\n        .Language = \"JavaScript\"\n        'encodeURI = .Eval(\"encodeURIComponent('\" & strText & \"');\")\n        encodeURI = .Eval(\"encodeURI('\" & strText & \"');\")\n    End With\nEnd Function\n```\nURLEncode代码来自：如何Encode Url 字元\n然后在单元格中输入函数就可以使用了。\n\n通过HTTP获得的数据会被保存，再次打开Excel不会重复发送请求。不过如果单元格太多，非常容易发生错误。这种情况我觉得还是写个工具处理Excel比较方便。", "filename": "2019-07-21-traditional-chinese-to-simplified-chinese-conversion-for-excel.md"}, {"id": 309, "text": "\ndate: 2019-07-27 22:42:50+08:00\nlayout: post\ntitle: 语言中的创新表达\ncategories: 随笔\ntags: \n\n乔治·奥威尔在他的散文《政治和英语》(Politics and the English Language, George Orwell, 1946)中提到说英语正在退化，而语言的退化会影响到人们的思维。\n他列举了几种不好的语言使用情况：\n\n老旧的隐喻(DYING METAPHORS)，隐喻应该有一定的创新性，把一副生动的画面呈献给读者。而像Achilles’ heel这样的表达，读者已经习以为常了，它已经成为了一个普通的词语，用于日常交流大家都能理解，但是不能给人耳目一新的感觉。\n冗长的动词短语(OPERATORS OR VERBAL FALSE LIMBS)，比如用make contact with而不是contact。\n浮夸的用词(PRETENTIOUS DICTION)。这个现象在苹果发布会上经常出现，发言人用phenomenonal这个词来形容产品或者数量的增长。还有很多人为了显示自己的词汇量，自己的社会地位，会用一些法语词、拉丁语词，而不是简单的盎格鲁撒克逊语源的词。\n意思不明的词(MEANINGLESS WORDS)。比如democracy，每个国家或者政党都在定义自己的民主，以致于很难在词典里找到非常明确的民主的释义。\n\n就此，奥威尔提出了几点建议：\n1. Never use a metaphor, simile, or other figure of speech which you are used to seeing in print.\n2. Never use a long word where a short one will do.\n3. If it is possible to cut a word out, always cut it out.\n4. Never use the passive where you can use the active.\n5. Never use a foreign phrase, a scientific word, or a jargon word if you can think of an everyday English equivalent.\n6. Break any of these rules sooner than say anything outright barbarous.\n\n这其中，让我感触最深的就是使用新旧隐喻的问题。我们可以结合中文来看一看语言的创新性。\n目前，网络是语言创新的前沿阵地。每年都有很多网络流行语，比如2010年的给力，当时给人的印象深刻，目前也已经成为了汉语的一个词汇。\n日常生活对话和工具性文章中的创新之处并不多。我觉得还是文学性的文本会有很多亮眼的表达，比如《风云》片尾曲《永远永远》中“爱已搁浅”就是一个很有意思的隐喻，类似于涛声依旧，把爱情比作一艘海上的轮船。\n再说普通话和方言。现在汉语方言的创新能力真的比较薄弱。我知道的比较新的词也就上海话的捣浆糊、硬盘等等。而普通话则是不断吸收方言得到新的词汇，比如尴尬。我高中同学经常把海宁话中的词用普通话说出来，比如表示肯定的“韩版”。而在以前，因为方言使用得多，创造了很多生动的表达，比如《活色生香宁波话》里面收集的屁轻、甜味味、矮笃笃等。\n想出新的表达不是一件容易的事情，所以人们下意识会去选择熟悉的表达。奥威尔认为这样我们表达出来的意思会因为这一现象而改变，我们应该根据意思去选择词，而不是根据词去选择意思。改变写作习惯，同时也会改变思考的方式。\n不过其实有时候创造新词不是一个非常难的事情，比如自己发明了一个产品，然后给它取名字。我在翻译的时候就经常碰到之前没有翻译过的词，需要自己造一个对应的词。", "filename": "2019-07-27-innovative-expressions-in-language.md"}, {"id": 310, "text": "\ndate: 2019-07-28 20:45:50+08:00\nlayout: post\ntitle: 低门槛AI应用\ncategories: 技术随笔\ntags: \n\n最近想做一个漫画气泡自动识别的应用，因为漫画的图像复杂，ABBYY之类的软件不能很好的识别文字。而且在翻译漫画时，识别的气泡区域信息可以用于遮盖原来的文字，填上译文。\n关于气泡分割，已经有相关的论文了，比如：Deep CNN-based Speech Balloon Detection and Segmentation for Comic Books。该篇论文是精确的场景分割，并不是粗略的目标检测。\n而对于普通人而言，要理解深度学习技术的原理还是有难度的，但是我们又有定制自己的深度学习应用的需求。这一方面，国内企业中还是百度做得最好，它提供的easyDL可以支持用户自己上传数据，训练模型。图形处理方面，它目前支持图像分类和目标检测。\n以下是使用训练的模型的识别效果：\n\neasyDL基于百度自己的Paddlepaddle深度学习框架实现，只需用户上传自己的数据就可以完成模型的训练，而且提供各种优化模型的方法。中文的文档、视频教程也比较齐全。百度在AI方面还是很良心的。\neasyDL降低了人工智能应用的入门门槛，可以让普通用户、企业专注于自己的业务。而提供这类服务的公司可以不断精进自己在AI领域的技术。可能以后AI科学家和工程师主要都是在这类大型企业谋职，做基础的AI研究，而AI在行业的落地则是由各个行业基于百度这类企业提供的AI服务来实现。", "filename": "2019-07-28-entry-level-AI-application.md"}, {"id": 311, "text": "\ndate: 2019-07-31 11:29:50+08:00\nlayout: post\ntitle: 在其他CAT中继续处理OmegaT项目\ncategories: 技术随笔\ntags: \n\nTrados的项目文件存储为SDLXLIFF，我们可以使用其他CAT工具通过SDLXLIFF来继续翻译。而OmegaT并不没有中间格式文件。\n这时我们可以利用脚本来手动生成一个中间格式文件。\n使用以下脚本，可以将OmegaT项目的所有片段导出。每个片段存储为一行，并替换原来文本的换行为\\n。\n```groovy\nfiles = project.projectFiles;\nsegment_count=0\ndef prop = project.projectProperties\nif (!prop) {\n    showMessageDialog null, res.getString(\"noProjectMsg\"), res.getString(\"noProject\"), INFORMATION_MESSAGE\n    return\n}\ndef root = prop.projectRoot;\ndef srcTextFile = new File(root, 'project_source_content.txt');\ndef out = \"\";\nfileLoop:\nfor (i in 0 ..< files.size())\n{\n    fi = files[i];\nfor (j in 0 ..< fi.entries.size())\n{\n    if (java.lang.Thread.interrupted()) {\n        break fileLoop;\n    }\n\n    ste = fi.entries[j];\n    source = ste.getSrcText();\n    source = source.replace(\"\\n\",\"\\\\n\")\n\n    out <<= source;\n    out <<= \"\\n\";\n    segment_count++;\n}\n\n}\nsrcTextFile.write(out.toString(),\"UTF-8\");\n```\n使用其它CAT翻译这一文件，然后生成翻译记忆，将tmx文件放到OmegaT项目的/tm/auto可以自动填充翻译。", "filename": "2019-07-31-continue-omegat-projects-in-other-CAT-tools.md"}, {"id": 312, "text": "\ndate: 2019-08-07 14:10:50+08:00\nlayout: post\ntitle: 漫画翻译之拟声词\ncategories: 随笔\ntags: 翻译\n\n漫画中通过拟声词来增加声音效果，比如蜘蛛侠弹丝的声音：\n\n拟声词一般会添加各种特殊的效果，成为漫画图像的一部分。\n\n\n也有拟声词存在于对话气泡中。\n\n每种语言都有拟声词。不过同样的内容，发音可能并不一样，比如猫的叫声，中文是喵，日语是nya。\nnoisehelp网站整理了一百多个英文拟声词：\nHuman Sounds\n\nVoice: hum, grunt, mutter, chatter, yack or yak, blab, lisp, sneer, snicker, giggle, whimper, bawl, squeal, shriek, whoop \nNose and Mouth: shush, whistle, smooch, cluck, smack, crunch, munch, gulp, spit, sputter, splutter, slobber, cough, sniff, sniffle, hiccup, huff, snort, snore, belch \nHands: pat, clap, slap, smack \n\nAnimal Sounds\n\nDogs: woof, yip, yap, growl, snarl, howl \nCats: meow or miaow, mew, purr \nBirds: chirp, cheep, tweet, peep, twitter, crow, squawk \nInsects: buzz, chirp, hum \n\nVehicle Sounds\n\nEngines: roar, hum, purr \nHorns: honk, beep \nExhaust pipes: sputter, rumble \nBrakes: squeal, screech \n\nOther Sounds\n\nExplosions: boom, bang, pop \nCollisions: crash, bang, clash, wham, smack, whomp, whump, thump, bump \nHigh Speed: zoom, whoosh, swoosh, zing \nActions: zip, tap, click, clip, snip, knock, rap, bang, thwack, flap, smack, smash \nObjects: creak, squeak, pop, boing, sizzle, fizzle, flap \nGroups of Objects: rustle, clack, clunk, clank, jingle, rattle, clatter \nSirens: blare, shriek \nAlarms: ding, buzz, beep, clang \nMusic: drum, throb, thump, twang, plink, plunk, bong \nLiquids: squish, slush, burble, gurgle, trickle, glug, splatter, squirt, fizz, plop \nAir: puff, hiss, whistle, swoosh, whoosh \nElectricity: buzz, hum, zap \n\n中文的拟声词通常偏旁为口，比如嗖、咚、哗、嗒、喵、唰、嗡，当然也有其它类型的，比如轰隆隆、叮铃铃。如果现有的拟声词不能反映某种音效，可以自己创造拟声词。\n为了表示声音的延续，会把单词拉长。中文则是重复，比如啊啊啊啊。而像哈哈哈这样每个字是间隔开的，英文也是用的hahaha这样的重复方法。\n\n为了表示声音的重复，会添加多个拟声词。\n\n漫画中出现的特效词，除了表示声音的，还有表示动作的。比如下面这个撕掉窗帘的动作。\n\n在翻译的时候可以采取两种方法，一种是找到对应的拟声词，比如把嗖翻译为whish、swoosh等词。\n\n\n另一种是把动作翻译出来，比如以下是摆摊老板翻动一块布时的场景，中文使用了“哗”这一拟声词，但不是很容易找到对应的英文拟声词，就把这一动作翻译了出来。\n\n\n对于和图像内容融合程度非常高的拟声词，因为较难处理，一般是不翻译的。\n\n2020-02-22更新\n针对拟声词翻译设计了一套在线检索工具，将声音根据音调、响度和持续时间，以及是否多个物体、是否是流体以及物体速度这六个属性进行分类。用户可以检索中英文释义或者根据分类进行检索。对于中译英的漫画很有帮助。\n项目仓库：https://github.com/xulihang/WhichSound\n试用地址：http://www.xulihang.me:51041/search.html?id=oyBSYLKVUES9guNOtyPsig\n关于拟声词检索系统的使用还提供了视频教程，可以参见漫画翻译工具ImageTrans的官网。\n引用图片来源：\n\n蜘蛛侠：https://www.cbr.com/the-15-most-iconic-comic-book-sound-effects/\n德古拉：https://readcomicsonline.ru/comic/disney-dracula-starring-mickey-mouse-2019/1/12\n神之一角\n史高治叔叔：https://readcomicsonline.ru/comic/uncle-scrooge-2015/1/5\n复仇者联盟v3第500卷\nMother Box：https://www.cbr.com/the-15-most-iconic-comic-book-sound-effects/\n逆转逃杀\n沉睡末日\nBreaking the Silence: How Comics Visualize Sound http://sequart.org/magazine/53486/how-comics-visualize-sound/\n\n相关链接：\n\n拟声词大全以及如何翻译拟声词（普通文本）\n看漫画时如何自带bgm？聊聊动漫中的那些“拟声词”\n", "filename": "2019-08-07-comics-translation-sound-effects-words.md"}, {"id": 313, "text": "\ndate: 2019-08-08 10:12:50+08:00\nlayout: post\ntitle: 漫画翻译之文字提取与替换\ncategories: 随笔\ntags: 翻译\n\n一般译员翻译漫画是直接看着图片输入译文，这样的一个缺点是不能统计字数、不能使用CAT软件，数据不够结构化。\n漫画一般是用Photoshop和InDesign制作，可以整理出6种情况：\n\nJPG\nPSD，文字存在于文本框中\nPSD，文字已经由文本框转换为图像，文本都有单独的图层\nPSD，文字已经由文本框转换为图像，而且和其它内容融合在一起\nPDF\nIDML或者INDD\n\n为此，我专门设计了两个工具：\n\nImageTranscriber，辅助图片OCR工具。\nPSDLocalization，可以从PSD文件提取文本，并将翻译好的文本回填。\n\n情况一\n使用ImageTranscriber提取文字。一般的OCR会先检测文字区域，然后识别文字，但是漫画的文字通常存在于气泡中，OCR常常不能准确识别文字区域。该工具可以利用深度学习自动检测气泡，根据坐标信息排序气泡并OCR。\n\n回填的话，可以用jpg文件生成PSD，在文字区域新建一个遮盖层并新建一个文本框。\n一般需要处理JPG是因为时间紧张不能及时提供PSD，或者工作本身就是粉丝志愿发起的。\n情况二\n文字存在于文本框中，可以通过PSDLocalization操作Photoshop，可以直接批量提取文本并替换。\n\n情况三\n文字已经由文本框转换为图像，文本都有单独的图层，可以通过PSDLocalization操作Photoshop，将存在文字的图层导出为图像，使用OCR提取文字。回填时根据该图层的坐标生成文本图层，同时删去或者隐藏原来的图层。\n\n情况四\n文字已经由文本框转换为图像，而且和其它内容融合在一起。需要将PSD另存为JPG，使用ImageTranscriber处理，然后在PSD文件中生成遮盖层和文本框。如果PSD中的文字可以比较容易地隐藏，那就不用生成遮盖层。\n\n情况五\nPDF一般是由InDesign转换而来的，如果有InDesign的源文件，最好直接处理源文件。如果没有，只能把PDF导出为图像，当作JPG来处理。\n情况六\n使用InDesign格式的一般是漫画书。InDesign文件可以直接使用CAT软件处理。参考：BasicCAT使用教程——翻译InDesign文件\n但是InDesign文件中的文字如果是存在图片文件里的，则会比较麻烦，比如InDesign会使用eps格式的图像文件。eps图像的文字一般都是需要设计师重新设计的。\n文字排版\n一般漫画文字的排版是一倍行距，除非文字很长或者气泡很小，文字大小一致。\n如果文字实在放不下，需要把气泡调大，而如果空的空间太多，则要把气泡调小。\n\n翻译到日语的话，还需要将文字竖直排版（图片来自lezhin）。\n\n\n对于拟声词，有PSD的话一般直接隐藏就可以。但是有的漫画的拟声词是作者绘画时手动画上去的或者只有JPG，这时要p掉文字会比较麻烦。要p掉文字的话可以用PS的污点修复画笔工具，对背景的还原效果还可以。\n\n2019-11-05更新：\n关于漫画嵌字是如何做的，可以看此文：漫画嵌字。\n最新版的ImageTranscriber同时具备PSD处理能力以及文本翻译功能，已经更名为ImageTrans，介绍见此：ImageTrans。", "filename": "2019-08-08-comics-translation-text-extraction-and-substitution.md"}, {"id": 314, "text": "\ndate: 2019-08-08 14:40:50+08:00\nlayout: post\ntitle: 直引号与弯引号\ncategories: 随笔\ntags: 翻译\n\n英文文本中的引号向来是有一个弯的，也就是中文使用的弯引号。在打字机出现时，因为显示的空间问题，创造了直引号。\n在编程时需要使用直引号，而在其他文本中一般都要用弯引号。\n\n\nWord和Photoshop都提供智能引号(Smart Quotes)功能，在用户输入时会自动将直引号改为弯引号。\nPhotoshop设置路径：首选项-文字-使用智能引号\nWord设置路径：选项-校对-自动更正-键入时自动套用格式-直引号替换为弯引号", "filename": "2019-08-08-straight-and-curly-quotes.md"}, {"id": 315, "text": "\ndate: 2019-08-09 23:32:50+08:00\nlayout: post\ntitle: 同一意思的不同表达\ncategories: 随笔\ntags: 翻译\n\n同一意思可以有不同的表达方法，比如表示拒绝，可以说我说不、我不要、我拒绝。\n这一现象英文中有专门的词来描述：paraphrase。\nthefreedictionary上找到的释义如下：\n\na restatement of a text or passage giving the meaning in another form, as for clearness; rewording. \n\n条条大路通罗马，为了表达意思，我们可以有很多词语的组织方法。\n也正因如此，翻译往往没有对与错，只有是否更加合适所处的语境。\n2022-08-09更新：\n最近看《最终幻想7重制版》的视频。女主角爱丽丝在战斗中施放治疗时，会有不同的语音，也可以看作paraphrase。具体表达如下：\n\nまずは回復\nこれは平気\nまだ余裕\n", "filename": "2019-08-09-paraphrase.md"}, {"id": 316, "text": "\ndate: 2019-08-09 23:25:50+08:00\nlayout: post\ntitle: 翻译英文中的生动表达\ncategories: 随笔\ntags: 翻译\n\n记得我初中时，英语老师让我解释give me a hand是什么意思。我能理解是给人提供帮助的意思，但我觉得给人一只手这一表达很形象，于是我给出了字面意思。我刚说完，我的同桌小姑娘就笑了，老师也说应该解释为帮助别人。其中中文里和give me a hand是有对应的表达的，比如帮一把手、施以援手等等。\n最近重新看《老友记》，发现里面有很多的生动表达，但是翻译成中文却觉得非常奇怪。似乎中文缺失了一种创造生动表达的基因。这涉及到中英对比与翻译，英语翻译过来要符合汉语的表达习惯。\n但我想，其实我们也可以大胆地通过直接翻译英文的一些生动表达来给中文添加一些创新的表达。\n2019-09-27更新\n因为我中文写的文学性质的书看得少，而且很多词日常使用都习以为常了，才觉得中文不够生动。中文其实有很多生动的表达，比如各种词的活用、成语、歇后语，翻译英语的生动表达时可以试着寻找对应的中文表达。", "filename": "2019-08-09-translation-of-vivid-expresion-in-English.md"}, {"id": 317, "text": "\ndate: 2019-08-09 23:19:50+08:00\nlayout: post\ntitle: 《老友记》中的生动表达\ncategories: 随笔\ntags: 翻译\n\nfandom和imdb上已经有很多《老友记》的语录等资料了，我这里记录下看《老友记》过程中发现的一些生动表达。\n第四季\n第13集\nRachel: I have the best job in the entire world. The most adorable guy came over today. 我的工作是世界上最棒的。今天来了一个非常帅气的男人。\n第14集\nHeston: I don't know one actor worth his salt who one time in his career did't say, \"God, I stink.\" 我想每个好演员在生涯中都曾说过：“天哪，我真烂。”\n第六季\n第14集\n\nJill: I throw myself at you and you say no? How gay are you?   我投怀送抱你却不要，你真是够gay的。\nChandler: (crying) I can't help it. I opened a gate. 我不能控制自己，我的阀门打开了。 \n\n第16集\nRachel: Joey, you're such an amazing actor. How do you know where Dr. Drake Ramoray leaves off and Joey Tribbiani begins?   乔伊，你是一个很棒的演员。你是怎么在拉莫瑞医生这一角色和现实中的自己之间做转换的？\n第24集\nMonica: I see you got your mustache back.   你又留起胡子了。\nRichard: Well, my nose got lonely.  因为我的鼻子觉得孤单了。\n第七季\n第7集\nChandler: I understand, but I have to put my foot down. The answer is no. 我理解，但我必须态度坚决。我的回答是不。\n第10集\nChandler: But I didn't get to shake my belly like a bowlful of jelly.    但我还没来得及像摇果冻一样摇晃我的肚子。\n第15集\n\n\nMonica: We just want to bounce some ideas off you about the wedding ceremony. 我们想请你们给我们的婚礼想一些主意。\n\n\nJoey: She's been on the show forever. It's gonna be really hard to fill her shoes.   她参演这部戏很久了，很难替代她。 \n\n\nMonroe: The essence of the character is rooted in her confidence. So when Jessica enters a room, for instance she owns everything and every person in that room. 这个角色的精髓在于她的自信。比如当杰西卡走进一个房间，她拥有房间里所有事物、所有人。\n\n\n第八季\n第18集\nJudy: While we think it is simply marvelous that you are having this baby out of wedlock, some of our friends are less open-minded. 对我们来说，你们未婚生子完全没有问题，但我们的一些朋友并不那么开放。\n第九季\n第5集\nRachel: Knock that door down.   把门撞开。\nRoss: I would. But I bruise like a peach.   我也想。但我像个桃子一样容易撞出淤青。\n第12集\nRoss: Yeah, obvious beauty is the worst. You know when it is right there in your face. Me, I like to have to work to find someone attractive. Makes me feel like I earned it.   对，显而易见的美是最糟的，当它就在你面前时。我更喜欢花一段时间去发现某人有魅力。我会觉得这是我努力得来的。\n第13集\nRoss: First, you break the ice with some kind of a joke so they know you are the funny one then I swoop in with some interesting conversation so they'll see I'm the brilliant, brooding, sexy one.  首先，你和她们讲一个笑话来打开局面，让她们知道你是有趣的那个人。然后我来接管对话，讨论一些有趣的内容，这样她们就知道我是那个优秀、有涵养又性感的人。", "filename": "2019-08-09-vivid-expressions-in-friends.md"}, {"id": 318, "text": "\ndate: 2019-08-11 20:11:50+08:00\nlayout: post\ntitle: 漫画翻译之漫画脚本\ncategories: 随笔\ntags: 翻译\n\n和电视剧有剧本一样，漫画有漫画脚本。\n电视剧剧本会明确指出每个角色的台词、要做的表情以及运镜方法。而漫画脚本会说明每页有几个格子，每个格子里是怎样的场景，要选择怎样的视角，有哪些对话或者说明性文字。当然也有漫画的脚本没有那么详细，主要是大致的剧情，然后画师根据剧情自由发挥。\n以下是忍者神龟(TMNT: UNIVERSE)开头的一段脚本和对应的漫画。\n\nPAGE ONE – FIVE PANELS \nPANEL ONE \nA heavily-industrialized area, in the outer boroughs (maybe Queens or The Bronx, somewhere run-down and pre-gentrification – I name check Ridgewood [Queens] later, but we can change that), at sunset. It gives off the impression of blight, desolation and urban ruin. We see the Manhattan skyline in the distance. \n\nBISHOP/CAP: “This is our world.” \n\n\n\n可以发现，漫画脚本的文字非常详细，可以很好地帮助我们理解漫画的内容，从而做到准确的翻译。\n当然，不是所有漫画都能找到对应的脚本。这时如果漫画很有名，一般会有相关的wiki页面，比如复仇者联盟#500有fandom页面，里面会介绍大致的剧情，出现了哪些角色等等。\n给复仇者联盟漫画写过脚本的Brian Michael Bendis还有自己的博客，他也上传了一些他的脚本：SCRIPTS。\n国内漫画作者游竺介绍了如何写漫画脚本：如何写漫画脚本？", "filename": "2019-08-11-comics-translation-scripts.md"}, {"id": 319, "text": "\ndate: 2019-08-12 22:52:50+08:00\nlayout: post\ntitle: 逆天而行\ncategories: 随笔\ntags: \n\n好久没有在路上碰到阵雨了。\n去年暑假的一个傍晚，我在北大软微的大兴校区，虽然看着天上有乌云，但还是出去散步了。结果走到半路就下起了倾盆大雨，而且马路上几乎没有一个人。雨下得那么大，人行道上都是流淌的雨水，鞋子自然是湿透了。\n今天晚上下地铁，五道口上空乌云密布，不久就开始大风降雨。我骑上车，打起伞，一刻也不想停歇地往回赶。结果快骑到家的时候，雨势已经不大了。\n在阵雨下得最大的时候还坚持骑车回家，可算是“逆天而行”了。逆天而行颇为英雄，但少不了吃苦头。还是应该掌握规律，顺势而为。", "filename": "2019-08-12-go-against-the-laws-of-nature.md"}, {"id": 320, "text": "\ndate: 2019-08-17 16:05:50+08:00\nlayout: post\ntitle: 漫画一词的意义变化\ncategories: 随笔\ntags: 翻译\n\n如今说起漫画，大多数人想到的是《火影忍者》、《名侦探柯南》这样的日本漫画或者《复仇者联盟》、《蝙蝠侠》这类美国漫画。但漫画最初的形式却并不是这样的。\n漫画一词最初应该是由日本人借鉴中国典籍后创造的，就好像科学、革命等现代汉语一样，漫画一词又传回了中国，为丰子恺等漫画家采用。\n漫画，主要在于“漫”，是一种较为随意的绘画形式，是绘画中的随笔。中国画有工笔画和简笔画，漫画要对应的话就是简笔画。小说中精美的插图不算漫画，因为太过精致。马路上请人画的速写也不叫漫画，因为缺少内容。\n今泉一瓢翻译英文的comics和caricature时选择了现有的漫画一词，漫画的含义又进一步延伸。comics主要是指用图画展示的剧情故事，使用气泡、拟声词等表示对话和声音效果。caricature则是具有讽刺意义的图画。\n关于漫画的更多内容，可以看中国青年出版社的《丰子恺漫画精品集》一书。\n词语的语源探究其实是一件挺有意思的事情，英文中有专门的词汇叫etimology，翻译过来叫语源学。", "filename": "2019-08-17-meaning-changes-of-the-word-manhua.md"}, {"id": 321, "text": "\ndate: 2019-08-18 16:05:50+08:00\nlayout: post\ntitle: 翻译的增与失\ncategories: 随笔\ntags: 翻译\n\n2003年在《Perspectives》期刊上发表的一篇题为《漫画翻译中的增与失》(‘Loss’ and ‘gain’ in comics)的文章结合《卡尔文与霍布斯虎》(Calvin and Hobbes)与《唐老鸭》(Donald Duck)的例子讨论了漫画翻译的难点。\n《卡尔文与霍布斯虎》是登载于报纸上的连环漫画，篇幅较短，通常只有2到4格内容，并且内容通常包含一个笑话或者意想不到的内容(punchline)。\n比如例子中的内容：\n第一格：\nCalvin: SOME KIDS AT SCHOOL GOT FILTHY RICH TODAY.\nHobbes: REALLY? HOW?\n第二格：\nCalvin: THEY GRABBED HIM BY THE DRINKING FOUNTAIN.\n这个漫画的点在于RICH，读者一开始读可能会以为是富有的意思，但看了第二格的内容才知道RICH其实是Richard这个名字的缩写。因为漫画中的字体都是大写的(majuscule)，而且filthy rich是一个习语，所以有了出人意料的效果。不过我个人觉得并不怎么有趣，有点冷。\n这样的内容，是一种文字游戏，属于不可译的内容。我们顶多想一个类似的笑话来做到功能对等。不可避免地，原来的内容要丢失，新的内容要添加。\n《唐老鸭》则都是漫画故事，一个篇幅可以长达十几页。这类漫画翻译的难度要小很多，因为它吸引人的主要是精彩的故事，而不是各种浓缩的笑话。\n《唐老鸭》中角色的名字用到了很多修辞方法，比如辉儿(Huey)、杜儿(Dewey)、路儿(Louie)是押尾韵。唐老鸭的英文名Donald Duck是押头韵，中文里就体现不出来了，但是唐老鸭这个称呼是那么亲切，头韵这类修辞抛弃就抛弃吧。\n《唐老鸭》的故事在中国由童趣出版公司发行在《米老鼠》杂志中，我从小看这本杂志。中文版《米老鼠》有一些编辑添加的内容，不过基本和国外版本相同，参见【科普向】德国米老鼠杂志和国内的对比。\n中文版的故事在编辑时往往会针对中国孩子，添加一些成语，比如把标题翻译为乐极生悲而不是直译，这时更多的是由编辑做创新，而不是翻译。童趣在本土化唐老鸭杂志方面，总的来说还是很成功的。", "filename": "2019-08-18-gain-and-loss-in-translation.md"}, {"id": 322, "text": "\ndate: 2019-09-23 17:09:50+08:00\nlayout: post\ntitle: 混合主动交互模式\ncategories: 技术随笔\ntags: \n\n混合主动(mixed-initiative)是一种人机交互的模式，在完成任务的过程中，人与机器会互相给出意见并主导任务。有混合主动模式，那也有不混合的模式，即人或机器占主导地位的模式。\n用对话的例子比较好说明，比如两个人要去吃饭，如果是一方主导：\n小张：我们周五晚上去吃饭吧？\n小李：好啊。\n小张：我知道五道口有一家不错的火锅店，去那里吧？\n小李：好啊，那就这样定了，周五再联系。\n如果是双方互相给意见：\n小张：我们周五晚上去吃饭吧？\n小李：好啊，去哪里吃呢？\n小张：我知道五道口有一家不错的火锅店，去那里吧？\n小李：我想吃清淡一点的，我们去XX吧。\n小张：好啊，那就这样定了，周五再联系。\n混合主动的概念虽然是70年代提出的，但定义和用法一直比较模糊。在1999年的SIGCHI人机交互小组会议上，微软研究院的Eric Horvitz介绍了他们总结的混合主动的设计原则，并给出了一个叫做LookOut的程序作为例子。这一设计原则可以让自动化程序和人有机结合起来。\n以下是设计原则的英文和对应的译文：\n\n\nDeveloping significant value-added automation. It is important to provide automated services that provide genuine value over solutions attainable with direct manipulation.\n开发能添加价值的自动化。 自动化服务需要提供真正的价值，并能供用户直接操作。\n\n\nConsidering uncertainty about a user’s goals. Computers are often uncertain about the goals and current the focus of attention of a user. In many cases, systems can benefit by employing machinery for inferring and exploiting the uncertainty about a user’s intentions and focus.\n考虑用户目标的不确定性。 计算机常常不能确定用户的目标和当前的关注点。在许多情况下，系统可以通过某种机制来推断和使用用户目的和关注点的不确定性。\n\n\nConsidering the status of a user’s attention in the timing of services. The nature and timing of automated services and alerts can be a critical factor in the costs and benefits of actions. Agents should employ models of the attention of users and consider the costs and benefits of deferring action to a time when action will be less distracting.\n服务触发时机需要考虑用户的注意状态。 自动化服务和提醒的性质和时机可能是操作的是否有用的一个关键因素。Agent应该使用用户注意的模型，并考虑将操作推迟到分散用户较小的注意力时的效益。\n\n\nInferring ideal action in light of costs, benefits, and uncertainties.  Automated  actions  taken  under uncertainty in a user’s goals and attention are associated with context-dependent costs and benefits. The value of automated services can be enhanced by guiding their invocation with a consideration of the expected value of taking actions.\n根据效益和不确定性，判断理想的操作。 在用户目标和注意不确定的情况下采取自动化操作的效益与操作的场合相关。自动化服务的价值可以在考虑操作的预期价值的前提下，通过适合的调用机制来得到加强。\n\n\nEmploying dialog to resolve key uncertainties. If a system is uncertain about a user’s intentions, it should be able to engage in an efficient dialog with the user, considering the costs of potentially bothering a user needlessly.\n使用对话框来解决主要的不确定性。 如果系统不确定用户的操作意图，它应该能用一种有效的对话机制和用户互动，并考虑是否有必要打扰用户。\n\n\nAllowing  efficient  direct  invocation  and termination. A system operating under uncertainty will sometimes make poor decisions about invoking— or not invoking—an automated service. The value of agents providing automated services can be enhanced by providing efficient means by which users can directly invoke or terminate the automated services.\n允许有效的直接调用和终止操作。 具有不确定性的系统常常会错误地调用或者不调用自动化服务。用户可以高效地直接调用或终止自动化服务，以增强提供自动化服务的Agent的价值。\n\n\nMinimizing the cost of poor guesses about action and timing. Designs for services and alerts should be undertaken with an eye to minimizing the cost of poor guesses, including appropriate timing out and natural gestures for rejecting attempts at service.\n尽量减少对行动和时机的错误猜测带来的成本。 服务和提醒的设计应该能最小化错误猜测带来的成本，比如添加合理的超时设计和用于拒绝提醒的自然手势设计。\n\n\nScoping precision of service to match uncertainty, variation in goals. We can enhance the value of automation by giving agents the ability to gracefully degrade the precision of service to match current uncertainty. A preference for “doing less” but doing it correctly under uncertainty can provide user’s with a valuable advance towards a solution and minimize the need for costly undoing or backtracking.\n调整精确度的范围，以匹配不确定性和目标的多样。 Agent要能调整服务的精确度以匹配当前的不确定性，从而加强自动化的价值。在不确定的情况下，做得少，但做得对，既能够帮到用户，也能减少不必要的修改和回溯操作。\n\n\nProviding mechanisms for efficient agent−user collaboration to refine results. We should design agents with the assumption that users may often wish to complete or refine an analysis provided by an agent.\n提供Agent和用户互相合作以完善结果的机制。 用户常常希望能够完善Agent提供的结果。\n\n\nEmploying socially appropriate behaviors for agent−user interaction. An agent should be endowed with tasteful default behaviors and courtesies that match social expectations for a benevolent assistant.\n利用合适的方式来进行Agent与用户的互动。 Agent要想成为一个好的助手，应该具有满足社会期待的良好的行为举止和礼貌。\n\n\nMaintaining  working  memory  of  recent interactions. Systems should maintain a memory of recent interactions with users and provide mechanisms that allow users to make efficient and natural references to objects and services included in “shared” short-term experiences.\n保存有关近期操作的工作记忆。 系统应该保存用户的近期操作，并提供一种让用户高效而自然地利用这一短期记忆的机制。\n\n\nContinuing to learn by observing. Automated services should be endowed with the ability to continue to become better at working with users by continuing to learn about a user’s goals and needs.\n通过观察进行持续学习。 自动化服务应该能够通过学习用户的目标和需求更好地与用户进行合作。\n\n\n下面简单介绍下论文中给出的LookOut程序，这是一个从Outlook的邮件中自动提取信息建立日历的应用。\nLookOut会分析收到的信息，提取其中的日期、事件等信息，自动建立日程（基于贝叶斯、SVM分类文本是否可以用于建立日程）。如果它对提取的内容不确定，则会让用户手动操作，或者以更低的精度（天->周）列出。\nLookOut还提供一个Social-agent模式，以拟人化的小助手的形象与用户进行交互。\n\n因为人机互动和对话非常相近，我们也可以借鉴语用学的知识，比如合作原则。\n\n量的准则(Maxim of Quantity)：提供所需的信息，不提供冗余信息\n质的准则(Maxim of Quality)：内容有质量保证\n关系准则(Maxim of Relevance)：内容要有相关性\n方式准则(Maxim of Manner): 注意提供信息的方式方法\n", "filename": "2019-09-23-mixed-initiatives.md"}, {"id": 323, "text": "\ndate: 2019-09-29 16:48:50+08:00\nlayout: post\ntitle: 漫画的形式\ncategories: 随笔\ntags: \n\n漫画的分类方法有很多，有按题材、按读者、按篇幅等各种分类方式。\n本文主要讲漫画有哪几种形式。\n\n\n单幅漫画\n\n时局图具有讽刺意义。\n\n古代的水墨画常常有配上诗文，和画面交相辉映，丰子恺的漫画作品采用了这一形式，但内容更加朴实、生活化。\n\n\n连环漫画(comic strips)\n这类漫画通常登载在报纸，图为Calvin and Hobbes以及《一支驳壳枪》。\n\n\n\n\n短篇或长篇故事\n这类多以漫画书或者漫画杂志的形式出现。美国漫画书(comic book)比较多，欧洲和日本的漫画多登载在杂志上。图为《哆啦A梦》。\n\n\n\n在线漫画\n传统的漫画多是根据报纸、书的大小进行制作的，一页有很多的分格，叫做格漫。而随着智能手机的出现，出现了可以无限下来的竖状漫画，叫做条漫。\n条漫最初是在韩国流行的，英文叫做webtoon。微博上的很多漫画，比如《一条狗》、《SQ》也都属于条漫。\nSQ示例：https://weibo.com/1300957955/I4NDou3CK\n\n", "filename": "2019-09-29-comics-forms.md"}, {"id": 324, "text": "\ndate: 2019-09-29 20:08:50+08:00\nlayout: post\ntitle: 漫画翻译的难点\ncategories: 随笔\ntags: 翻译\n\n符际翻译\n漫画的特点是文字与图像结合以传达语义，很多时候我们要做符际翻译，而不是单纯的文字转换。比如画面中蜘蛛侠撞断了柱子，这时英文使用了自己创造的拟声词rnchh。这时翻译就不是文字的转换，而是将图像表示的内容用目标语来表示。结合语境，我们这里可以翻译为砰。\n\n关于拟声词的更多内容可以见此文：漫画翻译之拟声词\n口语文本\n漫画文本多是人物的对话，属于口语语体，语言可能不规范，会使用很多习语。\n如果译者不是目标语母语者，那很难保证翻译的地道性，而且理解原文的含义也不是一件容易的事情。\n我们可以看一下这个Calvin and Hobbes的例子，中文版由MaxPayen999翻译。\n\nCalvin问一些奇怪的请求，目的是想让妈妈给他饼干，但是妈妈看穿了他的小心机。这里用到了一个习语：be on to sb，表示看穿某人。\nMaxPayen999的翻译版本并不贴切，应该是对这一习语不够熟悉。\n\n幽默\n这里的幽默主要是一些文字游戏。因为和语言本身息息相关，直接翻译就会失去效果，这时往往需要译者自己想出一个好的笑话。\n这里引用Killing the Frog — The Challenge of Translating Jokes的一个例子。\n\n其中一个角色向另一个角色问类似脑筋急转弯的问题。图中的问题是，什么虫子总是摔倒。\n\nいつもころんでいる虫はなんだ\n\n答案是\n\nテントウ虫（天道虫，即瓢虫）\n\n这里的日语，天道和転倒（表示摔倒）的发音相同，都是tentou。但是你要翻译成中文瓢虫就没有这种效果。\n这篇文章的作者自己想了一个版本：\n“What kind of bug is always spinning?” “a spider!”\n相关文章：\n\nTRANSLATING SOUND EFFECTS IN COMICS — ZACK DAVISSON\nThe Perils of Comics Translation\nThe challenge of bringing graphic novels to a global audience\n上海闵行翻译公司在动漫翻译中的挑战和难点 \n", "filename": "2019-09-29-comics-translation-the-difficulties.md"}, {"id": 325, "text": "\ndate: 2019-09-29 15:54:50+08:00\nlayout: post\ntitle: 漫画翻译概述\ncategories: 随笔\ntags: 翻译\n\n本文是一个漫画翻译相关文章的集合。\n什么是漫画\n《Understanding Comics》[^uc]给出的一个简单的释义是一种具有顺序的艺术(Sequential Art)，但漫画的定义一直是一个值得争论的问题。\n现代汉语中的漫画一词还是由日本引进的，指比较随意的绘画形式，而后来它的含义也延伸到用图像表示的长篇剧情故事或者具有讽刺意义的图画。^meaning\n这篇文章就几种漫画的形式给出了具体的示例：漫画的形式\n漫画的制作流程\n漫画一般先由编剧写好脚本，然后由插画师进行绘制，当然也有编剧和绘画是一个人完成的，国内很多漫画都是这样。\n漫画翻译之漫画脚本\n漫画排版\n排版和漫画形式有关，比如条漫和格漫，可以参见上文给出的链接。\n这里再列出和文字排版相关的内容。\nSTEAM教你漫画排版\n美漫嵌字的文法和规范\n漫画翻译的流程\n一般网上的漫画都是做的扫译，就是爱好者扫描纸质版，然后把翻译的版本免费发布到网上。\n这时一般流程是修图（去噪，擦去原文）-翻译-校对-嵌字。\n如果是做的正版漫画，有原始文件，比如idml、psd和ai则会方便很多。\n文字提取和替换可以参见此文：漫画翻译之文字提取与替换\n漫画翻译的难点与心得总结\n\n漫画翻译的难点\n漫画翻译心得\n\n漫画制作工具\n\nAdobe InDesign，用于漫画书\nAdobe Illustraror，用于适合出版的漫画图像制作\nAdobe Photoshop，通常用于在线版漫画，国内作品用得多一点\n\n漫画翻译工具\n\nLabelPlus，译员在漫画的文字区域进行标记并翻译，之后可以利用脚本生成PSD，在对应的文字区域添加文字。\nmangaEditor，能够自动识别气泡并擦除里面的文字，提供有限的嵌字功能。\nImageTranslate，图片翻译工具，能自动识别文字区域并遮盖原文，手动调整字体，支持OCR和机器翻译，翻译和排版紧密结合。\n秒翻picpaw，功能和ImageTranslate类似，国人出品。\nImageTrans，自动识别文字区域和气泡，支持OCR和机器翻译，支持手动调整，使用文字识别、翻译和排版相分离的模式，可以导出PSD供后期修改。\ncbrTekStraktor，使用连通区域标记法生成候选文字区域然后用TensorFlow训练用于区分文字区域和非文字区域的图像分类器进行文字区域检测\n\n在线漫画平台\n\n腾讯动漫，国产漫画和很多正版日漫的发布平台。\n有妖气，有妖气是做得比较早的国内原创漫画发布平台。\nmangarock，原先是扫译版漫画的集中平台，现在转型做正版漫画。\ntapread，纵横文化的海外版，发布从中文翻译过来的网文和漫画。\nmangatoon，国产漫画出海阅读平台\nwebtoon，韩国Naver公司下属的漫画平台\n\n相关链接\n\ninsidescanlation，介绍什么是扫译\nConfessions of a Manga Translator\n\n参考文献\n[^uc]: Scott Mccloud. Understanding Comics: The Invisible Art. 1994", "filename": "2019-09-29-understanding-comics-translation.md"}, {"id": 326, "text": "\ndate: 2019-09-30 19:35:50+08:00\nlayout: post\ntitle: 配眼镜\ncategories: 随笔\ntags: \n\n我初一配的第一副眼镜，到现在也已经12年了，但是我还真没有好好研究过配眼镜这件事情。以前都是去眼镜店，跟着爸妈在店员指引下配的眼镜。如今在北京，我一个人去配，被店家坑了才发现配眼镜也是挺讲究的一件事情。\n去实体店配眼镜的流程一般是这样的：\n1. 挑选眼镜架。\n一般来说，眼镜架的形状要和脸的形状匹配，并且大小和脸的大小匹配。一般半框、全框眼镜适合大多数人和使用场合，圆形会让人显得柔和与可爱。眼镜太大会遮挡面部，一般眼镜上沿不应该遮盖眉毛，眼镜太小，则显得脸和眼镜的比例不协调。眼镜的尺寸也会影响镜片的厚度，一般度数高的话还是得配尺寸小的，对脸部的变形效果也可以不那么明显，但是尺寸小对视野有影响。这时还是推荐长方形的眼镜，和眼睛的形状匹配，小的圆框做出来视野容易受影响。\n其它还有眼镜边框的粗细、颜色和细节设计等等。不过规则都是可以打破的，比如哈利波特长大后脸变方了，但戴着圆框眼镜还是很好看。\n就我个人而言，我是椭圆脸，理论上各种形状的眼镜都合适。长相秀气，但一字粗眉又增加了一丝硬朗，可以选择和眉形匹配的半框眼镜，增加一分英气。\n大多数人不是明星，日常生活还是选择正常一点，看上去舒服的就行。去店里挑眼镜可以多试几款，最好找人陪着。另外最好戴隐形眼镜，不然看着模糊的自己会把自己美化500%。如果找不到合适的就不买，不要不好意思，可以去别的店或者网上再看看。\n镜架的常见参数：镜片宽度、镜片高度、鼻梁长度、镜架长度\n材质：钛、不锈钢、tr90\n2. 配镜片\n验光其实找眼镜店的专业验光师不见得比医院的差。\n一般流程是上验光机测合适的度数，测瞳距。另外会确定哪只眼睛是主视眼，一般主视眼的视力要好一点，那么主视眼的矫正视力也可以稍好一点。\n镜片的差价很大，有几十的也有几千的。一般有条件还是买品牌的，像依视路和蔡司有防伪标识，容易辨识是否是正品，高档镜片透光好，还有多种镀膜。\n镜片的折射率会影响镜片厚度，度数高的话，如果要保持镜片边缘薄，就得提高折射率。\n镜片材质现在一般是树脂，玻璃材质易碎，但是折射率高。\n眼镜行业的水深，我这里也只是讲一些目前我知道的注意事项。最近网上找了一家丹阳眼镜店，花了68元配了一副，感觉也挺清晰，而且第一次戴也不晕。\n附一张戴着板材眼镜的小哀：\n\n参考资料：\n\nHow to Buy Glasses That Fit: https://www.wikihow.com/Buy-Glasses-That-Fit\nHow to Choose the Right Eyeglass Frames for Your Face: https://www.wikihow.com/Choose-the-Right-Eyeglass-Frames-for-Your-Face\n【Miuo】粗框细框？方框圆框？眼镜到底怎么选？ \n这样的眉毛配眼镜，谁还敢说我是照“骗”？ \n", "filename": "2019-09-30-how-to-buy-glasses.md"}, {"id": 327, "text": "\ndate: 2019-10-02 19:56:50+08:00\nlayout: post\ntitle: 个人发展\ncategories: 笔记\ntags: \n\n个人发展(Personal Developement)是一个专有名词，通常包含以下活动：提高自我意识，实现个人才华和发挥潜力，实现愿望或加强身份等等。 ^wiki 个人发展并不单纯是自我帮助(self-help)，它还包括人与人之间互相帮助，比如瑜伽老师教导学生。\n之前玩Dweep时打开了该游戏制作公司的链接，发现跳转到了一个关于个人发展的博客。当时还是第一次知道这个概念。现代的人常常淹没在不断发展的社会中，看不清自己存在的意义，也不清楚该如何做好个人发展，因为社会的压力而感到焦虑，个人发展似乎是一个有趣的话题。\n我打开的这个博客是一位叫Steve Pavlina的人写的，他的这一个人发展的博客非常知名。17岁前，Steve Pavlina受家人影响，信仰天主教，但后来成为了一个无神论者。他被加州大学伯克利分校录取，但并没有好好学习，反而偷窃上瘾，差点因为大额盗窃罪判刑两年，好在当时法院以为他是初犯，只判了他两个月劳动改造。这次偷窃被捕是一次转折，因为他之前的价值观（context）被打破了，他意识到偷窃是不对的，他需要做出改变。此后，他用三个学期完成了加州州立大学计算机科学和数学的双学位课程，并创建了游戏公司，发布游戏。在2005年，他转行做个人发展的博客。\nSteve Pavlina有一个系列文章叫做《人生的意义》(The Meaning of Life)，涉及到个人发展的许多问题，主要分为六个部分：\n\n介绍。\n我们如何生活。\n如何寻找目标。\n将目标付诸行动。\n转型。\n意识进化。\n\n这系列文章总的来说还是比较啰嗦的，而且成文于2005年，不过有很多的观点还是很有启发意义。\n第一部分作者主要介绍自己的生平经历，阐述价值观和意义对人的影响。\n第二部分讲我们该怎么活，我们为什么活。他介绍了古希腊哲学家亚里士多德提出的Eudaimonia。这词一般翻译为happiness，幸福感。具体而言，主要指做符合道德的事情，经常内省。但还是很模糊，具体该怎么做呢？作者给出了8种值得拥有的品德：诚实、关爱、勇气、公正、贞洁、牺牲、高尚、谦虚。然后，就人生的最优解问题，他把人的发展比做爬山，最高的山峰即最优解。但人所在的区域太大了，没有办法一下子找到那座最高的山，只能先爬上一座眼前较高的山。但并不是一定要爬上每座山，因为人有想象力，可以想象之后发生的事情，想象最适合自己做的事情。对于作者来说，他认为最值得他做的事情就是帮助人类进化，发展自己，帮助别人发展。\n第三部分讲如何寻找目标。目标通常需要内省去发现。作者给出了一个20分钟罗列目标，直到有一种发现自己目标后想哭的冲动的方法以及一个根据自己的环境和价值观进行推理的方法。\n第四部分讲如何付诸行动。主要涉及时间管理、计划制定、情绪调节等各种方法。如果目标设定合理，应该大胆去做。有人会有这样的顾虑：觉得事业、爱情、健康不能兼顾。其实这几者都是互相关联的，只有健康了，才能好好工作，工作稳定了，可能能有更多时间陪对象。\n第五部分讲转型。人的目标不是一成不变的，周边环境和价值观变化后，你可能想做一件全新的事情。比如作者从游戏发布者转型关于个人发展的写作和演讲者。他给出了很多建议，比如彻底改变生活的环境、交往的人。\n第六部分讲意识的进化。人生物学上的进化已经趋于稳定，但人有改变自己意识的能力。过去的很多观点是错的，人们需要自主地去让自己的意识进化。\n人生的意义其实是一个哲学问题，我之前的文摘就介绍过存在主义哲学的观点。人的出现是一个偶然，人的意义是由自己来定义的。\n个人发展领域有很多新的概念和方法可以帮助我们不断成长。不过我们还是要专注于实际的事情，毕竟它的很多内容是通用的内省法，如果只花时间在想，而不去做的话是不能实现个人发展的。个人发展这一概念本身是引进自西方的，我们要结合自己的情况去吸收好的部分。市面上有很多相关的书，不少是基于商业化的目的，也要批判地去阅读。\n参考文献：", "filename": "2019-10-02-personal-development.md"}, {"id": 328, "text": "\ndate: 2019-10-03 19:58:50+08:00\nlayout: post\ntitle: 互文性\ncategories: 笔记\ntags: \n\n什么是互文性\n互文性(intertextuality)是由保加利亚裔法国语言学家，克里斯蒂娃(Julia Kristeva)，在巴赫金的对话理论基础上提出的。\n在1969年的《符号学》一书的《词、对话、小说》(Word, Dialogue, Novel)一文，她给出了如下定义：\n\nany text is constructed as a mosaic of quotations; any text is\nthe absorption and transformation of another.\n\n翻译：\n任何文本就像马赛克铺的墙一样，一片片“引用”就是组成它的马赛克；任何文本都是对另一文本的吸收和转化。\n具体来说，一个文本是和其它文本相关联的，读者要了解一段文本的含义，需要去了解相关的文本，受到所处的社会和时代环境的影响。文本不是不变的，它被读者吸收后，又能生成新的文本。\n互文性通常体现在以下几种形式：引喻(allusion)、引用(quotation)、仿造(calque)、抄袭(plagiarism)、翻译(translation)、模仿(pastiche and parody)。^wiki 当然也可能体现在其它细微的方面，比如某个语篇类别下的文本有独特的风格。\n宏观层面的例子：乔伊斯的《尤利西斯》的故事改编自《荷马史诗》。\n微观层面的例子：He was lying so obviously, you could almost see his nose growing.（说谎的人鼻子会变长，来自匹诺曹的故事）\n互文性中的文本可以不单单指文字，还能引申到其它形式，比如绘画、电影等等。很多电影中的经典桥段，台词，在后续的作品中得到引用，这也算是互文。更多例子可以看这个视频：What is intertextuality? Media concept explained!\nYoutube上一个叫Uplife的频道对什么是互文性有更详细的介绍：WHAT IS INTERTEXTUALITY? LITERARY THEORY COURSE\n互文性与翻译\n翻译由理解和表达两个过程组成[^zhu]，译者首先是原文的读者，需要自己构建原文的意义。之后，译者又变成了作者，用目标语将自己获得的意义表达出来。理解过程需要译者查阅相关文本，而生成过程，也需要译者阅读相关文本，目的是了解这类文本的文体特点、相关概念和表达。原文和译文本身也构成一对互文关系，但往往因为语言和文化因素存在不可译现象。\n功能语法学派\nHatim和Mason在《语篇与译者》(Discourse and the Translator)中对互文性的引用做了具体的分类：\n\n来源有说明的引用。\n陈词滥调。\n引喻。\n自引。\n固定表达。\n习语\n\n以及：\n\n类别相似，比如商务信函\n主题相似，比如讨论日本原子弹\n结构相似，比如复合词Reagonomics\n功能相似，比如对不起和抱歉\n\n同样的文字，可能是对不同文本的引用，译者要根据具体情况，从语篇目的的角度选择翻译方法。\n模仿(parody)是体现互文性的一个形式。比如我们要翻译这样一句话[^he]：\n\n饭后百步走，能活九十九\n\n这是关于健康的一则短语，我们可以想一下，英文中是否有类似的表达，而且语篇类型相同。\n我们可以找到这一表达：\n\nAn apple a day keeps doctors away\n\n我们模仿这一表达，可以得到以下译文：\n100 steps after dinner keeps doctors away\n互文性能给翻译提供一定的指导，不过如何找到相关联的文本需要长时间的积累才行。\n相关人物与名词\n\n索绪尔，现代语言学之父。他提出了“所指(signified)”和“能指(signifier)”的概念，“所指”即语言所指代的事物，“能指”指具体的文字或者声音。两者需要结合起来才能形成符号(sign)这一概念。他也开创了符号学。\n结构主义。我们要从整体来看待问题，并发现结构之间的相互关系。语言学的例子就是符号是由能指和所指组成的。\n后结构主义。后结构主义和结构主义唱反调，认为不存在固定的结构，意义是不确定的。\n巴赫金的对话理论。对话理论和互文性的概念基本相同，只是后者更专注与文本。以下是它的一个观点：说话者所表达的话语不可避免的和之前所用的话语和语篇在某种程度上发生联系。而且，这些话语也和后面的回应保持关联。[^wang]\n\n互文性与文献阅读\n在阅读互文性相关的文献时，我也深深体会到了互文性。\n我在看克里斯蒂娃的那篇《词、对话、小说》时看得一头雾水。因为这篇文章是对索绪尔、巴赫金等人的理论的一个阐释和延伸，使用了很多专业术语，什么狂欢文本、二值性、所指能指等等，而且使用的学术语言，非常难懂。为了读懂这一篇文章，我得去看很多其它的文章。文本的意义是由自身和相关的文本共同组成的。\n史忠义翻译的《符号学:符义分析探索集》基本是直译，并附带了很多译注，不是很容易看懂。董小英的《再登巴比伦塔 巴赫金与对话理论》，因为是用中文原创的，有很多中文的例子，相对好懂很多。\n但在我看来，关系复杂、内容艰深的学术文献文本给自己构建了一道门槛，外人很难一窥究竟，所幸我不是这方面的学术研究者，只需借鉴理论来指导实践即可。\n参考文献\n[^zhu]: 祝朝伟. 互文性与翻译研究[J]. 解放军外国语学院学报, 2004, 27(4).\n[^he]: 何飞. 互文性理论指导下的汉英翻译教学研究[J]. 安徽工业大学学报（社会科学版）, 2018(02):78-80.\n[^wang]: 王春宇, 娄德平. 巴赫金对话理论研究[J]. 北方文学：下, 2016(2):107-108.", "filename": "2019-10-03-intertextuality.md"}, {"id": 329, "text": "\ndate: 2019-10-05 16:00:50+08:00\nlayout: post\ntitle: 平行文本对齐\ncategories: 技术随笔\ntags: \n\n平行文本，指存在对应关系的原文及其译文。\n平行文本对齐，主要是将对齐的粒度细化。比如原来是篇章对齐，现在要进一步对齐到段落、句子甚至是单词。\n文本对齐可以基于各种信息，比如以一行原文、一行译文保存的Word文档，可以比较容易地基于这一特点做段落对齐。比如漫画，文字是存在于气泡中的，对齐文本相当于对齐气泡。比如字幕，句与句之间一般有时间间隔，可以根据时间轴信息做句子的划分。还有使用特殊字符、各种数字当做对齐时用的锚点。\n下面再讲一下句对齐。\nGale & Church 算法[^Gale]假设文本已经做好了段落对齐，原文句子和译文句子存在6种对应关系，增加、对应、删除、一对二、二对一。这就类似于编辑距离的计算，两个文本之间有增加、替换和删除三种关系。该算法主要根据句子长度来确定转换关系。具体的介绍可以看此文。\nhunalign 对齐工具使用了上述算法，并且结合了词典信息，它有一个桌面版的前端叫做LF Aligner。\nBleualign借助机器翻译的结果进行对齐。使用机器翻译的目的是用目标语表示原文的大概意思，然后和译文进行比较（通过修改版的bleu得分）。这类方法一般需要片段事先就拆分得较细，因为如何确定拆分句子的位置是比较难的，该方法主要是做句子对应关系的计算，而不会进一步拆分句子。\n其实有了机器翻译后，除了用bleu得分，还可以用很多其它方法判断原文和译文的对应关系，比如使用词向量计算语义相似度，有一个Python类库叫synonyms。\n比如有以下原文、机器翻译结果和译文（断好句的）。\n```\nsource:\nHe wanted to make a special breakfast for his nephews, and it wasn't easy.  \nmachine translation (youdao):\n他想为他的侄子们做一顿特别的早餐，这并不容易。\ntarget:\n他想为他的侄子们做一顿特别的早餐。\n这并不容易。\n```\n使用synonyms计算句子之间的相似度，可以发现附带后面一段译文的时候相似度更高，而且机器翻译结果比第一个片段的译文长度要长，说明该原文应该对应两个片段。\n```\n\n\n\nsynonyms.compare(\"他想为他的侄子们做一顿特别的早餐，这并不容易。\", \"他想为他的侄子们做一顿特别的早餐。\")\n0.811\nsynonyms.compare(\"他想为他的侄子们做一顿特别的早餐，这并不容易。\", \"他想为他的侄子们做一顿特别的早餐。这并不容易。\")\n0.937\n```\n\n\n\nVecalign则采用了多语言的句子嵌入来计算句子的相似度，不需要使用机器翻译或者双语词典就能完成自动对齐任务。\n句子对齐一般都要在对齐好的段落上进行，所以段落对齐是重要的一步。对于比较整齐的文本，段落对齐是很方便的，但有些文本存在插入或者漏译等问题，这些噪音给段落对齐带来了不少麻烦，有时候段落对齐才是句子对齐工作的重点。\n实际任务中使用得多的工具：\n\nSDL WinAlign（内置在Trados里的叫Alignment）\nWordfast Aligner（和Trados一样采用连线的方式对齐）\nStingray Document Aligner\nABBYY Aligner\nTMXMall\n雪人CAT\nOmegaT（内置了对齐工具，使用维特比算法和前向-后向算法）\nBasicCAT Aligner\n\nABBYY Aligner及后面几个软件都有自动对齐功能，它前面几个只提供了一般的断句和片段操作功能。综合下来我觉得ABBYY Aligner的最好，操作便利，能从有噪音的文本做自动对齐。\n我写的BasicCAT配套的对齐工具的原理很简单，首先进行段落对齐（手动），然后根据SRX断句规则进行断句，如果段落的句子数量不一致，就用空白片段填补。提供手动调整的功能。此外也集成了bleualign用于自动对齐。\n这有一篇句对齐的集合贴：Getting started with sentence alignment\n\n再讲下短语和词这样亚句级的对齐。这通常用于统计式机器翻译当中。它一般使用的无监督机器学习的方法，通过观察文本，得出词之间的概率关系。^wiki\n词和短语的对齐还可以用在双语语料库的检索时高亮显示原文对应的译文，以及CAT软件从翻译记忆中提取有用的片段翻译（Trados的upLift功能）。\n参考文献：\n[^Gale]: William Gale, Kenneth Church. A Program for Aligning Sentences in Bilingual Corpora ", "filename": "2019-10-05-parallel-text-alignment.md"}, {"id": 330, "text": "\ndate: 2019-10-11 19:19:50+08:00\nlayout: post\ntitle: 翻译与音韵\ncategories: 随笔\ntags: 翻译\n\n前一天在网上找到了SQ的英文版，看到一条用户的评论：\n\n@justanothermanganerd:\nholy shit I wish there was a good full picture of trickery detected with just that bubble and no speech\n\n对应的原文图片（链接）：\n\n译文图片（链接）：\n\n哇，果然很有感觉！\n然后我想“发现有坑”应该怎么翻译。\n坑要说也是一个网络流行语，比如挖坑、填坑等等。坑的引申意思就是让人深陷其中的东西，如果要翻译成英文，直译可以是pit，引申一下就是陷阱：trap。\n发现有坑，如果翻译为日语：罠を発見した，感觉很顺畅。\n那翻译为英文呢，Found a trap？首先句式得调整，改成Trap Found，但似乎没什么味道。\n把Found改成译文中的Detected：Trap Detected，感觉好了很多。但还是译文的Trickery Detected更好。\n仔细观察后，我觉得Trickery除了能突出诡计这一意思，还和detected的发音相匹配，两个都是3音节词。语言毕竟是要念出来的，如果能朗朗上口，给人的印象也更深。 \n不过我觉得主要是英语太难听。法语和日语，元音和辅音的比例接近于1:1，而英语的辅音比例要高得多。\n文学性质的翻译通常更讲究音韵，用哪个词不免要推敲一番。\n有一个网站叫rhymezone，可以用于查找和某个词押韵的词。除此之外，还能查看其释义、在维基百科和诗词中的示例、发音相近的词、同音异形词、同义词反义词、相关联的词、短语等等。不过我在搜ebony时没有显示ivory，可能还是有不完善的地方。《Ebony and Ivory》是一首歌的名字，在《老友记》中出现过。\n本科上翻译课时，老师给我们讲抑扬格、头韵尾韵中间韵，我是从来没怎么听懂，对这些不感兴趣。但其实当自己尝试去创作时，会发现这些知识还是有用的。", "filename": "2019-10-11-translation-rhyme-and-rhythm.md"}, {"id": 331, "text": "\ndate: 2019-10-11 22:46:50+08:00\nlayout: post\ntitle: 语言符号与意义\ncategories: 笔记\ntags: \n\n语言学之父索绪尔指出语言符号具有任意性，它的意义是和其它符号一起出现时才能表示出来，比如dog之所以是指狗，是因为cat、pig这些词不表示狗。\n但有些语言符号其实是和意义有关联的，这类词叫做表意词(ideophone)，它的发音或者形状和人感官感受到的内容相符合。比如zigzag，反映了弯弯曲曲的形状；bang则是拟声词，表示碰撞。\n语音表义现象(sound symbolism)专注和发音有关词，主要有以下几种分类：\n\n拟声词(Onomatopoeia)，比如汉语的喵。\n聚合(Clustering)。有相同前缀或者后缀的词，它们有相似的部分发音，而且意思也有关联，比如glare、gleam、glow都和光有关联。汉语的声旁应该也算这一类。\n形象(Iconism)。在p前面加上m，可以是动作变得有力，比如step->stomp、tap->tamp。添加字母r可以给单词添加动态效果，比如tamp->tramp。\n拟态词(Phenomimes)。日语中存在大量拟态词，比如くたくた(kutakuta)形容疲惫的样子。\n\n这类词是如何被创作出来的，在创作过程中怎么就遵循了这类规律，提出语音表义的Margaret Magnus觉得似乎是上帝的安排。\n参考文献\nhttps://en.wikipedia.org/wiki/Sound_symbolism", "filename": "2019-10-11-words-carrying-meaning.md"}, {"id": 332, "text": "\ndate: 2019-10-26 15:34:50+08:00\nlayout: post\ntitle: 习语、谚语、俚语\ncategories: 随笔\ntags: \n\n本文的标题对应三个英文单词：idiom、proverb、slang。\n谚语往往是人们智慧的总结，比如An apple a day keeps the doctor away。中学学写作要背模板，其中可能就有As a saying goes, + 谚语这样的表达。\n俚语是不正式的口语表达，它的流通范围不像正式语言那么广，只为少数人使用。比如海宁某高中的学生把土话中的词汇用普通话念出来，成了一个在那个年级里流行的词。网络是一个不正式的场合，其中使用的大量缩写词也可以算作俚语，比如dunno、LOL。\n习语是一组词组成的表达，它通常含有不能通过字面推断出来的隐含意思。比如kick the bucket，字面意思是踢翻水桶，而隐含意思是去世。习语为大多数人所使用，可以增加语言的生动性。很多习语的表达是固定的，比如It's raining cats and dogs. 也有可以根据具体情况改变的，比如spill the beans，可以把bean换成单数，或者改用被动等等。\n在学术上，关于习语的定义和分类一直有广泛的讨论。广义的习语一般也包括谚语、俚语。\n另外还有很多翻译相关的研究，这里提下Mona Baker提出的习语的翻译策略：\n\n使用具有相似意义，相似意象的表达，比如To kill two birds with one stone翻译为一箭双雕。\n使用具有相似意义，但意象不同的表达，比如One good turn deserves another翻译为礼尚往来。\n翻译出隐含的意思。\n忽略。\n\n一些习语词典：\n\nhttp://idioms.thefreedictionary.com\nOxford Dictionary of Idioms\n", "filename": "2019-10-26-idiom-proverb-and-slang.md"}, {"id": 333, "text": "\ndate: 2019-10-27 10:27:50+08:00\nlayout: post\ntitle: 漫画嵌字\ncategories: 技术随笔\ntags: \n\n漫画嵌字就是在漫画中添加对话、特效字和气泡等内容。如果是翻译过程中的嵌字，还需要去除或替换原来的文本。\n国内漫画多是在线漫画，主要使用Photoshop，而国外漫画多为需要印刷出版的漫画书，主要使用Adobe InDesign和Illustrator。\n前者可以看4W的嵌字教程和Pinkiesparkle的漫画翻译教程，后者可以看Adobe讲师Sean Glumace的letteringcomics网站上的视频教程。\nPhotoshop嵌字流程较为明了就不提了，主要讲下国外的这套。国外漫画使用InDesign来整合整个文档，而嵌字并不在InDesign中处理，是使用的Illustrator。\n嵌字师拿到漫画的脚本（含有场景描述、对白）、以及绘制好的漫画图像（tiff格式），然后就可以进行嵌字了。每页内容都对应一个Illustrator的AI文件或者成品eps文件。嵌字师建立一个和漫画文档尺寸相同的AI文件，导入图像文件然后在对应位置添加内容，之后去掉背景图像，只保留添加的气泡、对话和特效字，以供InDesign导入。\n下面讲下对话处理要注意的内容。\n对话文字\n\n字的大小和间距一般都是统一的，除非空间实在不够或者需要突出效果才进行调整。\n可以通过加粗来反映语气。\nPhotoshop中有点文本和段落文本的区别。一般漫画都用的点文本，便于调整样式。段落文本可以自动换行，是好处也是坏处。\n汉字和日文常需要竖排，需要根据分词做好断行。除此以外还有数字和双标点等特殊问题需要处理，常常需要采用再建一个图层这样的折中方法。\n\n2020/10/08补充：\n《漫画镶字手册》对使用PS做日中翻译的嵌字方法有详细的介绍。\n漫画翻译工具推荐：ImageTrans", "filename": "2019-10-27-comics-lettering.md"}, {"id": 334, "text": "\ndate: 2019-10-28 20:26:50+08:00\nlayout: post\ntitle: OpenCV使用笔记\ncategories: 技术随笔\ntags: 图像处理\n\nOpenCV是开源的计算机视觉库，封装了很多图像处理操作和算法，用C++编写，可以用Python进行调用。这里主要对各种操作的Python代码做一个整理。\n基本操作\n读写\n以下代码读取MyPic.png这一文件并另存为jpg格式。\npython\nimport cv2\nimage = cv2.imread('MyPic.png')\ncv2.imwrite('MyPic.jpg', image)\nimread有两个参数，前一个是文件名，后一个是读取模式，比如cv2.IMREAD_GRAYSCALE（该值为0）是以灰度模式进行读取。\nimread默认以24位BGR彩色模式进行读取，保存为一个numpy的三维数组。而如果是8位的灰度模式，则是一个二维数组。\nimage[2,0,1]表示Y坐标为2，X坐标为0的这一像素的蓝色通道的值。image[:,0]表示X坐标为0时的所有像素。image[:,:,1]表示所有蓝色通道的值。\n操作numpy.array还可以用它的item和itemset方法。\n指定array的范围以设置兴趣区域：my_roi = img[0:100, 0:100]\nimage具有shape属性，可以查看高（行数）、宽（列数）和通道数。\n```\n\n\n\nimage.shape\n(121, 383, 3)\n```\n\n\n\n新建\n新建图像就是新建一个numpy array: \nimage = numpy.zeros((400,300), numpy.uint8)\n也可以复制一个现有图像：\nimage = img.copy()\n将8位黑白图像转换为24位BGR彩色的，获得三维数组：\nimage = cv2.cvtColor(img,cv2.COLOR_GRAY2BGR)\n显示\npython\ncv2.imshow('my image', img) # 显示图像\ncv2.waitKey() # 等待用户操作，不然图像窗口会一闪而过\ncv2.destroyAllWindows() # 关闭所有窗口\n默认的窗口不能更改大小，可以在imshow语句前加上下面这句，注意标题要和imshow中的一致：\ncv2.namedWindow(\"my image\",cv2.WINDOW_NORMAL)\n也可以用matplotlib来显示，因为opencv的彩色图片使用的BRG模式，需要先转换为RGB：\npython\nimport matplotlib.pyplot as plt\nimg2 = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nplt.imshow(img2)\nplt.show()\n颜色转换\n彩色转换为灰度\nimg_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\nBGR转换为HSV\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nHSV是色调（H），饱和度（S），明度（V）的缩写，转换到HSV颜色空间可以较为容易地检测颜色。比如较浅的颜色，S值较低，V值较高。\n阈值\n根据阈值在灰白图像的基础上分类像素。\nret, thresh1 = cv2.threshold(img,127,255,cv2.THRESH_BINARY)\n它有四个参数：图像、阈值、最大值、阈值处理类型。\n阈值可以使用OSTU算法自动计算，需要修改阈值处理类型的值：\nret, thresh1 = cv2.threshold(img,127,255,cv2.THRESH_BINARY+cv2.THRESH_OTSU)\nret是返回的计算得到的阈值，这时参数中的阈值没有作用。上述语句可以用于图像的二值化、\n几何变换\n变换包括移动、拉伸、收缩、扭曲、旋转、翻转等操作，方法有仿射变换和透视变换等。\n翻转\n翻转主要用到cv2.flip方法，第二个参数表示翻转方向：\nh_flip = cv2.flip(image, 1)\n平移\n图像移动需要用到仿射变换，它需要一个2*3的矩阵做参数。以下矩阵中，tx表示横向移动的单位，ty表示纵向移动的单位。\n$$A = \\begin{bmatrix}\n1&0&t_{x}\\\n0&1&t_{y}\\\n\\end{bmatrix}$$\n以下代码将图片向右移动20像素，向下移动30像素。\npython\nnum_rows, num_cols = img.shape[:2]\ntranslation_matrix = np.float32([ [1,0,20], [0,1,30] ])\nimg_translation = cv2.warpAffine(img, translation_matrix, (num_cols,\nnum_rows))\n旋转\n旋转也是利用仿射变换，可以用cv2.getRotationMatrix2D生成矩阵，它有三个参数：旋转中心店、旋转角度和图像缩放。\npython\nrotation_matrix = cv2.getRotationMatrix2D((num_cols/2, num_rows/2), 30, 1)\nimg_rotation = cv2.warpAffine(img, rotation_matrix,(num_cols, num_rows))\n缩放\n主要是用cv2.resize方法。缩放图像需要进行插值处理。\npython\nimg_scaled = cv2.resize(img,None,fx=1.5, fy=1.2, interpolation =\ncv2.INTER_CUBIC)\ncv2.imshow('Scaling - Cubic Interpolation', img_scaled)\n绘图\n画线——设置起点和终点、颜色、线条宽度：\ncv2.line(image,(0,0),(100,100),(0,255,0),3)\n画矩形框——设置起点和终点、颜色、线条宽度：\ncv2.rectangle(image,(0,0),(100,100),(0,255,0),3)\n画圆——设置原点和半径、颜色、线条宽度：\ncv2.circle(image,(60,60),30,(0,255,0),-1)\n画椭圆——设置中心、X轴、Y轴长度、旋转角度、起始角度、结束角度、颜色、线条宽度：\ncv2.ellipse(image, (256, 256), (100, 50), 0, 0, 180, (255, 0, 0), -1)\n画多边形——设置多个顶点（按顺序）、颜色、线条宽度：\npts=np.array([[10,3],[60,3],[98,19],[48,19]],np.int32)\ncv2.polylines(image,[pts],True,(0,0,255),3)\n添加文字——设置文字、位置、字型、字体大小、文字颜色、线条宽度：\nfont=cv2.FONT_HERSHEY_SIMPLEX\ncv2.putText(image,'OpenCV',(80,90), font, 2,(255,255,255),3)\n图像混合\n相加\n要求两张图片的颜色模式、尺寸相同。如果相加的值超过255，取值就是255。比如有一张图片和该图片文字部分的掩膜图片，相加后黑色文字会变成掩膜的颜色。因为黑色的像素是0，所以相加后的值就是掩膜中的值。\nimage = cv2.imread('09.jpg')\nmask = cv2.imread('09.png')\nresult=cv2.add(image, mask)\n可以设置每张图片的权重：\nresult = cv2.addWeighted(image, 0.7, mask, 0.3, 0)\n按位操作\n可以通过位操作将某张图片覆盖在另一张图片之上。将背景图像中前景图像的部分变成黑色，然后将这一图像和去除背景的前景图像相加即可。\n具体操作见此文：opencv-python的位运算cv2.bitwise_and,cv2.bitwise_not使用及效果展示\n滤波\n比如要模糊边缘，可以设置一个核(kernel)，以核为单位遍历图片，对其中的像素做平均化处理，这叫卷积。\npython\nimg = cv2.imread('02.jpg')\nkernel = np.ones((3, 3), np.float32) / 10\ndst = cv2.filter2D(img, -1, kernel)\nOpenCV自带了几种模糊方法：cv2.blur(), cv2.GaussianBlur(), cv2.medianBlur(), cv2.bilateralFilter()。模糊可以用于消除噪声。\n边缘检测\n使用Canny边缘检测算法，需要设置最大和最低阈值。\n```python\nimport cv2\nimport numpy as np\nimg = cv2.imread('02.jpg', 0)\nedges = cv2.Canny(img, 30, 70)  # canny边缘检测\ncv2.imshow('canny', np.hstack((img, edges)))\ncv2.waitKey(0)\n```\n形态学操作\n形态学操作可以改变图像的形状，让原来的形状更突出或者不突出，也可以用于填充形状中的小空隙。形态学操作需要定义一个核，可以用cv2.getStructuringElement()方法生成。\n形态学操作主要是腐蚀和膨胀。腐蚀总归是一个区域腐蚀另一个区域，所以是相对来说的。腐蚀操作时，较深的区域会变大，较浅的区域会被侵蚀。膨胀则反过来。\n腐蚀\n```python\nimport cv2\nimport numpy as np\nimg = cv2.imread('02.jpg', 0)\nkernel = np.ones((5, 5), np.uint8)\nerosion = cv2.erode(img, kernel) \n```\n膨胀\npython\ndilation = cv2.dilate(erosion, kernel)\n开运算\n先腐蚀后膨胀\nopening = cv2.morphologyEx(img, cv2.MORPH_OPEN, kernel)\n闭运算\n先膨胀后腐蚀\nclosing = cv2.morphologyEx(img, cv2.MORPH_CLOSE, kernel)\n轮廓检测\n```python\nimport cv2\nimg = cv2.imread('02.jpg')\nimg_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\nret, thresh = cv2.threshold(img_gray, 200, 255, cv2.THRESH_BINARY)\ncontours, hierarchy = cv2.findContours(thresh, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\nfor cnt in contours:\n    cv2.drawContours(img, [cnt], 0, (0, 0, 255), 2)\ncv2.imshow('contours', img) \ncv2.waitKey()\n```\n可以用cv2.boundingRect获取轮廓的最小外接矩形。\npython\nfor c in cnts:\n    x,y,w,h = cv2.boundingRect(c)\n    cv2.rectangle(img, (x, y), (x + w, y + h), (36,255,12), 2)\n连通区域分析\n通过标记图像中连通的像素来获得连通区域，需要在二值图像上进行。\n使用cv2.connectedComponents获得labels，包含区域数量和包含标记的阵列。\nlabels=cv2.connectedComponents(thresh)\n使用connectedComponentsWithStats获得额外信息\n_, labels, stats, centroids  = cv2.connectedComponentsWithStats(thresh)\nstats包含坐标信息和面积，可以据此画出连通区域的矩形区域。\npython\nfor stat in stats:\n    x=stat[cv2.CC_STAT_LEFT]\n    y=stat[cv2.CC_STAT_TOP]\n    w=stat[cv2.CC_STAT_WIDTH]\n    h=stat[cv2.CC_STAT_HEIGHT]\n    area=stat[cv2.CC_STAT_AREA]\n    cv2.rectangle(img, (x, y), (x + w, y + h), (36,255,12), 2)\n注意反转图像颜色：\nthresh = cv2.threshold(img, 0, 255, cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU)[1]\n或者用位操作：\nthresh1=cv2.bitwise_not(thresh1)\n特征抽取\nSeam Carving\n待更新\n另见：图像处理学习——基于OpenCV实例\n参考资料：\n\nOpenCV 3.x with Python By Example\nOpenCV Computer Vision with Python\n【视觉与图像】OpenCV篇：Python+OpenCV实用教程 \n", "filename": "2019-10-28-opencv.md"}, {"id": 335, "text": "\ndate: 2019-10-30 20:41:50+08:00\nlayout: post\ntitle: 区域生长\ncategories: 技术随笔\ntags: 图像处理\n\n区域生长是一种图像分割方法。选择一个种子点，判断邻近区域的8个点或4个点是否和该像素点具有相似的属性，如果符合则标记，并将这一点作为种子点继续计算。\n用途比如可以将下面这张漫画截图中的气泡和背景相分割。\n原图：\n\n目标（外面一圈红色保存为png时是透明的）：\n\n以下代码修改自：Python实现区域生长算法（regionGrow）\n```python\nimport numpy as np\nimport cv2\nclass Point(object):\n    def init(self,x,y):\n        self.x = x\n        self.y = y\ndef getX(self):\n    return self.x\ndef getY(self):\n    return self.y\n\ndef getGrayDiff(img,currentPoint,tmpPoint):\n    return abs(int(img[currentPoint.x,currentPoint.y]) - int(img[tmpPoint.x,tmpPoint.y]))\ndef selectConnects(p):\n    if p != 0:\n        connects = [Point(-1, -1), Point(0, -1), Point(1, -1), Point(1, 0), Point(1, 1), \\\n                    Point(0, 1), Point(-1, 1), Point(-1, 0)]\n    else:\n        connects = [ Point(0, -1),  Point(1, 0),Point(0, 1), Point(-1, 0)]\n    return connects\ndef regionGrow(img,seeds,thresh,p = 1):\n    height, weight = img.shape\n    seedMark = np.zeros(img.shape,np.uint8)\n    seedList = []\n    for seed in seeds:\n        seedList.append(seed)\n    label = 255\n    connects = selectConnects(p)\n    while(len(seedList)>0):\n        currentPoint = seedList.pop(0)\n    seedMark[currentPoint.x,currentPoint.y] = label\n    for i in range(8):\n        tmpX = currentPoint.x + connects[i].x\n        tmpY = currentPoint.y + connects[i].y\n        if tmpX < 0 or tmpY < 0 or tmpX >= height or tmpY >= weight:\n            continue\n        grayDiff = getGrayDiff(img,currentPoint,Point(tmpX,tmpY))\n        if grayDiff < thresh and seedMark[tmpX,tmpY] == 0:\n            seedMark[tmpX,tmpY] = label\n            seedList.append(Point(tmpX,tmpY))\nreturn seedMark\n\ndef removeInnerParts(binaryImg):\n    Y=binaryImg.shape[0]\n    X=binaryImg.shape[1]\n    for y in range(0,Y):\n        start=0\n        end=0\n        for x in range(0,X):\n            if binaryImg[y][x]==255:\n                start=x\n                break\n        for x in range(X-1,-1,-1):\n            if binaryImg[y][x]==255:\n                end=x\n                break\n        if start<end:\n            for x in range(start,end+1):\n                binaryImg[y][x]=255\n    return binaryImg\nif name==\"main\":\n    img = cv2.imread('ttt.png',0)\n    Y=img.shape[0]\n    X=img.shape[1]\n    seeds = [Point(int(X/2),int(Y/2))]\n    binaryImg = regionGrow(img,seeds,10)\n    binaryImg = removeInnerParts(binaryImg)\n    image = cv2.cvtColor(binaryImg,cv2.COLOR_GRAY2BGRA)\n    for x in range(0,X):\n        for y in range(0,Y):\n            if image[y][x][0]==0:\n                image[y][x][3]=0\ncv2.imwrite('out.png', image)\ncv2.imshow('region grow',image)\ncv2.waitKey(0)\n\n```", "filename": "2019-10-30-region-growing.md"}, {"id": 336, "text": "\ndate: 2019-10-31 16:58:50+08:00\nlayout: post\ntitle: Azure定制计算机视觉模型\ncategories: 技术随笔\ntags: 图像处理\n\n微软Azure提供定制计算机视觉模型的功能，叫做Custom Vision（文档）。\n目前主要提供两个功能，图像分类和目标检测。\n在Azure里建立一个计算机视觉的资源就可以使用了，有免费的价格档位。\n下面讲下定制目标检测模型的步骤：\n\n访问https://www.customvision.ai/，建立项目\n添加标签，上传图片并标注\n训练，可以设定训练时间，一般快速训练只要几分钟即可完成\n测试并优化\n\n微软提供在线版标注工具，并且可以使用训练好的模型辅助标注。不过我的电脑屏幕太小了，标注界面看起来比较费劲，还是labelme之类的工具方便。\n之前从百度easydl导出了yolo格式的标注数据，我基于微软提供的python sdk写了一个工具，可以批量上传图片和标注区域到azure上：https://github.com/xulihang/azure-custom-vision-toolkit\n训练完成后可以查看预测结果，图中做的是对漫画气泡的检测：\n\n模型优化好后可以发布，并通过提供的预测API进行调用。", "filename": "2019-10-31-azure-custom-vision.md"}, {"id": 337, "text": "\ndate: 2019-11-01 20:51:50+08:00\nlayout: post\ntitle: K-Means聚类及在漫画中的应用\ncategories: 技术随笔\ntags: 图像处理\n\n首先讲一下机器学习中分类和聚类的区别。分类是有监督学习，比如使用做好标记的数据训练贝叶斯分类器判断邮件是不是垃圾邮件。而聚类是无监督学习，从一堆没有标记的数据中发现分类。\nK-Means聚类需要用户指定K个分类，取随机K个种子点（质心），跟种子点近的数据可以归为一类。之后重新确定质心，看和原来的质心差别是不是不大，不大则大致可以完成聚类。\n下面是一个应用示例，用于漫画分镜和文字的检测。\n漫画由一张张分镜构成，分镜中包含漫画的主要内容。我们可以用连通区域标记方法对这些区域进行标记。\n\n这些区域可以按高度进行划分，依次为整张图片、分镜、分镜中的内容。\n我们使用Python-opencv获取连通区域的矩形框，然后用Python的sklearn机器学习库来使用KMeans聚类：\n```python\nimport cv2\nimport numpy as np\nimg = cv2.imread('3.jpg')\ngray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\nthresh = cv2.threshold(gray, 0, 255, cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU)[1]\n_, labels, stats, centroids = cv2.connectedComponentsWithStats(thresh)\nX=[]\nfor stat in stats:\n    h=stat[cv2.CC_STAT_HEIGHT]\n    one=[] #单个数据点，可以添加多个数据\n    one.append(h)\n    X.append(one)\nkmeans_model = KMeans(n_clusters=3) #设置分类为3\ny_pred= kmeans_model.fit_predict(X)\nprint(y_pred) #输出分类结果\nindex=0\n不同分类设置不同颜色\ncolor1=(255,0,0)\ncolor2=(0,255,0)\ncolor3=(0,0,255)\ncls1=[]\ncls2=[]\ncls3=[]\nfor cls in y_pred:\n    if cls==0:\n        color=color1\n        cls1.append(stats[index])\n    elif cls==1:\n        color=color2\n        cls2.append(stats[index])\n    else:\n        color=color3\n        cls3.append(stats[index])\nstat=stats[index]\nx=stat[cv2.CC_STAT_LEFT]\ny=stat[cv2.CC_STAT_TOP]\nw=stat[cv2.CC_STAT_WIDTH]\nh=stat[cv2.CC_STAT_HEIGHT]\ncv2.rectangle(img, (x, y), (x + w, y + h), color, 2)\nindex=index+1\n\ncv2.imwrite('labeled.png', img)\ncv2.namedWindow(\"labeled.png\",cv2.WINDOW_NORMAL)  \ncv2.imshow('labeled.png', img)\ncv2.waitKey()\n```\n最后输出结果如下：\n", "filename": "2019-11-01-kmeans-clustering.md"}, {"id": 338, "text": "\ndate: 2019-11-03 22:44:50+08:00\nlayout: post\ntitle: B4J类库封装之JavaObject\ncategories: 技术随笔\ntags: B4X\n\n所谓类库封装就是将一个类库的功能进行封装，从而改变它原来的功能或是供另一种语言调用。本文主要讲的是后者。这一操作也有叫做绑定(bindings)，封装出来的类库叫做wrapper。常见的例子有Java的JNI和Python的ctypes。\nB4J的wrapper是用于在B4J中调用jar类库，因为B4J生成的语言是Java，所以还是比较容易处理的。\n封装类库有两种方法，一种是直接使用Java编写，一种是使用JavaObject。JavaObject直接使用B4J编写，相对简单。官网教程：Accesing third party Jar with #Additionaljar and JavaObject - Picasso\nJavaObject主要提供以下几种方法：\n\nGetField，获得Field（变量）。\nSetField，设置Field（变量）。\nInitializeStatic，初始化静态类\nInitializeNewInstance，新建一个类的实例\nRunMethod，运行一个方法\nCreateEvent，创建事件\n\n后缀有JO的方法，返回的是JavaObject类，用于需要继续将返回对象当做JavaObject使用的情况。\n下面以OpenCV的封装为例。\nopencv是C++编写的计算机图形库，其提供的java类库就是一种绑定。有两个流行的java类库，一个是javacv，一个是官方的类库。后者是基于c++文件自动生成的^opencv-java，和c++的API 接口非常接近。这里我使用官方的类库。\n我们的目标是实现以下Java代码^csdn的接口在B4J中的绑定：\n```java\nimport org.opencv.core.Mat;\nimport org.opencv.imgproc.Imgproc;\nimport org.opencv.imgcodecs.Imgcodecs;\npublic class TestOpencvDemo { \n    @Test  \n    public void TestMatRead() {\n        Mat img = Imgcodecs.imread(\"/Users/wuxi/Pictures/medianBlur.png\");\n        Imgproc.medianBlur(img, img, 7);\n        Imgcodecs.imwrite(\"/Users/wuxi/Pictures/medianBlur1.png\",img);         img.release();   \n    }\n}\n```\n封装好后，以上代码对应的B4J代码：\nvb\nDim cv2 As opencv\ncv2.Initialize\nDim mat As cvMat\nmat=cv2.imread(File.Combine(File.DirApp,\"test.jpg\"))\ncv2.medianBlur(mat,mat,7)\ncv2.imwrite(File.Combine(File.DirApp,\"out.jpg\"),mat)\n步骤\n1. 分析\n查看OpenCV的文档，可以知道它有很多的模块，比如core是核心功能模块，imgproc是图像处理模块，imgcodecs是图像读写模块。\n因为B4J程序只会调用一小部分功能，我希望将会用到的功能整合进一个class。\nMat类是用于存储图像数据的矩阵，因为用到得较为频繁，可以单独建立一个class。\n2. 编写\nB4J中新建两个class模块，命名为opencv和cvMat，具体说明看代码和注释。\n参数的命名和类型可以参照OpenCV的Java API文档。\ncvMat代码如下：\n```vb\nSub Class_Globals\n    Private matJO As JavaObject\nEnd Sub\n'Initializes the object. You can add parameters to this method if needed.\nPublic Sub Initialize(params() As Object)\n    'Java 支持重载，一个方法可以有多种参数组合。\n    'Mat的构建方法有多种，比如以下几个。\n    'Mat()\n    'Mat​(int[] sizes, int type)\n    'Mat​(int rows, int cols, int type)\n    '但B4J不支持，可以直接设置参数为一个array。\n    matJO.InitializeNewInstance(\"org.opencv.core.Mat\",params)\nEnd Sub\n'在供其他opencv方法调用时，需要提供Mat的JavaObject。\nPublic Sub getJO As JavaObject\n    Return matJO\nEnd Sub\nPublic Sub setJO(mat As JavaObject)\n    matJO=mat\nEnd Sub\n```\nopencv代码如下：\n```vb\nSub Class_Globals\n    Private Imgproc As JavaObject\n    Private Imgcodecs As JavaObject\nEnd Sub\n'Initializes the object. You can add parameters to this method if needed.\nPublic Sub Initialize\n    '初始化两个类，用于调用静态方法\n    Imgproc.InitializeStatic(\"org.opencv.imgproc.Imgproc\") \n    Imgcodecs.InitializeStatic(\"org.opencv.imgcodecs.Imgcodecs\")\nEnd Sub\nPublic Sub imread(path As String) As cvMat\n    '使用RunMethod调用Java的方法\n    Return matJO2mat(Imgcodecs.RunMethodJO(\"imread\",Array(path)))\nEnd Sub\nPublic Sub imwrite(path As String,img As cvMat)\n    Imgcodecs.RunMethod(\"imwrite\",Array(path,img.JO))\nEnd Sub\nPublic Sub medianBlur(src As cvMat,dst As cvMat, ksize As Int)\n    Imgproc.RunMethodJO(\"medianBlur\",Array(src.JO,dst.JO,ksize))\nEnd Sub\n'将得到的mat javaobject封装为B4J中的cvMat类\nSub matJO2mat(jo As JavaObject) As cvMat\n    Dim mat As cvMat\n    mat.Initialize(Null)\n    mat.JO=jo\n    Return mat\nEnd Sub\n```\n可以发现，wrapper是用于调用原有方法的很薄的一层内容。\n3. 调用\nvb\nDim cv2 As opencv\ncv2.Initialize\nDim mat As cvMat\nmat=cv2.imread(File.Combine(File.DirApp,\"test.jpg\"))\ncv2.medianBlur(mat,mat,7)\ncv2.imwrite(File.Combine(File.DirApp,\"out.jpg\"),mat)\n以上代码会将图片做模糊处理并另存。\n查看medianBlur的Java API文档：\npublic static void medianBlur​(Mat src, Mat dst, int ksize)\nBlurs an image using the median filter. The function smoothes an image using the median filter with the ksize×ksize aperture.\nParameters:\nsrc - input 1-, 3-, or 4-channel image; when ksize is 3 or 5, the image depth should be CV_8U, CV_16U, or CV_32F, for larger aperture sizes, it can only be CV_8U.\ndst - destination array of the same size and type as src.\nksize - aperture linear size; it must be odd and greater than 1, for example: 3, 5, 7 ... SEE: bilateralFilter, blur, boxFilter, GaussianBlur\n可以知道这里的参数调用使用的是传参调用，传进去的目标mat会被修改，所以不用返回处理结果。\n如果不想原来的mat被修改，就再建一个cvMat：\nvb\nDim cv2 As opencv\ncv2.Initialize\nDim mat As cvMat\nmat=cv2.imread(File.Combine(File.DirApp,\"test.jpg\"))\nDim blur As cvMat\nblur.initialize(Null)\ncv2.medianBlur(mat,blur,7)\ncv2.imwrite(File.Combine(File.DirApp,\"origin.jpg\"),mat)\ncv2.imwrite(File.Combine(File.DirApp,\"out.jpg\"),blur)\n4. 打包\n将项目编译为一个library类库或者打包为最新的b4xlib，放到库文件夹供使用。\n还有很多JavaObject的方法没有使用，这里就不细讲了。\n完整代码见此：https://github.com/xulihang/OpenCV-B4J\nOpenCV的安装\n这里再附带OpenCV的安装方法：\n\n下载OpenCV的压缩包（地址），提取其中的java文件夹的内容，将jar放到B4J的类库目录，将dll或者so、dylib文件放到程序的目录。\n使用以下代码加载OpenCV的动态库：\n\nSub load\n    Dim System As JavaObject\n    System.InitializeStatic(\"java.lang.System\")\n    System.RunMethod(\"load\",Array(File.Combine(File.DirApp,\"opencv_java411.dll\")))\nEnd Sub\n参考文献：", "filename": "2019-11-03-wrapping-for-B4J-with-javaobject.md"}, {"id": 339, "text": "\ndate: 2019-11-06 22:52:50+08:00\nlayout: post\ntitle: 垂直投影与水平投影\ncategories: 技术随笔\ntags: 图像处理\n\n本文讲的是垂直投影和水平投影在图像处理中的应用。\n垂直投影指将所有像素沿垂直方向投射到一个点（进行平均值、求和等操作），水平投影则是沿水平方向。\n比如下图显示了一张做了二值化处理的图片的水平投影和垂直投影的直方图（这里清除了两边为零的数据）。\n\n我们可以用OpenCV的reduce来实现垂直投影和水平投影。\nC++和Java中的reduce操作需要5个参数，依次为原图矩阵、输出矩阵、维数、操作类型rtype、数据类型dtype。\nvb\nDim h,v as mat\nh.initialize\nv.initialize\ncv2.reduce(thresh,h,1,0,cv2.cvType(\"CV_32S\")) '水平投影\ncv2.reduce(thresh,v,0,0,cv2.cvType(\"CV_32S\")) '垂直投影\n维数的取值：\n\n1，投射到一列\n0，投射到一行\n-1，根据输出矩阵的大小自动选择\n\n操作类型：\n\nCV_REDUCE_SUM，求和\nCV_REDUCE_AVG，求均值\nCV_REDUCE_MAX，求最大值\nCV_REDUCE_MIN，求最小值\n\n数据类型需要根据最终得到的值进行设置，像求和的话就不能取太小，否则会报错。\n接下来讲一个具体的例子，用于检测两个文字区域间是不是被黑线分隔。\n比如下面两张图，分别是左右和上下方向存在分隔：\n\n\n我们先对图像做二值化处理，并且反转颜色。之后做轮廓检测，对每个轮廓做reduce求和操作。如果轮廓是起到分隔作用的，那它是连接两端的连续的一段，坐标上每个点的值都要大于0。\n下面是Python实现代码：\n```python\nimport cv2\nimport numpy as np\ndef infer(direction):\n    index=0\n    if direction==1: #horizontal\n        end=height\n    else: # vertical\n        end=width\nfor cnt in contours:\n    mask = np.zeros_like(img)\n    cv2.drawContours(mask, [cnt], -1, (255,255,255), 1)\n    sum = cv2.reduce(mask, direction, cv2.REDUCE_SUM, dtype=cv2.CV_32S)\n    blocked=True\n    for j in range(end):\n        if direction==1:\n            value=sum[j][0]\n        else:\n            value=sum[0,j]\n        print(\"j:\"+str(j))\n        print(\"value:\"+str(value))\n        if value==0:\n            blocked=False\n            break\n\n    if blocked==True:\n        cv2.imwrite(str(index)+'MyPic.jpg', mask)\n        cv2.imwrite('y.jpg', sum)\n        print(sum)\n        print(\"blocked\")\n        return True\n    index=index+1\nreturn False\n\nimg = cv2.imread('balloon.png', cv2.IMREAD_GRAYSCALE)\nheight, width = img.shape[:2]\nret, thresh = cv2.threshold(img,127,255,cv2.THRESH_BINARY_INV+cv2.THRESH_OTSU)\ncontours, hierarchy = cv2.findContours(thresh, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\ninfer(0)\n```\n第一张图检测到的分割轮廓：\n\nreduce后的结果：\n[[510]\n [510]\n [510]\n [510]\n [510]\n [510]\n [510]\n [510]\n [510]\n [255]\n [510]\n [510]\n [510]\n [510]\n [255]\n [510]\n [510]\n [510]\n [510]\n [510]\n [510]\n [510]]\n第二张图检测到的分割轮廓：\n\nreduce后的结果：\n[[10710  3315  3060   765   510  1020   510   510   765   510   510   510\n    510   510   510   510   510   510   510   510   510   510   510   510\n    510   510   510   510   510   510   510   510   510   510   510   510\n    510   510   510   510   510   510   510   510   510   510   510   510\n    510   510   510   510   510   510   510   510   510   510   510   510\n    510   510   510   510   510   510   510   510   510   510   510   510\n    510   510   510   510   510   510   510   510   510   510   510   510\n    510   510   510   510   510   510   510   510   510   510   510   510\n    510   510   510   510   510   510   510  1020  8670]]\n参考资料：\n\nopencv3 reduce函数及其使用\nHow to construct horizontal projection of binary image in OpenCV\n", "filename": "2019-11-06-horizontal-and-vertical-projection.md"}, {"id": 340, "text": "\ndate: 2019-11-11 09:34:50+08:00\nlayout: post\ntitle: SQLite全文检索\ncategories: 技术随笔\ntags: \n\n现在主流的数据库都提供了全文检索功能，比如PostgreSQL、Sql Server等。\nSQLite也有全文检索模块FTS，最新版本是FTS5，不过本文主要讨论FTS3/4。FTS3于2007年加入SQLite，FTS4是2010年加入的对FTS3的加强。\n全文检索因为使用了索引，可以大大提高数据检索速度。下面是官方文档中给出的示例：\nCREATE VIRTUAL TABLE enrondata1 USING fts3(content TEXT);     /* FTS3 table */\nCREATE TABLE enrondata2(content TEXT);                        /* Ordinary table */\nSELECT count(*) FROM enrondata1 WHERE content MATCH 'linux';  /* 0.03 seconds */\nSELECT count(*) FROM enrondata2 WHERE content LIKE '%linux%'; /* 22.5 seconds */\n操作\n建立索引表\n建立一个使用fts4进行索引的虚拟表，包含key、source和target三列内容，key列不进行索引。\nCREATE VIRTUAL TABLE IF NOT EXISTS idx USING fts4(key, source, target, notindexed=key)\n从文本中抽取词语需要使用分词器(Tokenizer)，默认使用simple分词方法，其它还有porter、unicode61和icu，需要在建表的时候指定：\nCREATE VIRTUAL TABLE porter USING fts3(tokenize=porter);\nsimple方法会将文本全部小写，并利用标点和空格进行分词。比如\"Right now, they're very frustrated.\"的分词结果是\"right now they re very frustrated\"。\n而porter分词是一种去除词尾获得词干的方法，上面的句子使用porter分词的结果是\"right now thei veri frustrat\"，这样可以使用英语词的不同屈折变化进行检索，比如frustrated和frustration使用porter处理后的结果都是frustrat，都可以检索到该条内容。\n对于中文、日语和藏语这样词汇间没有空格的语言，可以使用icu分词，但一般的SQLite编译版本都没有包含这一分词器。\n增删与更新\nINSERT INTO idx VALUES('I am Tony!', 'I am Tony', '我 是 托 尼')) '插入\nDELETE FROM idx '删除整张表的内容\nDROP TABLE data '删除整张表\nUPDATE idx SET key = 'Download SQLite' WHERE rowid = 54 '根据rowid进行更新\n查询\n使用FTS的表可以使用MATCH进行全文检索，并且有rowid这一主键。下面是对各种查询语句的速度的一个比较：\n```\n-- The examples in this block assume the following FTS table:\nCREATE VIRTUAL TABLE mail USING fts3(subject, body);\nSELECT * FROM mail WHERE rowid = 15;                -- Fast. Rowid lookup.\nSELECT * FROM mail WHERE body MATCH 'sqlite';       -- Fast. Full-text query.\nSELECT * FROM mail WHERE mail MATCH 'search';       -- Fast. Full-text query.\nSELECT * FROM mail WHERE rowid BETWEEN 15 AND 20;   -- Fast. Rowid lookup.\nSELECT * FROM mail WHERE subject = 'database';      -- Slow. Linear scan.\nSELECT * FROM mail WHERE subject MATCH 'database';  -- Fast. Full-text query.\n```\nWHERE和MATCH之间可以是表的名字，也可以是列的名字。如果要获得列号，可以使用rowid这一隐藏的列的名字。\nSELECT key, rowid FROM idx WHERE source MATCH 'text'\n如果要多字段检索，可以改成这样：\nSELECT key, rowid FROM idx WHERE idx MATCH 'source:text AND target:text'\n可以用通配符修饰查询的文本，比如lin*匹配以lin开头的词，^lin*表示第一个词的开头是lin的内容。\n可以使用双引号进行短语查询，用NEAR/间隔字数限制两个词之间相隔的词数：\nSELECT * FROM docs WHERE docs MATCH 'database NEAR/2 \"ACID compliant\"';\n可以使用三个操作符：AND、OR、NOT\nSELECT docid FROM docs WHERE docs MATCH '(\"sqlite database\" OR \"sqlite library\") AND linux';\n有三个辅助函数：Snippet, Offsets and Matchinfo。\noffsets函数可以显示匹配到的词在第几列，在文本中的偏移量。snippet可以高亮匹配到的词。matchinfo提供详细的匹配信息，比如有多少词被匹配。具体用法见文档。\n组合示例\n根据匹配度排序，取前1000个条目：\nSELECT key, rowid, quote(matchinfo(idx)) as rank FROM idx WHERE source MATCH 'text' ORDER BY rank DESC LIMIT 1000 OFFSET 0\n和普通模式的比较\n普通的表可以设置主键，相同主键的内容不能添加两次。而FTS模式可以重复添加内容。\n建立索引过程耗费内存，而且数据会占用更多空间。\n关于中文索引\n在没有icu分词的情况下对中文索引的一个折中办法就是事先对中文进行分词，然后导入数据库。可以建两列内容，一列是中文分词结果，一列是中文原文，只对中文分词结果进行索引。另外，检索文本也需要进行分词。\n参考文献：\n\nSQLite FTS3 and FTS4 Extensions\nsqlite get ROWID\nSQLite FTS3/FTS4与一些使用心得 \nsqlite3 FTS全文索引按照相关性排序\nFull Text Search (FTS) as it Applies to SQLite\nSQLite全文检索(1) \n", "filename": "2019-11-11-sqlite-full-text-search.md"}, {"id": 341, "text": "\ndate: 2019-11-12 10:59:50+08:00\nlayout: post\ntitle: BasicCAT开发笔记（十五）：全文检索\ncategories: 技术随笔\ntags: CAT\n\n在BasicCAT中，全文检索主要有两个用途：1. 在模糊匹配过程中先筛选出包含部分关键词的句子，减少需要计算编辑距离的句子数量，提高匹配响应速度。2. 加强翻译记忆管理器的检索功能。\n此前写的相关文章：\n\nSQLite全文检索\n翻译记忆服务器探究 \n\n这里主要基于B4X的KeyValueStore改造出一个专门的TMDB类，在数据库中增加启用SQLite FTS全文检索的表，并提供翻译记忆检索的相关操作。\n下面是具体添加的内容：\n\n\n初始化时添加一个FTS的Virtual Table，包含三列内容，原文，分词后的原文和译文\nvb\nPrivate Sub CreateTable\n    sql1.ExecNonQuery(\"CREATE TABLE IF NOT EXISTS main(key TEXT PRIMARY KEY, value NONE)\")\n    sql1.ExecNonQuery(\"CREATE VIRTUAL TABLE IF NOT EXISTS idx USING fts4(key, source, target, notindexed=key)\")\nEnd Sub\n\n\n打开旧的数据库时会使用原有数据建立新的索引表\n```vb\nSub Initialize \n   '...\nIf checkIsFTSEnabled=False Then\n    CreateTable\n    createIdx\nElse\n    CreateTable\nEnd If\n\nEnd Sub\nSub checkIsFTSEnabled As Boolean\n    Try\n        sql1.ExecQuery(\"SELECT * FROM idx\")\n        Return True\n    Catch\n        Log(LastException)\n        Return False\n    End Try\nEnd Sub\n```\n\n\n预先分词\n因为sqlite-jdbc的Sqlite不支持中文分词，只能事先进行分词。这里把汉语分为每个单字，并不包含多个字组成的词。\n根据语言代码分词：\nvb\nSub getStringForIndex(source As String,lang As String) As String\n    Dim sb As StringBuilder\n    sb.Initialize\n    Dim words As List=LanguageUtils.TokenizedList(source,lang)\n    For index =0 To words.Size-1\n        sb.Append(words.Get(index)).Append(\" \")\n    Next\n    Return sb.ToString.Trim\nEnd Sub\n添加条目：\nvb\nPublic Sub Put(source As String, targetMap As Map)\n    Dim ser As B4XSerializator\n    Dim bytes() As Byte=ser.ConvertObjectToBytes(targetMap)\n    sql1.ExecNonQuery2(\"INSERT OR REPLACE INTO main VALUES(?, ?)\", Array (source,bytes))\n    sql1.ExecNonQuery2(\"INSERT OR REPLACE INTO idx VALUES(?, ?, ?)\", Array (source,getStringForIndex(source,sourceLang),getStringForIndex(targetMap.Get(\"text\"),targetLang)))\nEnd Sub\n\n\n检索\n模糊匹配时，因为是以原文句子为检索内容，寻找包含原文词语多的句子，需要将原来的句子拆分为词，并用OR操作符连接。\n而检索翻译记忆时，则是根据用户输入的词汇进行检索，需要AND操作符连接。\n生成检索表达式：\nvb\nSub getQuery(words As List,operator As String) As String\n    Dim sb As StringBuilder\n    sb.Initialize\n    For index =0 To words.Size-1\n        Dim word As String=words.Get(index)\n        If word.Trim<>\"\" Then\n            sb.Append(word)\n            If index<>words.Size-1 Then\n                sb.Append(\" \"&operator&\" \") ' AND OR NOT\n            End If\n        End If\n    Next\n    Return sb.ToString\nEnd Sub\n获得检索结果，检索翻译记忆时matchAll是True，同时检索原文和译文，模糊匹配时matchAll是False，只检索原文：\n```vb\nPublic Sub GetMatchedMapAsync(text As String,isSource As Boolean,matchAll As Boolean) As ResumableSub\n    Dim sqlStr As String\n    Dim matchTarget As String\n    Dim operator As String\n    Dim lang As String\n    Dim words As List\n    words.Initialize\n    If isSource Then\n        lang=sourceLang\n        matchTarget=\"source\"\n    Else\n        lang=targetLang\n        matchTarget=\"target\"\n    End If\n    If matchAll Then\n        matchTarget=\"idx\"\n        operator=\"AND\"\n        If text.StartsWith($\"\"\"$) And text.EndsWith($\"\"\"$) Then\n            words.Add(text)\n        Else\n            words=getWordsForAll(text)\n        End If\n    Else\n        operator=\"OR\"\n        words=LanguageUtils.TokenizedList(text,lang)\n    End If\n    text=getQuery(words,operator)\nsqlStr=\"SELECT key, rowid, quote(matchinfo(idx)) as rank FROM idx WHERE \"&matchTarget&\" MATCH '\"&text&\"' ORDER BY rank DESC LIMIT 1000 OFFSET 0\"\nLog(sqlStr)\nDim SenderFilter As Object = sql1.ExecQueryAsync(\"SQL\", sqlStr, Null)\nWait For (SenderFilter) SQL_QueryComplete (Success As Boolean, rs As ResultSet)\nDim resultMap As Map\nresultMap.Initialize\nDim result As Object = Null\nIf Success Then\n    Do While rs.NextRow\n        result=GetDefault(rs.GetString2(0),Null)\n        If result<>Null Then\n            resultMap.Put(rs.GetString2(0),result)\n        Else\n            Log(\"not exist\")\n            DeleteIdxRow(rs.GetInt2(1))\n        End If\n    Loop\n    rs.Close\nElse\n    Log(LastException)\nEnd If\nReturn resultMap\n\nEnd Sub\n```\n\n\n多个词语匹配结果的高亮展示\n用<--->包裹匹配的词语，用正则得到匹配词和其它部分相分割的列表，可用于在Searchview中高亮显示。\nvb\nSub splitByStrs(strs() As String,text As String) As List\n    For Each str As String In strs\n        Dim matcher As Matcher\n        matcher=Regex.Matcher(str.ToLowerCase,text.ToLowerCase)\n        Dim offset As Int=0\n        Do While matcher.Find\n            Dim startIndex,endIndex As Int\n            startIndex=matcher.GetStart(0)+offset\n            endIndex=matcher.GetEnd(0)+offset\n            text=text.SubString2(0,endIndex)&\"<--->\"&text.SubString2(endIndex,text.Length)\n            text=text.SubString2(0,startIndex)&\"<--->\"&text.SubString2(startIndex,text.Length)\n            offset=offset+\"<--->\".Length*2\n        Loop\n    Next\n    Dim result As List\n    result.Initialize\n    For Each str As String In Regex.Split(\"<--->\",text)\n        result.Add(str)\n    Next\n    Return result\nEnd Sub\n\n\n中英混合检索\n有的时候检索内容同时包含中文和英文，这时需要对中文和英文进行区别处理。\n比如对于这么一条检索内容：\n\"computer 电脑\"，需要拆分为computer、电、脑这三个检索词。\n我们先用空格进行拆分，得到computer和电脑，之后根据汉字是多字节字符的特点，去除汉字结果。\nvb\nSub removeMultiBytesWords(words As List)\n    Dim newList As List\n    newList.Initialize\n    For Each word As String In words\n        If word.Length>1 Then\n            If getBytesLength(word.CharAt(0))>1 Then\n                Continue\n            End If\n        End If\n        newList.Add(word)\n    Next\n    words.Clear\n    words.AddAll(newList)\nEnd Sub\n然后再把检索内容拆分为单字，并去掉单个英文字母的结果。\nvb\nSub removeCharacters(source As List)\n    Dim newList As List\n    newList.Initialize\n    For Each text As String In source\n        If text.Length=1 Then\n            If Regex.IsMatch(\"[a-z]\",text.ToLowerCase)=True Then\n                Continue\n            End If\n        End If\n        newList.Add(text)\n    Next\n    source.Clear\n    source.AddAll(newList)\nEnd Sub\n\n\n更新：\n基于SQLite的全文检索，开发了一个在线翻译记忆检索器：地址", "filename": "2019-11-12-basiccat-developing-notes-15-full-text-search.md"}, {"id": 342, "text": "\ndate: 2019-11-24 16:55:50+08:00\nlayout: post\ntitle: 外语专业就业探究\ncategories: 随笔\ntags: 就业\n\n本文主要针对外语专业的就业问题做一个探究。\n找工作其实是很个人的一个事情，我们用“冰山模型”来分析，可以知道工作和处于冰山表面的知识、技能以及更深层的价值观、性格特质和动机有关。前者主要决定我们能做什么，后者主要决定我们更适合做什么。外语专业具有较高的语言能力、跨文化沟通能力和思考能力，可以从事与人和文字相关的工作，比如翻译、教师、编辑、营销、人力资源、公共关系等等。根据深层次的因素，我们选择合适的岗位。如果一个人正直不阿，那他不会喜欢需要夸大宣传的工作。如果他喜欢有成就感，那工作一般需要能看到明显的成果。\n工作也要顺应时代的发展，比如跨境电商在近几年是一个风口，很多学校也成立了商务英语专业。不过国内很多大学还是走的偏理论的培养方案，除了基本的听说读写，主要就是翻译、文学和语言学课程，这对于提高学生的综合素质有用，学习的过程也比较快乐，但面对就业问题时，在由学生转换到社会人的过程中，学生往往会比较迷茫。\n这时一种好的方法是看看毕业的学长学姐选择了什么样的工作。可以看就业中心的报告、找学院的学工处老师，或者看相关求职网站。这里介绍下怎么用领英了解本专业的就业。\n访问学校的主页，点alumni查看校友，然后检索专业的关键词。\n\n可以查看校友在哪里工作，从事什么行业，访问校友的页面可以知道他的职业发展历程。外语专业学生刚毕业主要还是从事前文列出的几个职业，但随后往往能从事不同的岗位。这就涉及一个职业的发展问题。这时我们可以看一些社会招聘广告来了解更资深的岗位有什么要求。\n这里再讲下主要几种专业硕士研究生的就业。决定读专业硕士一般需要对就业有较清晰的认识。\n翻译硕士可以去甲方或者乙方做应用型翻译，甲方一般要更高的综合能力，能够同时完成口译笔译工作，而乙方工作会接触各种各样的客户和内容，因为译员较多，分工相对明确。不过也有很多专门化的公司，只做游戏、漫画之类的本地化。也有翻译硕士选择做项目经理或者本地化工程师，更多的考验管理能力和技术工具的运用能力，平时会做一些审校工作。而做文学翻译、图书翻译一般会在出版公司做编辑。很多翻硕学生具有其它专业背景，可以从事医学翻译、机械翻译等专业领域翻译。另外还有自由职业，但除了要求翻译能力，还对客户管理、营销、记账等能力有要求。\n学科教学、对外汉语硕士则主要从事教学工作，方向较为明确。\n北大的计算机辅助翻译专业目前主要以技术写作和本地化人才为培养目标。技术文档写作有面向普通用户和面向开发者这两种。前者更加注重设计能力，需要掌握视频、网页等多媒体展示技术，也叫资料开发工程师。后者更加注重技术能力，对技术的深入了解。\n硕士阶段发展的专业技能和文献综述等研究能力可以迁移到其它岗位，如果发展了其它突出的知识技能，比如编程，转行也是可能的。\n具体的求职方法这里就不具体讲了，更多见相关链接。\n相关链接：\n\n北大CAT的他山之石\n吐血经验 大学生如何找到一份满意的工作？\n你的路很廣：語言產業 53 個相關職務一次看好看滿\nLinkedIn for Students\nWhat Can I Do with My Foreign Language Major?\n", "filename": "2019-11-24-exploration-of-careers-for-foreign-language-majors.md"}, {"id": 343, "text": "\ndate: 2019-11-28 12:59:50+08:00\nlayout: post\ntitle: 甲方乙方\ncategories: 随笔\ntags: 就业\n\n甲方是服务的需求方，乙方是服务的提供方。一家公司可能既是甲方，也是乙方，比如翻译公司给客户提供翻译服务，是乙方，但它也需要找自由译员或者供应商提供具体一个语种的翻译，这时它是甲方。\n乙方公司的负责人可能过去是甲方公司某个部门的负责人，他精通某项业务后，将该业务独立出来，为多家公司提供服务。\n比如以下几种服务：\n\n翻译\n公关、营销、广告\n软件开发\n设计\n财务、会计\n\n有需要行业知识、管理知识的公司，比如各种咨询公司（MBB）、专家联络公司（GLG、Alphasights）。\n传统的软件企业靠一次性出售软件获利，随着SaaS的流行，卖软件变成了卖服务，也可以视为乙方。", "filename": "2019-11-28-party-a-and-party-b.md"}, {"id": 344, "text": "\ndate: 2019-11-30 11:22:50+08:00\nlayout: post\ntitle: 故事\ncategories: 随笔\ntags: \n\n读《乔布斯传》时，一段关于乔布斯2005年斯坦福演讲的内容让我印象深刻：\n\nAlex Haley once said that the best way to begin a speech is “Let me tell you a story.” Nobody is eager for a lecture, but everybody loves a story. And that was the approach Jobs chose.\n\n人们都喜欢听故事，但并不见得喜欢听讲座。大二时孙志祥老师讲翻译概论，因为理论比较深奥，很多同学听不懂。孙老师也知道这点，于是在上课时经常给大家讲故事，比如他读书时的故事，他华为同事的故事。\n人从小就听各种故事，从寓言故事、历史故事到各种爱情故事、成功故事。电视剧、小说吸引人的也都是故事。\n我希望从别人的故事中获得一些关于自己的人生道路的启发。不过，做到对名人故事如数家珍并不一定自己也能做到，自己的道路还是要自己去走。", "filename": "2019-11-30-stories.md"}, {"id": 345, "text": "\ndate: 2019-12-08 16:46:50+08:00\nlayout: post\ntitle: 历史长河里\ncategories: 随笔\ntags: \n\n在《影响世界未来最重要的三件事》一文的开头，作者列举了为了搞懂一件事情需要弄懂的一连串事情，比如二战后的恐共思想-越南战争-30年利率下降-抵押市场-金融危机这样一条链路。\n微博上看到了Fox Movietone News录制的上世纪20年代末上海一所小学的教学视频，发现那个时候的小学教育形式和我小时候接受的基本上是差不多的，那目前的教育经历了怎样的演变，又有哪些问题？\n写论文需要做文献综述，我把过往所有相关的文献都收集起来查阅，文献与文献互相关联，似乎总是不能穷尽。\n现代汉语的词汇，很多的翻译都来自日语。比如英文的evolution，严复翻译为天演，日语翻译为进化，后者为现代汉语采用。英文的marketing，日语按照发音用片假名表示为マーケティング，而台湾翻译为行销，大陆翻译为营销。实际上marketing的汉语翻译并没有很好地把原有词汇的意义表现出来，但因为前人已经有了翻译，后人大多直接沿用。\n阅读《人类简史》，可以知道，人类一开始的生活是很简单的，在森林里过着比较自由的采集生活，而后来有了农业，人类定居下来，也开始有了文明的传承。\n我们站在历史的潮头，是历史的创造者，同时也是历史的传承者。不过历史的细节是如此之多，我们或许只需知道重要的历史节点以及对我们当下做的事情具有重要影响的部分历史。", "filename": "2019-12-08-as-part-of-the-history.md"}, {"id": 346, "text": "\ndate: 2019-12-17 20:03:50+08:00\nlayout: post\ntitle: 翻译记忆在线检索器\ncategories: 技术随笔\ntags: CAT\n\n上个月做了一个翻译记忆在线检索器，使用B4J编写的后端和前端，该工具使用逻辑如下：\n\n用户上传tmx翻译记忆文件\n服务器将翻译记忆存入SQLite数据库，并启用全文检索，提供用户一个具有唯一ID的访问链接\n用户在网页上对翻译记忆进行检索，支持选择检索全部语言还是单个语言，支持短语查询。匹配的关键词会高亮。\n\n我基于人人影视《老友记》全十季中英字幕做了翻译记忆并导入该检索器，可以访问这里使用：http://www.xulihang.me/search.html?tmid=NMLDVSyPF0cvQJr6NfuSg\n这一服务类似于Linguee和Glosbe，不同的是我们可以导入自己的翻译记忆。\n比如很多人熟悉的《老友记》，主要是美国人之间的口语对话，可以用于检索地道表达，可信度比linguee这样从中国的双语网站爬取的语料会更高一点。\n《老友记》的一大主题是恋爱，含有很多关于亲密关系的表达，这对于翻译中文言情小说、漫画有帮助。下面是一些例子：\n暗恋\nnote: Friends.S06E21.chs&eng.sohu.ass 0:00:21.08,0:00:25.74\nen: Wait. \"On the 1 9th a secret crush announces itself. \"\nzh: 十九日 暗恋你的人会向你表白\n配不上\n1\nnote: Friends.S04E22.chs&eng.sohu.ass 0:05:26.05,0:05:27.83\nen: I'm too good for the Hut. I'm too good for the Hut.\nzh: 必胜客配不上我 配不上我\n2\nnote: Friends.S01E08.chs&eng.sohu.ass 0:11:04.84,0:11:08.71\nen: Well I think Brian's a little out of your league.\nzh: 我觉得你有点配不上布莱恩\n3\nnote: Friends.S01E08.chs&eng.sohu.ass 0:11:15.45,0:11:17.61\nen: You don't think I could get a Brian?\nzh: 你觉得我配不上布莱恩\n下面再说一下Trados和memoQ的语料检索功能。\nTrados有Concordance Search和Fulltext Search两种语料检索方式，前者类似于模糊匹配，会显示检索词和结果的匹配程度，后者是全文检索，可以分别设置原文和译文的检索词。更多可以参考Know How: Concordance Search in SDL Trados Studio。\nmemoQ的Concordance Search功能差不多，支持KWIC关键词在中间的形式呈现，并可以猜测检索短语对应的翻译。\n\n还有通用一点的语料检索工具：AntConc、AntPConc、PowerGREP，但没有针对翻译记忆这样的多语言对语料进行设计。", "filename": "2019-12-17-online-translation-memory-search.md"}, {"id": 347, "text": "\ndate: 2019-12-17 15:41:50+08:00\nlayout: post\ntitle: 技术适应与工作流\ncategories: 随笔\ntags: \n\n最近接到一份上海话听写任务，某乙方公司的客户关系部门找甲方的部门负责人做访谈，最后给CEO提供一份报告。访谈会被录音，录音文件派给翻译公司进行文字转写。\n这两个上海公司的员工，可能也是因为上海话比较亲切，选择使用上海话进行交流。现在上海话转录技术并不成熟，需要人工转录，但目前普通话的文字转写技术已经达到了很高的准确率，有讯飞听见、搜狗听写等服务，这样其实只要录音双方的声音比较清晰，是标准的普通话，基本上是不需要花费太多人力去做听写的。如果我是做客户关系的员工，为了使用语音转录技术，我肯定会选择和客户用普通话沟通，而不是上海话，并且在录制时确保双方的声音清晰。也就是说，我会根据现有的技术去改变我的工作流程，这样一来可以减少很多不必要的劳动。我把这叫做技术适应。技术适应的例子还有机器翻译译前编辑，翻译记忆等等。\n我在听写时还发现一个现象是外企员工经常在中文中掺杂英文，机器转写这时同样不好使。而上海话中掺杂普通话就更常见了。这些给语音转录提出了挺大的挑战。在全自动转录尚不完善的时候，可能还是需要设计一个计算机辅助听写软件，可以将录音分为一个个语音片段，让用户按片段进行转写，并提供自动转录、调节音量、降噪等一系列功能。这是根据现有技术和实际需求编写相应的技术工具来进行辅助。\n很多时候，我们在工作前都要先考虑需要运用什么技术，需要制作什么样的辅助工具。比如《暗黑2》是一款复杂的游戏，暴雪在开发时没有先开发好相关的工具链，结果使得开发周期延长。\n程序员的工作就是让流程自动化，虽然程序员常常花了几个小时来自动化一个当前只需花几分钟时间的手动操作，但如果这一任务有长期需求，编写工具来优化工作流还是有必要的。\n这里我想吐槽的一点是，很多Linux的软件都没有图形化的配置界面，折腾各种软件的配置要花上很多时间，而且不同软件、不同版本之间的标准可能还不统一。软件的标准化和易用性也是挺重要的事情，不然反而会使得流程变得复杂。", "filename": "2019-12-17-workflow-and-adaptation-for-technology.md"}, {"id": 348, "text": "\ndate: 2019-12-30 21:11:50+08:00\nlayout: post\ntitle: 图像文字颜色检测\ncategories: 技术随笔\ntags: 图像处理\n\n这里讨论背景元素简单的纯色背景的情况。\n过程如下：\n\n取图像开头的像素得到背景颜色\n对图像做边缘检测\n使用形态学操作平滑边缘\n对边缘做轮廓检测，并做孔洞填充\n遍历原图的所有像素，如果该像素坐标位于字体轮廓内，且与背景颜色并不相似，则对其颜色进行计数，像素出现次数最多的颜色就是字体的颜色。\n\n问题：\n因为文字和背景过度区域有很多中间颜色的像素，所以需要进行去除，主要是判断和背景颜色是否相似。那如何判断和背景颜色相似？很多背景颜色和文字颜色都是蓝色，只是一个深一点，一个浅一点，这样将RGB转换到HSB比较色调是不行的。我还是采用了比较RGB值的差的方法。\n2020-03-03更新\n之前的方法在背景颜色检测方面太过简单。这里提出一个基于KMeans聚类获得图像主色(Dominant Color)的方法。\n背景颜色通常在图像中占据较大的比例，是图像主要包含的颜色。\n微软和谷歌的计算机视觉服务能够检测图片的配色，详见两者的文档：检测图像中的配色方案 - 微软、检测图片属性 - 谷歌。\n那具体怎么实现呢？检测主要颜色的方法有很多，常用的是KMeans，还有一种方法是颜色量化(Color Quantization)。KMeans是一种无监督的聚类方法，可以将数据聚成指定数量的类别，下面是操作步骤：\n我们首先将图片缩放，然后获取每个像素的RGB值。生成如下的csv表：\nr,g,b\n255,255,255\n202,202,202\n39,39,39\n0,0,0\n1,1,1\n0,0,0\n之后进行聚类，每个类别的质心就是该类别对应的颜色。Java的话可以使用weka包含的SimpleKMeans类进行操作。\n背景颜色出现的次数应该最多，所以包含像素最多的那个类别是背景颜色所在的类别。该类别质心对应的颜色就是背景颜色。\n相关链接：\n\n颜色空间转换\nRGBtoHSB, java docs\n老铁！怎么识别一张图片上文字的颜色\nDominant Colors for Lazy-Loading Images\nFinding dominant colors in an image\nUsing python and k-means to find the dominant colors in images\n", "filename": "2019-12-30-image-text-color-detection.md"}, {"id": 349, "text": "\ndate: 2019-12-30 20:39:50+08:00\nlayout: post\ntitle: 基于规则的漫画文字检测方法\ncategories: 技术随笔\ntags: 图像处理\n\n传统的文字检测方法有MSER、基于字体特征、笔画宽度等方法，随着深度学习的发展，有人改善了目标检测方法用于文字检测，比如CTPN。\n深度学习的方式需要数据集进行训练。传统的方法可以算作无监督的方法，但需要完善的规则。\n一般的叙事漫画是一种结构化的图像，有分镜、气泡等成分，文字是最内部的元素，通常位于气泡内。基于这一特点，可以得到一个漫画文字的检测方法.\n步骤\n\n二值化图像\n提取连通区域\n过滤过大的连通区域，去除包含较小的区域的外围区域\n取一个连通区域为起点，一定单位为增长量向右生长，如果生长的区域有重合的连通区域，进行合并，并根据融合的连通区域改变增长量。如果找不到可以合并的区域就向左生长，直到没有可以合并的区域。以剩下的连通区域为起点，不断重复这一过程。\n横向合并后再做纵向合并，得到段落。\n\n约束条件\n\n被气泡轮廓分隔的两个区域不能进行合并\n横向生长时，重叠的高度比例为70%，这样倾斜文本的问题也可以一定程度上解决。\n二值化可以用OTSU自动计算阈值，但有的漫画气泡轮廓粗细差别大，需要手动指定，不然会生成很多噪音。\n\n问题\n\n日语和中文的汉字很多并不是一个整体，比如有左右结构、上下结构\n标点和汉字的小部件类似\n非纯色背景的文本\n在深色背景下的浅色文字无法检测\n\n相关链接\n\n场景文字检测—CTPN原理与实现\n文字检测算法整理\n【AI实战】手把手教你深度学习文字识别（文字检测篇：基于MSER, CTPN, SegLink, EAST等方法）\ncbrTekStraktor - 漫画文字提取工具\n一种无监督的中文漫画对白自动定位方法\n大话文本识别经典模型：CRNN\n", "filename": "2019-12-30-text-localization-for-comics.md"}, {"id": 350, "text": "\ndate: 2020-01-14 16:16:50+08:00\nlayout: post\ntitle: 编译OpenCV Java动态库\ncategories: 技术随笔\ntags: 图像处理\n\nOpenCV的Java接口绑定主要有两种，一种是bytedeco提供的JavaCV，另一种是opencv官方的jar包。前者提供各个平台上编译好的库，嵌在jar里，而后者需要手动加载动态库，并且只提供Windows的dll文件，并不提供linux和macos的动态库。\n所以要在Linux和macOS等平台上用官方的Java API来调用OpenCV，需要自行编译支持java的opencv库。手动编译稍微复杂点，主要考验环境的配置。\n主要流程：\n\n官网下载OpenCV的源码包\n安装cmake、ant、jdk，这三个可以直接去官网下载，并不一定要用包管理器\n\n在源码文件夹里新建build文件夹，运行cmake：\nshell\ncmake -D CMAKE_BUILD_TYPE=RELEASE \\\n-D CMAKE_INSTALL_PREFIX=~/opencv \\\n-DBUILD_SHARED_LIBS=OFF \\\nBUILD_EXAMPLES=OFF \\\nBUILD_TESTS=OFF \\\nBUILD_PERF_TESTS=OFF ..\n注意查看结果中Java的结果是不是YES，不是的话可能是JAVA和ANT的环境变量没有设置好，可以使用类似下方的命令添加：\nshell\nexport JAVA_HOME=\"/usr/lib/jvm/bellsoft-java8-full-amd64/\"\nexport ANT_HOME=\"/usr/share/ant\"\n\n\n在build文件夹下执行make -j8，８个线程并行进行编译\n\n\n这里提供编译好的opencv4.1.1的java库的网盘下载：https://pan.baidu.com/s/1D9EZMKqwgqQjdEjwYFkZQQ\n包含以下文件：\nopencv-411.jar\nopencv_java411.dll，jar和dll是官网提供的\nlibopencv_java412.so，我在ubuntu下没有编译成功，这是csdn上下载的，测试可以用4.1.1的jar\nlibopencv_java411.dylib，编译环境macOS Sierra\n我一开始在macOS Sierra上是用推荐的homebrew方法编译的，可能系统版本比较老的缘故，大多数依赖包都要重新编译，什么python、gcc、ffmpeg，而且这些依赖其实是没有必要的。于是我转用macports，装了cmake。gcc其实不用装，可以直接用xcode提供的clang编译。\n参考链接：\n\nopencv for Java在MacOS 10.10安装\n在 Mac 上编译 OpenCV4 + Idea 使用Java调用\nInstalling OpenCV for Java\nlibopencv_java412.tar.gz\n", "filename": "2020-01-14-build-opencv-java-library.md"}, {"id": 351, "text": "\ndate: 2020-01-26 21:19:50+08:00\nlayout: post\ntitle: CNN图像分类\ncategories: 技术随笔\ntags: 图像处理\n\n卷积神经网络（Convolutional Neural Networks, CNN）是深度学习的常见算法，具有强大的特征提取功能，不需要做特征工程就可以运用到图像分类这类操作中。\n本文主要讲一下用CNN做图像分类的一些较为简单的实践。\n这类操作主要是基于一个预先训练好的模型进行微调和重训练。\n\n\n在线服务\n微软的Azure Custom Vision提供用户自行训练图像分类模型的功能，只需上传图片并标上分类即可，能够提供多种格式的模型供下载。百度、谷歌等公司也有类似的服务。\n\n\nTensorflow提供的图像分类工具\nTensorflow提供了一个能基于预训练模型进行重训练的脚本：https://github.com/tensorflow/hub/blob/master/examples/image_retraining/retrain.py，只需提供图像即可完成训练，不用写代码，预训练模型可以使用inception v3，或者准确率相对较低但运行更快的mobilenet。\n目前这个脚本已经有了针对tensorflow 2.0的更新版本：make_image_classifier.py\n通过以下命令即可完成在几分钟内完成训练：\n$ make_image_classifier \\\n  --image_dir my_image dir \\\n  --tfhub_module https://tfhub.dev/google/tf2-preview/mobilenet_v2/feature_vector/4 \\\n  --image_size 224 \\\n  --saved_model_dir my_dir/new_model \\\n  --labels_output_file class_labels.txt \\\n  --tflite_output_file new_mobile_model.tflite\n下面讲下参数。\n--image_dir，存放训练图像的目录，结构如下：\nmy image_dir\n|-- cat\n|   |-- a_feline_photo.jpg\n|   |-- another_cat_pic.jpg\n|   `-- ...\n|-- dog\n|   |-- PuppyInBasket.JPG\n|   |-- walking_the_dog.jpeg\n|   `-- ...\n`-- rabbit\n    |-- IMG87654321.JPG\n    |-- my_fluffy_rabbit.JPEG\n    `-- ...\n--tfhub_module，指定使用的预训练模型，可以在tfhub上搜索到可以用的各种模型。\n--image_size，图像会被缩放以满足模型的输入要求，这个参数应该和预训练模型的吻合。\n--saved_model_dir，将模型保存为Tensorflow Savedmodel格式，可以用于Tensorflow Serving服务器。\n--tflite_output_file，将模型保存为Tensorflow Lite格式。\n我用它训练了一个文字图像识别器，主要有两个类别：文字图像、非文字图像。因为有的文字图像并不是规则的正方形，还需要进行适当的裁剪。\n下面是调用生成的Tensorflow Lite模型进行识别的Python脚本。\n```python\n\"\"\"label_image for tflite.\"\"\"\nfrom future import absolute_import\nfrom future import division\nfrom future import print_function\nimport cv2\nimport argparse\nimport numpy as np\nimport tensorflow as tf # TF2\ndef imgData(filename,new_size):\n    image = cv2.imread(filename)\n    h=image.shape[0]\n    w=image.shape[1]\n    centerX=int(w/2)\n    centerY=int(h/2)\n    if h/w>1.5:\n        image=image[int(centerY-w/2):int(centerY+w/2)]\n    if w/h>1.5:\n        image=image[:,int(centerX-h/2):int(centerX+h/2)]\n    data=cv2.resize(image, new_size, interpolation = cv2.INTER_LINEAR)\n    input_data=data[np.newaxis,:,:,:]\n    return input_data\ndef load_labels(filename):\n    with open(filename, 'r') as f:\n        return [line.strip() for line in f.readlines()]\nif name == 'main':\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\n            '-i',\n            '--image',\n            default='/tmp/grace_hopper.bmp',\n            help='image to be classified')\n    parser.add_argument(\n            '-m',\n            '--model_file',\n            default='/tmp/mobilenet_v1_1.0_224_quant.tflite',\n            help='.tflite model to be executed')\n    parser.add_argument(\n            '-l',\n            '--label_file',\n            default='/tmp/labels.txt',\n            help='name of file containing labels')\n    parser.add_argument(\n            '--input_mean',\n            default=127.5, type=float,\n            help='input_mean')\n    parser.add_argument(\n            '--input_std',\n            default=127.5, type=float,\n            help='input standard deviation')\n    args = parser.parse_args()\ninterpreter = tf.lite.Interpreter(model_path=args.model_file)\ninterpreter.allocate_tensors()\n\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\n\n# check the type of the input tensor\nfloating_model = input_details[0]['dtype'] == np.float32\n\n# NxHxWxC, H:1, W:2\nheight = input_details[0]['shape'][1]\nwidth = input_details[0]['shape'][2]\nnew_size = (height, width)\ninput_data=imgData(args.image,new_size)\nif floating_model:\n    input_data = (np.float32(input_data) - args.input_mean) / args.input_std\n\ninterpreter.set_tensor(input_details[0]['index'], input_data)\n\ninterpreter.invoke()\n\noutput_data = interpreter.get_tensor(output_details[0]['index'])\nresults = np.squeeze(output_data)\n\ntop_k = results.argsort()[-5:][::-1]\nlabels = load_labels(args.label_file)\nfor i in top_k:\n    if floating_model:\n        print('{:08.6f}: {}'.format(float(results[i]), labels[i]))\n    else:\n        print('{:08.6f}: {}'.format(float(results[i] / 255.0), labels[i]))\n\n```\n用法：\npython label_image.py \\\n  --input_mean 0 --input_std 255 \\\n  --model_file new_mobile_model.tflite --label_file class_labels.txt \\\n  --image my_image_dir/cat/a_feline_photo.jpg\n\n\n其它\n我写的基于bottle的服务器脚本：https://github.com/xulihang/text-image-classifier\n训练好的文字图像识别模型：https://pan.baidu.com/s/1AqWvsFIPnr4KVGuAAsnsYA", "filename": "2020-01-26-CNN-image-classification.md"}, {"id": 352, "text": "\ndate: 2020-02-14 13:25:50+08:00\nlayout: post\ntitle: 纯前端全文检索\ncategories: 技术随笔\ntags: CAT\n\n使用ImageTrans翻译好漫画后需要进行后期的管理和展示。\n我预想将其传到Github Pages上，再做几个页面用于浏览和检索。因为不涉及后端，是个纯前端项目，如果做全文检索的话得先在发布的时候创造索引文件供调用。\n下面是大致的一个目录结构：\n根目录\n│  come_to_me_love.itp #ImageTrans项目文件\n│  come_to_me_love.itp-images.json #生成的图片列表，排好序的\n│  come_to_me_love.itp-doc.json #导出的文本部分\n│  come_to_me_love.itp-geometry.json #导出的坐标部分\n│  index.json #生成的索引\n│  viewer.html #浏览页面\n│  search.html #索引页面\n│\n└─come_to_me_love #图片目录\n    │  2.jpg\n    │  3.jpg\n    │  4.jpg\n    │  5.jpg\n    │  6.jpg\n    │  7.jpg\n    │  8.jpg\n    │\n    └─out #译文图片目录\n            2.jpg\n            3.jpg\n            4.jpg\n            5.jpg\n            6.jpg\n            7.jpg\n            8.jpg\n我选择lunr.js提供全文检索的支持。lunr.js默认支持多个语种的索引，但并不支持中文，一位网友根据其多语言接口制作了中文支持的库：Add Chinese support，这个库使用nodejieba对中文进行分词。\n下面是操作过程：\n\n\n首先处理ImageTrans的项目文件，把每个文本框作为一个文档导出为json。有三个属性，名称、原文和译文。名称为用冒号分隔的项目名称、图片名称和文本框序号。\n[\n    {\n        \"name\": \"come_to_me_love.itp:8.jpg:13\",\n        \"source\": \"IT WAS THE FIRST TIME, BABy...I...I WANTED TO BUy THINGS FOR yOU! I WANTED TO BE ABLE TO OFFER YOU AS MUCH AS BART!\",\n        \"target\": \"这是第一次，宝贝，我想给你买东西！我想给你像巴特给的一样多的东西！\"\n    }\n]\n\n\n使用node调用lunr.js生成索引。\n生成索引部分的js：\n```js\nvar lunr = require(\"./lunr.js\");\nvar fs = require('fs');\nrequire(\"./lunr.stemmer.support.js\")(lunr)\nrequire('./lunr.multi.js')(lunr)\nrequire(\"./lunr.zh.js\")(lunr)\nvar data = fs.readFileSync(\"./doc.json\", \"utf-8\");\nvar documents = JSON.parse(data);\nvar idx = lunr(function () {\n  this.use(lunr.zh)\n  this.ref('name')\n  this.field('source')\n  this.field('target')\ndocuments.forEach(function (doc) {\n    this.add(doc)\n  }, this)\n})\nfs.writeFile('./index.json', JSON.stringify(idx))\n```\n\n\n检索测试\njs\nvar lunr = require('./lunr.js'),\n    fs = require('fs');\nvar idx = lunr.Index.load(JSON.parse(fs.readFileSync(\"./index.json\")));\nidx.search(\"moon\")\n结果：\n[   \n    {\n        \"ref\":\"come_to_me_love.itp:6.jpg:38\",\n        \"score\":3.99,\n        \"matchData\":{\"metadata\":{\"moon\":{\"source\":{}}}}},\n    {\n        \"ref\":\"come_to_me_love.itp:6.jpg:9\",\n        \"score\":3.361,\n        \"matchData\":{\"metadata\":{\"moon\":{\"source\":{}}}}\n    }\n]\n\n\n因为索引文件不存储文本，检索的内容只包含ref信息，不显示匹配的文本。所以我又把文本按项目文件导出，供前端调用。同时，我还把坐标信息导出了，这样浏览图片时可以高亮检索到的文本对应的文本框。\n我把上述代码封装为了一个检索页面：http://comics.xulihang.me/search.html\n用户获得匹配后，可以点击链接跳转到漫画浏览页面，浏览页面根据name属性跳转到对应的图片。\nJavaScript实现的纯前端全文检索还是有挺多的应用的，特别是做成静态页面的技术文档，比如Sphinx、mkdocs都提供全文检索功能。\n相关链接：\nmkdocs如何支持中文搜索\n使用lunr.js为Wiki系统增加全文搜索支持", "filename": "2020-02-14-frontend-full-text-search-for-ImageTrans-comics-translation-projects.md"}, {"id": 353, "text": "\ndate: 2020-02-16 10:30:50+08:00\nlayout: post\ntitle: 图像处理软件的互操作性\ncategories: 技术随笔\ntags: 图像处理\n\n此前的一篇文章提到了CAT工具的互操作性，今天再来说说图像软件的互操作性。\n要实现图像软件的互操作性，首先一点是得有一个数据交换格式标准。\nCAT工具中，Trados可以说是一家独大，但它仍然遵循XLIFF、TMX等数据交换标准，并且积极地兼容其它CAT软件的格式。而图像软件领域的老大自然是Adobe。提到图像编辑软件，大家会想到Photoshop，但很少知道其它软件。开源领域有不少多层图像编辑器，比如GIMP、Krita等等，但用的人相对少很多。这也使得多层图像的标准格式似乎只有PSD一种。\n针对这一问题，Krita和KDE的作者与2006年提出了一种多层图像格式OpenRaster（拓展名ora）。\n一个ora文件是一个zip文件，内部的文件结构如下：\nexample.ora\n ├ mimetype\n ├ stack.xml '描述图像信息的xml文件\n ├ data/\n │  ├ [png格式保存的图层，命名为layer*.png，其中星号是图层的序号]\n │  └ [其它数据文件]\n ├ Thumbnails/\n │  └ thumbnail.png '缩略图，宽和高不能超过256\n └ mergedimage.png '图层合并后的图像\nstack.xml示例如下：\n```xml\n\n\n\n\n\n\nUse a Rich Text XML Specification to write cool text in your OpenRaster File\n\n\n\n\n\n\n```\n目前Adobe Photoshop、Gimp和Krita均支持ora格式。但可惜的是，ora格式到现在也只是0.0.5版本的草稿阶段，很多内容都没有制定。比如文字图层就没有得到定义，文字图层都是导出为图像来进行处理的。因为不同软件有着不同的实现，对于图像处理这样的任务，很难制定统一的标准。想实现完全的互操作性是似乎是不太可能了。\n在OpenRaster尚不完善的阶段，要想迁移一个软件中的图层到另一软件，可能只有使用脚本了。例如使用Photoshop的脚本将文字图层的坐标、字体设置等信息导出，然后再用Gimp的脚本导回，这个过程当然也需要制定数据交换格式。\n相关链接：\n\nOpenRaster Specifications\n", "filename": "2020-02-16-interoperability-between-image-editors.md"}, {"id": 354, "text": "\ndate: 2020-02-23 09:55:50+08:00\nlayout: post\ntitle: 关于视频教程\ncategories: 随笔\ntags: \n\n最近给ImageTrans写文档，觉得文档虽然可以做到细致的描述，但不如视频演示直观，我决定还是录一些演示视频。因为不单纯是讲操作，我还想把软件的原理讲清楚，所以还涉及一些理论性的内容。\n这就带来一个挑战，写文字的时候，我的部分逻辑是跳跃的，期望读者看完文章后能自己琢磨明白我写的内容，发现我遗漏的细节。但视频演示的时候，一环一环都要衔接到位，如果存在模糊和跳跃的地方，会很容易被发现。不过，视频教程其实也不应该事无巨细，而应该挑关键的内容讲。把复杂的事情将清楚。\n另外，因为要录五到六分钟的视频，说的时候难免会出错，要么是发音错了，要么是忘记接下来要讲什么，要么是每次录的时候都会临时起意，添加不同的内容，但这内容考虑得并不周全。\n其实现实中老师上课就是如此，一点小磕绊、小意外是难免的，但也可能成为课堂的调味剂。而如果是因为备课不充分，就不能忍受，课堂的质量会比较糟糕。\n我现在总结下来，操作的演示视频，因为是录制的视频，出现的错误应该比现场上课为少，因为有大量时间去完善。通过一次次的重新录制，最终的视频内容也会趋向完善。录制视频前也应该先写好稿子，并在录制过程中发现可以调整和补充的地方。\n视频教程还有一个视频受众的问题，如果软件的适用群体比较广，较难针对群体的特点调整视频内容，所以只能把一般性的内容放上去。如果要做针对性的内容，就得再录过新的视频。\n以上内容算是我最近录制视频教程的一点心得。", "filename": "2020-02-23-on-video-tutorials.md"}, {"id": 355, "text": "\ndate: 2020-03-11 21:32:50+08:00\nlayout: post\ntitle: 图像处理学习——基于OpenCV实例\ncategories: 技术随笔\ntags: 图像处理\n\n打算用B4J编写一系列OpenCV示例，用于更好地了解常见的图像处理算法和OpenCV的使用，主要包含ImageTrans用到的操作，会持续更新。\nOpenCV函数的具体用法见前文：OpenCV使用笔记\n\n\n二值化\n二值化是在灰度图像的基础上进行操作，用一定的阈值对每个像素的灰度进行判断，如果该灰度小于阈值则是黑色，大于阈值则是白色。\n灰度图像可以由RGB图像转换得来，数值在0-255之间，数值越大，亮度越大。\n下面是一个RGB转灰度的公式：\nGray=(R*299 + G*587 + B*114 + 500) / 1000\n在OpenCV中使用threshold函数进行操作，该函数还支持OTSU和Triangle算法自动计算阈值。\n用PS打开灰度图像，像素的灰度会用K值来表示，这是反映黑色程度的百分值，计算方式：1-灰度值/255。\nB4J项目：threshold\n\n\n轮廓检测\nOpenCV使用[^suzuki]提出的改进版边界跟踪(border following)算法进行轮廓检测。\n轮廓检测需要在二值化的图像上进行。什么是轮廓，可以看下面的示例。\n原图：\n\n轮廓：\n\n轮廓可以分为两类，一种是外轮廓(outer border)，一种是孔洞(hole)。因为OpenCV检测时处理的是白色的像素，所以这里孔洞和外轮廓是倒过来的。\n孔洞：\n\n外轮廓：\n\n下面是OpenCV中的用法：\nfindContours(img As cvMat,contours As List,hierarchy As cvMat,mode As Int,method As Int)\nmode有四种模式：\n\nRETR_EXTERNAL，提取所有外轮廓\nRETR_LIST，单纯列举出所有轮廓\nRETR_CCOMP，将轮廓分为外轮廓和孔洞轮廓两种，最内部的轮廓会和最外面轮廓归到一级。\nRETR_TREE，计算完整的轮廓层级\n\nhiearchy，包含四种层级信息，分别是：\n\n同一层级的下一轮廓\n同一层级的前一轮廓\n第一个子轮廓\n父轮廓\n\n我觉得比较有用的是父轮廓信息，可以据此对轮廓进行分类。\nB4J项目：findContours\n示例程序可以单独查看某个层级的轮廓，便于试验。\n\n\n图像修复\n图像修复原理是给出需要修复的图片区域，然后根据区域周边像素对该区域进行复原。一个用途是结合轮廓检测生成文字掩膜，抹除图片中的文字。\nOpenCV中对应inpaint方法。该方法包含在轮廓检测项目中。\n\n\n形态学操作\n这里主要指腐蚀和膨胀操作。\n首先取一个核(kernel)，也叫形态元素(Structuring Element)，进行卷积操作。核的中心点的取值是所在核的所有像素值中最大或最小的那个值，如果取最大则为膨胀操作，最小则为腐蚀操作。\n\n\n边缘检测\n边缘和轮廓这两个概念比较接近。我理解轮廓提取的精度更高，边缘则是近似的，表示灰度变化明显的区域。边缘检测能处理彩色图片，可以保留更完整的边缘信息。具体可以看下面的例子，不过边缘检测的结果和阈值的设定有关。\n原图：\n\n轮廓：\n\n边缘：\n\n使用Canny算子检测物体的边缘，该操作有以下步骤：\n\n高斯平滑用于去除噪点\n计算梯度强度和方向\n非极大值抑制去除非边缘像素\nhysteresis阈值处理，输出二值化的轮廓图像，该步骤需要两个阈值，如果像素的梯度高于较大的阈值，则判定为边缘。如果像素的梯度小于较小的阈值则去除。如果在两个阈值之间，那么需要存在相邻的梯度高于较大的阈值的像素。\n\n\n\n连通区域标记\n如果一个像素和它周围的8个像素或者上下左右4个像素的颜色一致或相近，那这些像素就是彼此连通的。\n连通区域标记就是给每个区域的像素进行标记（赋值一个数字），从而知道图中有哪几个连通区域，每个区域对应哪些像素。\n连通区域和轮廓的区别在于，轮廓仅仅是图像的边缘部分。\n连通区域标记的算法很多，比较简单的是递归的方法。具体见相关链接。\n连通区域标记和区域生长十分相似，区别在于前者用于检测对象，而后者用于分割图像。\n项目：connectedcomponents\n\n\n相关链接：\n\n【数字图像处理】边界跟踪算法 \nFinding contours in your image\nCanny Edge Detector\nEroding and Dilating\n图像分析：二值图像连通域标记 \nConnected Component Labelling\n\n参考文献：\n[^suzuki]: Suzuki, S. and Abe, K., Topological Structural Analysis of Digitized Binary Images by Border Following. CVGIP 30 1, pp 32-46 (1985)", "filename": "2020-03-11-learn-image-processing-with-opencv-examples.md"}, {"id": 356, "text": "\ndate: 2020-04-08 20:58:50+08:00\nlayout: post\ntitle: 使用Git管理Word格式的论文\ncategories: 技术随笔\ntags: \n\n论文是用Word来写的，而且格式是doc，我一直只用备份文件的方法做版本控制。我习惯了使用Git做版本控制，可以查看每次做了哪些修改，但它对二进制格式文件的支持不佳，不能显示修改。另外我一个doc格式论文文档有十几MB大，这样经常提交commit的话git仓库的大小会变得很大。\n于是写了个小工具，根据文件修改日期排序文件，然后利用Apache Tika导出文本后提交commit，commit的信息是修改日期。\n本来还想导出成HTML或者markdown格式，并对图片进行管理的，觉得比较麻烦就没做。我的目的主要是查看文字变动，如果多了代码看起变动来就比较麻烦。\ndoc转markdown的相关文章其实我之前也写过：\n\n学点BAT（doc转docx）\n转换Word文档为Markdown（docx转markdown）\n\n本项目是用B4J编写的：https://github.com/xulihang/ThesisTrack\n网上还搜索到修改.gitattributes和.gitconfig的方法，也是用到了pandoc来转换doc到markdown：git 对 Microsoft Word 进行版本控制\n但我不想把二进制文件直接放到仓库里，我考虑用github的release存放重要的论文版本。\n好久不更博了，最近写作的时间都花在了硕士论文上面。难得更新的这篇文章也是关于论文写作的。", "filename": "2020-04-08-use-git-with-thesis-in-word-format.md"}, {"id": 357, "text": "\ndate: 2020-05-04 20:57:50+08:00\nlayout: post\ntitle: 写作与发言的危险性\ncategories: 随笔\ntags: \n\n本文的写作主要指较长的书面文本的写作，发言主要指现场的发言和互联网上的帖子等内容。\n看了标题，你可能会问，写作和发言有什么危险的，又不像开车、乘飞机，可能出现事故，而且现在都用电脑来编辑文字了，可以不断更新。\n首先，人们的生产和生活往往需要根据前人编写的文字来进行。比如汽车、飞机的操纵，需要有技术文档；药物的服用，需要遵循说明书中写的剂量和疗程。操作步骤或者药物的剂量写错了，可能就会危及到人的性命。\n然后，人们的日常交流依赖文字，但能用好文字的人不多。首先写作和发言很难表达内心的所有想法，信息的接受者和发出者可能存在信息不对称的问题。然后，人也可能受到背景知识的影响形成主观臆断。此外，人也会比较注意对方说话的礼貌程度。这些都会导致信息被误解。小事还好，顶多争论一番，但也有人会为此搏命。而如果是被认为隐射政权这样的情况，就会出现类似文字狱、批斗这样的事件。\n文字的组织通常是会存在漏洞的。我在编写论文的过程中对这一问题有了更深刻的了解。在论文主体完成后，我在词语的选择、段与段的衔接等方面做了很大的改进，同时因为自己对所写内容有了更深入的了解，看到了很多先前表达不正确的地方。而新闻和社交媒体上的文本，因为写作周期短，出错的概率要大很多。\n有一个成语叫言多必失，也反应了写作与发言的危险性。但我们不能惧怕犯错或者被人攻击而保持沉默，在合适的时候，我们还是要发出自己的声音。", "filename": "2020-05-04-writing-and-speaking-are-dangerous.md"}, {"id": 358, "text": "\ndate: 2020-06-30 21:06:50+08:00\nlayout: post\ntitle: 论文评审\ncategories: 随笔\ntags: \n\n硕士论文写好后需要交由评审老师进行评审，一般会按写作内容、排版等分项进行打分，并给出修改建议。结果可以分为直接进入答辩、修改后进入答辩和拒绝进入答辩等等。\n硕士研究生们花了1年时间写的论文，当然希望能够通过评审进入答辩，但送到评审老师手上时，感觉命运掌握在了别人的手理，不免惴惴不安。自我评价是容易的，而且一般评价会较好。而他人评价存在不确定性，像硕士论文，可能评审老师对自己的研究内容和价值并没有深刻的了解。\n得知通过评审后，发现评审老师还给出了十几条修改意见。仔细阅读时，发现有几条建议是恰当的，有几条则不恰当。研究生自己是最熟悉自己的论文的，而且论文数易其稿后，对自己的论文也会有迷之自信的地方，所以一时间可能会觉得他人的建议无法接受。但大多数时候，仔细研究老师的建议，的确能发现论文的不足之处。只是到了论文的后期，学生就像强弩之末，修改的动力并不强烈了。", "filename": "2020-06-30-thesis-review.md"}, {"id": 359, "text": "\ndate: 2020-07-01 16:51:50+08:00\nlayout: post\ntitle: 写论文\ncategories: 随笔\ntags: \n\n本文主要基于我完成北大计算机辅助翻译毕业所需的工程硕士论文的经历展开。\n好的开始是成功的一半，选题是论文写作中比较重要的一步。论文的选题来源一般有两种：一种是学生跟着老师做课题、做项目，一种是学生通过实习或者研究发现值得研究的题目。\n像北大软微的专业硕士，第一年上课，第二年实习，第三年写论文，论文的选题来源主要是实习。论文可以集中体现硕士阶段的学习成果以及学生的研究能力，学校据此来决定是否授予学位。\n我在公司实习的时候接触了漫画翻译项目，编写了辅助翻译工具，自然而然地，我的论文题目就是漫画翻译辅助工具的设计与实现了。\n但要写论文，有实际的应用需求是一方面，同时也要考虑学术价值和过往的研究。老师一般要求学生在开题之前做好文献综述工作，确定题目可行。有的老师会要求开题前阅读数百篇文献，并写出选题表。\n我认为，在刚开始的时候，学生可能只是给论文确定了一个大方向，对自己要做的事、创新点还存在模糊不清的地方，而随着研究的深入，会有拨开迷雾见青天的感觉。当然结果也可能是发现研究无法进展下去，比如一些假设性的需要实验的研究，实验结果表明假设错误，又或者论文提出的方法的结果没有突破性的进步，那可能就要重新换题目了。\n我的论文是一篇工程设计类的文章，紧接着开题进行的工作是论文写作中最有意思的地方，阅读有关文献，编写程序，收集数据，不断实验，不断完善。\n程序运行良好后，则进入较为枯燥的论文写作过程。软件工程的文章一般有固定的章节安排，即绪论-文献综述或者相关技术介绍-需求分析-系统设计-系统实现-系统测试-结论。把论文的问题、前人工作、自己的工作和结果用文字和图片讲述清楚。\n硕士论文的字数一般有3万，篇幅较长，需要注重前后的逻辑关联。说实话，其实一段话的组织，要符合逻辑（文字表达、文字顺序等等能体现逻辑）都不是一件容易的事情，饶是我这样平时经常写博客的，写起来也会有很多问题。毕竟写博客是比较随意的事情，论文要求科学严密，同时也不能太具有文学性。\n于是论文写出来后，还要不断修改完善，并纠正所有存在错别字和排版错误的地方。\n此外，论文写作过程中，需要多和导师以及同学沟通，及时发现自己存在的不足。\n论文写好后，光自己觉得好还不行，最终能不能通过还得由老师来做评定。其实对自己的成果有信心是不用担心的，但毕竟论文通过与否掌握在别人手中，会因为不确定性而担心。\n评审通过后，根据老师的意见进行修改，之后再进行答辩，答辩通过后提交进一步修改的论文，差不多论文环节就可以结束了。\n悄悄说：致谢是论文中可以自由发挥，也是非专业人士都能看懂的一部分，我看别人论文一般会看看致谢\n我的时间节点：\n\n6-9月 论文选题\n9-10月 论文开题\n6-2月 读文献、做实验、写程序、写初稿\n3-4月 和老师同学沟通，修改和完善论文，提交终稿\n5-6月 根据论文评审意见修改论文、答辩\n\n相关链接：\n\nCAT 毕业攻略\n论文排版\n论文评审\n", "filename": "2020-07-01-thesis-writing.md"}, {"id": 360, "text": "\ndate: 2020-07-04 10:50:50+08:00\nlayout: post\ntitle: 找工作\ncategories: 随笔\ntags: \n\n找工作不是件容易的事情，我去年夏天才开始了解社会提供的岗位，一直到现在也不能确定我到底适合什么岗位。\n我在几个公司做翻译相关的实习的时候，因为能够发挥所学，与同事相处也比较愉快，其实还是挺开心的。但找正式的工作和实习还是有差别的。找实习是为了完成学业要求，寻找论文选题，钱多钱少也无所谓。但找正式工作，还是得考虑薪资、福利和城市等一系列因素。\n在找工作时我会考虑以下因素：\n\n工作的价值和内容（与个人性格、身体条件、理想和技能的匹配度）\n长期的发展（个人成长、发大财的可能）\n部门氛围、同事和直属领导\n工作环境，公司是不是大公司\n上班时间、是否需要长期用眼\n薪酬（月薪年薪、五险一金、补贴、期权）\n城市（离家远近、家人和朋友、房价）\n\n有人说工作主要是为了赚钱，我觉得发现赚钱的门道得对社会的方方面面有一定的认识。所以我会看一些社会制度、时代背景、相关行业的文章与新闻。找工作时，想找有发展前景的行业。但了解一个行业不是一件容易的事情，招聘网站上的工作这么多，涉及这么多行业，我每个都研究一下的话需要耗费相当多的时间，而且网上的资料都是二手资料，道听途说，很难做出正确的判断，而作为应届生，而且是在2020疫情年，也很难再通过实习去进行了解。\n了解岗位信息，我主要通过以下方式：\n\n公司自己的招聘站点、宣讲会\n各大招聘网站，智联招聘、应届生、前程无忧、领英和BOSS直聘\n知乎、看准、牛客和学校BBS，用于了解网友对公司和行业的评价\n学校的就业信息网站\n地方的招聘网站\n\n我找工作日子就是每天刷这些平台，然后投简历。\n简历我是在超级简历网站上做的，生成了一份格式比较简明的简历，投递不同岗位时会做点修改，但其实我这方面做得比较随意，也没有按什么STAR方法去写工作内容。\n以我的学校背景，通过简历还是不难的，但我秋招时投递的岗位不多，我对秋招的准备也不够，不知道有哪些岗位适合我，开始的晚也错过了很多招聘（九月底了，同时还要论文开题）。我投了银行总行、新华社、互联网公司和运营商的翻译岗、管培生岗，但从没想过做技术，没有相关的实习，也没有系统学习主流技术和刷题，所以也没有投技术相关的工作。我一心还是想做与翻译相关的工作。\n秋招时我还嫌公司的考试题目无聊，行测类的题目和我的专业知识毫不相关，心理测试几百道题目，每个公司都要做一遍。还有现场考试，都是在北京的郊区，我从六道口过去都太远。\n海康威视让我去杭州面试技术文档写作，我觉得文档写作是个辅助性质的岗位，而且他们都没有一对一通知我，就没有动力从北京跑去杭州面试了。\n金山的管培生岗位，我跑到小米的新园区，第一次参加群面没啥经验，后来通知没过。\n新华社参编部的外文编辑岗位，我看了新华社翻译编辑相关的书后还是挺感兴趣的。它的笔试是中英互译和写议论文，内容是弹劾特朗普、新疆暴恐以及快递，就像本科的英语考试一样，我的笔试成绩还是不错的，进了面试。但面试后也没有进一步通知了。\n然后都说选调生好，我也报了浙江选调。公务员考试题目是行测和申论，我对这些题目不是很感冒，虽然研究了下觉得这类设置和日后工作是很有关联的，最后我报的岗位，30名里成绩排了15。公务员题目中的阅读材料还是挺有意思的，我了解了隐形冠军之类的概念。\n我对出版行业还是比较感兴趣的，但出版公司的校招岗位不多。在北京的我嫌工资太低就没投，只投了浙江出版集团的，但没有后续通知，可能他们更倾向于有工作经验的编辑吧。\n我的专业是个交叉学科，的确不好找工作，英语没有继续专门学英语的同学好，计算机也没有科班同学好。我写的软件让我积累了工程实践经验，但用的技术不是主流的，而且编写翻译软件主要是熟悉了专门的业务，在技术上没有特别的钻研。\n时间一晃都要年底了，我又在前程无忧上投了老家银行管培和一些北京事业单位的岗位。\n回家后去银行面试，先是群面，然后是单面。群面讨论如何设计一款老年人专用水杯，感觉就像小学时和同学一起做手工。最后通过了。\n小米的内容办招本地化工程师，部门的人联系了我。华为也通知我面试技术翻译工程师。我发现这两个岗位的招聘者对我以后要做的工作不能给出确切的说明。招聘者问我自己对以后日常工作的设想，可能是他自己也不知道。\n小米和华为这样的公司，其实内部的翻译部门不会直接做翻译，主要是承接内部其它部门的翻译需求，找供应商去做，自己只要做好管理就行了。我觉得我其实更喜欢翻译实践，在甲方也没什么成长，就拒绝了。\n华为后来还通知我面试行销产品经理，这是个售前岗位，其实挺锻炼人的，但我当时一心在论文修改上面，也拒绝了。\n6月答辩通过后，校招的岗位不多了，我在前程无忧、应届生和BOSS直聘上继续找工作。\n拿到了商飞上航的软件开发岗位，hr说以后会做翻译相关的工作。\n关于找工作相关的文章，比如根据MBTI性格找工作、根据专业找工作还有个人发展的文章，可以参考，但不能一直看这类文章。个人发展的文章说人有想象的能力，可以通过想象来避免走弯路，但工作还是需要实践了才能知道好不好。\n其实人类社会虽然复杂，但本质需求就是吃穿住行，满足这些是简单的，人的意义也是自己定义的，不必被社会所局限住。", "filename": "2020-07-04-job-seeking.md"}, {"id": 361, "text": "\ndate: 2020-07-09 14:07:50+08:00\nlayout: post\ntitle: B4J应用本地化\ncategories: 技术随笔\ntags: CAT B4X\n\n软件本地化不是一件容易的事情，不过其基本的实现思路其实不难。比如对于以下代码：\nvb\nfx.MsgBox(MainForm,\"Message\",\"Title\")\n需要处理的是\"Message\"和\"Title\"，我们可以做一个表，包含三列内容，ID、英文文本和译文文本，表头的语言代码遵循ISO标准。\nid, en, zh\nmsgbox.message, Message, 信息\nmsgbox.title, Title, 标题\n将数据以id为键，所需显示的语言的数据为值读入字典。构建一个函数通过查询ID来得到用于显示的文本，可用于封装代码中需要翻译的文本。\n函数：\nvb\nSub Localize(id as String) as String\n    return strings.Get(id)\nEnd Sub\n用函数包裹文本后的代码：\nvb\nfx.MsgBox(MainForm,Localize(\"msgbox.message\"),Localize(\"msgbox.title\"))\nJava使用Resource Bundle实现这一功能，在B4X中则是Localizator。Localizator的示例中使用具体语言的文本作为键。\n我针对B4J应用对Localizator做了功能加强。\n\n自动导出和导回所有布局文件和代码中的文本，支持多种控件\n针对控件中文字因为空间不足而无法显示完整的问题，自动添加Tooltips。当然，最好的办法还是不同的语言使用不同的布局文件，可以调整控件的位置以及文本的字体。而iOS的本地化就支持这一功能（参见：iOS 实现界面本地化（国际化））。\n\nB4J本地化实践的具体说明我发布在此处：Localization Practices\n本地化中还会有很多其它的问题，比如英文单词有单复数的形式；文本包含链接，需要添加占位符；翻译后的程序无法正常运行等等。更多可以看Mozilla的本地化最佳实践文章：Localization content best practices", "filename": "2020-07-09-B4J-app-localization.md"}, {"id": 362, "text": "\ndate: 2020-07-25 21:11:50+08:00\nlayout: post\ntitle: 内容切分\ncategories: 随笔\ntags: \n\n在领英上看到Translated的CEO发了一个视频，我费了半天劲从Youtube上下下来，发现内容是长达50分钟的一段独白，还是英文无字幕的，瞬间就没了兴趣。\n这样的视频其实和播客也很像，很多播客长达1个小时，播主觉得里面讲了很多有价值的东西，但听众要仔细听完这么长一段才能保证不错过有价值的点。\n这时候我觉得要是能够标识出关键节点就好了。这一功能我最早在优酷上看到过，可以在进度条上显示有关节点和节点的文字描述。这一功能的相关英文有video highlight、video skimming，可以高亮重点内容，便于用户跳转进度。\n也有人直接把高潮片段做了剪辑，比如bilibli上的很多up主传的集锦视频。这些视频一般不超过5分钟，类似于现在的短视频。\n其实除了视频的切分，其它很多东西都是需要切分的。比如一个苹果要切成容易吃的小块，马拉松要分成数段，一部小说要分成许多章节。技术文档写作常常强调把内容分为小点，以列表的形式呈现。\n不过有的内容并不适合进行切分，比如句子关联性非常强的一段文字，环环相扣，难以进行分点叙述。我在论文写作中就碰到过这样的问题。", "filename": "2020-07-25-content-split.md"}, {"id": 363, "text": "\ndate: 2020-07-25 15:11:50+08:00\nlayout: post\ntitle: 漫画翻译心得\ncategories: 随笔\ntags: 翻译\n\n我的硕士毕业论文是《一个漫画翻译辅助工具的设计与实现》（researchgate），主要成果是ImageTrans这一辅助翻译工具，从图像处理和文字翻译两个方面进行辅助。完成论文后，我又继续做了xkcd和腾讯动漫上的一些中文漫画的翻译，这里我把我的心得做一个总结。\n图像处理\n\n\n翻译软件应能正确生成文字区域\n漫画翻译需要以文字区域为单位进行。文字区域应该以语义片段为单位，一般就是一个段落。不同气泡中的文字区域不应该被合并。\n漫画文字通常存在于气泡中，但也有许多文字不在气泡里。传统的基于气泡检测的方法没有办法检测气泡外的文字，比较实用的是合并连通区域并对这些候选区域进行分类以获得正确的文字区域的方法，但它不适用于背景颜色比文字颜色深的情况。\n此外也可以用深度学习目标检测方法和自然场景文字检测方法。目标检测也需要生成候选区域，其使用的方法用于漫画文字不够精确。而目前最先进的自然场景文字检测方法，比如CRAFT，效果则很好，缺点就是单机部署处理的速度比较慢。\nImageTrans使用基于连通区域的文字区域检测方法，可以设置相关参数，并能够通过检测文字外的轮廓判断不同区域是不是需要合并。\n\n\n翻译软件应集成图像浏览与翻译功能\n漫画翻译是一种符际翻译，译者翻译时需要参考图像，所以应该提供便利的图像浏览和片段切换方式。\n很多翻译公司是将图像文字转录为表格，然后给译员翻译。这样如果显示设备空间不够，会存在来回切换窗口的问题，也会存在文字和图像对应出错的问题，比如不知道转录的文字对应漫画中的哪句话。\nImageTrans支持用户点击图片上的文字框来进行翻译，并能够实时预览翻译效果。\n\n\n\n文字翻译\n\n\n尽量使用简短、地道的表达\n因为漫画文字的空间受到限制，尽量使用较短的表达。另外漫画中的文本多为人物对话，一般需要使用比较地道的口语表达.\n我们可以通过检索语料查找相关表达。影视字幕文件是一个好的语料来源。\n比如这么一句话：\n那个女人也抛弃了他和他的对手好上了\n百度翻译结果：\nThat woman also abandoned him and his opponent\n腾讯翻译结果：\nThe woman also abandoned him and fell in love with his opponent.\n检索老友记的平行语料，可以找到相关条目。\n首先检索“抛弃”，发现可以选择较短的dump表示抛弃的意思：\n```\n8\nnote: Friends.S03E22.chs&eng.sohu.ass 0:07:04.48,0:07:07.32\nen: I dump him for telling people the short version.\nzh: 我会因为他光说简单的 抛弃了他\n10\nnote: Friends.S05E08.chs&eng.sohu.ass 0:02:54.93,0:02:56.63\nen: and abandoned its entire family.\nzh: 抛妻弃子的话\n15\nnote: Friends.S06E02.chs&eng.sohu.ass 0:21:29.93,0:21:32.99\nen: But then we ditch those two and we get married.\nzh: 接着我们就抛弃他们结婚\n```\n然后检索“好上”，可以找到hook up这个表达：\n9\nnote: Friends.S10E03.chs&eng.sohu.ass 0:20:55.13,0:20:57.40\nen: When you and Monica first hooked up...\nzh: 你和莫妮卡刚好上的时候\n整句可以翻译为：The woman dumped him and hooked up with his opponent.\n但有些表达在语料库里可能检索不到，最好还是平时多看剧，有条件就出国，熟悉英文的表达。\n\n\n灵活翻译拟声词\n我遇到一个漫画用“唰”表示把衣服脱在床上以及用修眉刀修眉毛的声音。想不出对应的英文拟声词，可以把动作翻译出来，分别翻译为fell和shave。\n\n\n摆脱原文束缚\n翻译并不一定要完全按照原文一字一字翻译，漫画翻译一般用流畅的文本把原文的意思表述出来就行了，而且更加容易理解。\n比如xkcd 第2336篇中的这么一段话：\nAstronomers define the Campfire Habitable Zone as the region where you're far enough not to be burned but close enough to roast marshmallows.\n百度翻译：\n天文学家将篝火可居住区定义为：你离这里足够远，不会被烧焦，但距离足够近，可以烤棉花糖。\nDeepL：\n天文学家将 \"篝火宜居区 \"定义为：在这个区域里，你离得足够远，不会被烧伤，但又足够近，可以烤棉花糖。\n我校对的翻译：\n天文学家对篝火宜居带的定义：离篝火足够远，不至于被烫伤，又足够近，能烤棉花糖的区域\n\n\n注意俚语、习语等表达\n比如我最近帮忙校对的xkcd的这篇漫画（https://weibo.com/7321032418/JcNQ13tgM）：\n\n里面那句这招永远玩不腻的英文是That never gets old，最初的翻译是这帮人永远长不大。这是该漫画最主要的梗，居然也翻错了。get old是一个习语，表示不会厌倦的意思。翻译漫画时应该具有辨别习语和俚语这类表达的意识。\n\n", "filename": "2020-07-25-translating-comics.md"}, {"id": 364, "text": "\ndate: 2020-09-29 15:04:50+08:00\nlayout: post\ntitle: 日语OCR的图像预处理\ncategories: 技术随笔\ntags: \n\nImageTrans集成了百度、有道和微软等厂商的OCR服务，英文和中文的识别效果都还不错，但日语的识别准确率一直不是很高。\nOCR一般需要先对文字进行拆分。像中文日文和韩文中存在的汉字都是可以较为容易地切分的，因为汉字都是比较标准的方块，用水平投影和垂直投影就可以得到文字行和单个文字。其实做OCR并不是特别复杂。\n日语文字识别的难点在于文字有时候是竖直排版的，而且在文字边上还会有用于注音的振假名（Furigana），对结果存在干扰。\n我在测试百度OCR的日语识别效果时，发现它能较精确地识别日语，但不能根据竖直排版调整文字顺序，它提供的API的结果里也没有给出单个汉字的位置信息。\n于是我决定预先将文字竖直排版的日语图像转换为水平横向排版图像，并去除振假名等干扰信息，之后再使用现有的OCR软件进行识别。\n这一方法存在一些难点：\n\n竖直排列的标点符号需要进行旋转\n正确区分振假名和汉字列\n要避免上下结构的汉字被切分的问题\n文字的排列需要合乎规则，比如遵循中心线、固定的行高、拗音的假名等等\n\n有道OCR在这方面做得较好，能识别竖排日文，而且对标点符号的还原也很好。\n下面是我实现的效果。\n例1\n原图：\n\n纯文字：\n\n转换后的图像：\n\n例2\n原图：\n\n纯文字：\n\n转换后的图像：\n\n其实我已经把文字都拆分了，完全可以自己做OCR，等有空了再研究下吧。", "filename": "2020-09-29-Japanese-ocr-image-preprocessing.md"}, {"id": 365, "text": "\ndate: 2020-10-15 17:19:50+08:00\nlayout: post\ntitle: 竖直文字排版\ncategories: 技术随笔\ntags: \n\n中文、日文和韩文都能够竖直排版，现代日语的书籍还沿用了过去从右往左阅读的竖直排版模式。\n翻译日语漫画为中文或者中文翻译为日文时，汉字通常需要竖直排版。\n将汉字竖直排列，有一种简单的字符串处理方法，需要规定好每行有几个字，然后将汉字重新进行排列。\nB4X示例代码（来源）：\nvb\nSub MakeItVerticalForCJK(s As String, NumberOfLettersPerColumn As Int) As String\n    Dim sb As StringBuilder\n    sb.Initialize\n    Dim NumberOfColumns As Int = Ceil(s.Length / NumberOfLettersPerColumn)\n    For y = 0 To NumberOfLettersPerColumn - 1\n        For x = 0 To NumberOfColumns - 1\n            Dim Index As Int = (NumberOfColumns - 1 - x) * NumberOfLettersPerColumn + y\n            If Index < s.Length Then\n                sb.Append(s.CharAt(Index))\n            Else\n                sb.Append(\" \")\n            End If\n        Next\n        sb.Append(CRLF)\n    Next\n    Return sb.ToString\nEnd Sub\n输出示例：\n```\n原文：\n今天开始和大家一起学习的同学！\n输出：\n习大今\n的家天\n同一开\n学起始\n！学和\n```\n汉字和全角标点的宽度高度基本是一致的，所以效果还可以。但如果混入半角标点符号和拉丁字母以及空格，效果就不行了。此外，不能控制每行要显示哪几个字。\n我想到可以把文字先转换为图片，然后对图片进行调整，从而实现一个文字竖排引擎，可以供ImageTrans使用。\n效果展示：\n原文：\n今日から\nみんなと勉強\nする事になった、\n灰原哀さん\nです！\n输出图像：\n\n竖排时需要遵循日语汉字的排版规则，例如：\n\n感叹号、冒号居中，顿号、逗号和句号靠右排列\n日语的延长音—需要进行旋转，类似的还有竖排引号『』。后者可以直接改用﹃﹄\n英文单词向右旋转90度排列\n位数较小的数字横向排列在一起\n\n一个完善的文字引擎还需要考虑斜体加粗等富文本格式、字间距、行距、对齐等内容，较为复杂，目前我还没有实现。\n相关文章：\n\nwriting-mode - CSS: Cascading Style Sheets\nVERTICAL LAYOUTS FOR CANVAS TEXT (CJK)\n", "filename": "2020-10-15-vertical-text-engine.md"}, {"id": 366, "text": "\ndate: 2020-10-20 18:08:50+08:00\nlayout: post\ntitle: 翻译的动机\ncategories: 随笔\ntags: \n\n我开发了一系列的翻译软件，旨在提高译员的翻译效率。用自己开发的软件做翻译是很有意思的一件事情，我用BasicCAT翻译了BasicCAT的文档、ImageTrans的文档和界面，此外也完成了很多来自翻译公司的翻译任务。\n但最近因为要找全职工作，我就不再做兼职翻译了，而我自己的软件文档也都已经翻译好了。没什么翻译任务了，我不由思考还有什么东西是值得我去翻译的，我做翻译是出于什么动机或者说目的。\n在学校的时候做的翻译基本是出于学习的目的，要想彻底了解原文，翻译通常是最好的一个方法，可以提高语言能力。在不同语言间转换也充满了乐趣。\n做商业翻译的主要目的则是为了了解市场、积累经验以及最终的结果：赚钱。因为翻译的稿费是根据翻译的字数确定的，做这类翻译常常会追求翻译的速度。不过在甲方公司做翻译，如果没有时间规定，工资也不是按翻译结算，那还是可以慢慢翻的。\n个人选择翻译任务，除了像我这样完成自己软件的文档翻译，还有很多类型，比如看到一部不错的漫画作品还没有人翻译介绍进来，很想自己做第一个翻译的人。这是国内的很多汉化组在做的事情。如果作品能够被出版或者发布在国内的正版平台上则还能够获得收入。\n许均在《翻译动机、翻译观念与翻译活动》一文中列出了很多例子，例如梁启超是为了维新变法、改变社会，萧乾和文洁若夫妇认为乔伊斯的《尤利西斯》有多方面的价值，亦对我国小说创作有可借鉴的地方。\n萧乾认为翻译的作品应该是译者所喜爱的，这样才有动力去翻译并翻好。这或许也是用爱发电的汉化组汉化作品比官方翻译质量更高的原因。", "filename": "2020-10-20-translation-motivation.md"}, {"id": 367, "text": "\ndate: 2020-11-18 16:26:50+08:00\nlayout: post\ntitle: 不求甚解与咬文嚼字\ncategories: 随笔\ntags: \n\n不求甚解和咬文嚼字是一对反义词。\n不求甚解出自陶渊明的《五柳先生传》，讲的是读书主要了解大意，不求彻底了解。咬文嚼字则出自元代无名氏的《杀狗劝夫》，我记得看过的一本杂志便叫这个名字，所以印象深刻。\n今天中午的时候，我和翻译公司的HR互发邮件。因为是外企，所以是用英文写的。但我发现HR信里的句子多是语法问题，主要是空格、介词和冠词的问题。这些问题放到Grammarly里检查一下就可以检查出来。我想作为一个翻译公司，这点错误还是不应该犯的，虽然内容还是能够理解。\n而在我下午发的一条微博里，我自己却也用错了一个词。今天的最高气温有28度，比往年热得多。我说同样是11月下旬，14年的时候我好像都穿羽绒服了。不过我很快发现，旬表示10，一个月分为三旬，18号属于中旬。\n而前几天，我看《老友记》时，听到Charlie跟Joey说，songs结尾的s要发z。我才知道还有这么一个规则。\n我意识到我之前学习的时候不求甚解，使得很多基础知识没有学好。为了语言表达的精准，咬文嚼字还是有必要的。同样不求甚解的还有学古诗，小学时老师布置一个背诵排行榜，我为了排在前列，背了很多诗，但并没有好好地是赏析诗。\n那不求甚解就是不好的吗？我觉得在水平没有达到一定程度的时候，我们对事物的认识是有限的，没有办法彻底了解，这个时候不求甚解地广泛进行阅读，认识水平加深后，咬文嚼字才会开始有味道起来。", "filename": "2020-11-18-do-not-pursue-deep-understanding-and-ponder-on-every-word-and-character.md"}, {"id": 368, "text": "\ndate: 2020-12-04 21:39:50+08:00\nlayout: post\ntitle: 训练一个图像分类器并在OpenCV中调用\ncategories: 技术随笔\ntags: \n\n单纯的记录。\n目标：训练一个判断图片内是否包含文字的分类器，并让ImageTrans能通过OpenCV进行调用\n步骤：\n\n\n使用TensorFlow训练图片分类模型\n使用ImageTrans导出包含文字的图像和不包含文字的图像用于训练。使用TensorFlow提供的make_image_classifier脚本进行训练，会生成tflite和savedmodel格式的模型文件。\n\n\n转换savedmodel格式的模型为frozen graph\n```python\nimport tensorflow as tf\nfrom tensorflow.python.framework.convert_to_constants import convert_variables_to_constants_v2\nloaded = tf.saved_model.load('my_model')\ninfer = loaded.signatures['serving_default']\nf = tf.function(infer).get_concrete_function(input_1=tf.TensorSpec(shape=[None, 224, 224, 3], dtype=tf.float32))\nf2 = convert_variables_to_constants_v2(f)\ngraph_def = f2.graph.as_graph_def()\nExport frozen graph\nwith tf.io.gfile.GFile('frozen_graph.pb', 'wb') as f:\n   f.write(graph_def.SerializeToString())\n```\n代码来自：Import SavedModel from TensorFlow\n\n\n使用OpenCV的DNN模块进行调用\n```python\nimport numpy as np\nimport cv2\nnet = cv2.dnn.readNet('frozen_graph.pb')\nimage = cv2.imread(filename)\nimg_tensor =  cv2.dnn.blobFromImage(image, 1 / 255.0, (224, 224), swapRB=True, crop=False) \nnet.setInput(img_tensor)\nout = net.forward()\nprint(out[0][1])\nprint(out.shape)\n```\n\n", "filename": "2020-12-04-train-an-image-classfier-and-use-it-in-opencv.md"}, {"id": 369, "text": "\ndate: 2020-12-30 19:33:50+08:00\nlayout: post\ntitle: 设计一个日语漫画辅助阅读器\ncategories: 技术随笔\ntags: CAT\n\n我稍微懂点日语，但直接看原版漫画还是比较吃力。于是我针对性地完善了ImageTrans以更好地用于阅读日语漫画，可以准确识别文字并提供机器翻译结果便于了解大概意思。\n软件功能：\n\n\n自动定位文字区域\n\n定位文字区域的方法有很多，比如使用轮廓检测或者连通区域标记法提取气泡、使用文字连通区域法直接检测文字、深度学习目标检测方法、自然场景文字检测方法等等。我将这些方法都整合进了ImageTrans供用户选择。\n\n\n聚合多种OCR引擎，哪个好使用哪个，并提供竖排文字图片转横排功能\n整合了百度、微软、有道、腾讯、搜狗等在线OCR引擎和Tessearct离线引擎。\n但测试只有tesseract、微软和有道支持竖排的文本，所以我又做了一个将竖直排列的文字横向排列的功能。\n原图：\n\n百度识别结果：证山,K领山源十诲!心长想:2や十\n转换后：\n\n百度识别结果：今日からみんなと勉強する事になった灰原哀さんです!\n但这要求文字区域的背景是白色的，如果比较复杂就不能重新排列了。\n更新：其实百度有提供精确版OCR，是支持竖排识别的，只是每天有500次的使用限制。而且有时候识别结果不如转换为横排后识别得到的结果好。\n\n\n提供去除振假名的功能\n用于注音的振假名会影响OCR结果，需要进行去除。\n去除前：\n\ntesseract识别结果：いきなり東大を_目指しだして以来\n去除后：\n\ntesseract识别结果：思えば高-のとき三者面談でいきなり東大を目指しだして以来\n\n\n整合多种机器翻译引擎\n整合了谷歌、百度和腾讯等机器翻译服务。但测试下来，很难把原文意思翻译出来。日语比较特别，有很多语气词，内容还依赖于语境。不过切换不同的机器翻译再加上图片内容，大致意思就能理解了。\n\n\n\n将译文替换回图片\n\n\n\n使用Chrome插件翻译网页中的图片\n现在一般在线看漫画，用Chrome扩展获取网页中图片链接并把翻译好的图片替换回去，体验会好很多。\n\n\n视频演示\n手动分步翻译：\n \n一键自动翻译：\n \n视频中的自动翻译使用搜狗深智OCR定位文字并识别文字，处理速度和准确度都比较高，让我觉得我在研究文字定位和OCR图像预处理方面浪费了太多力气。\n最新研究\n日本的几位博士针对日语漫画设计了一整套翻译系统并发表了一篇论文：《Towards Fully Automated Manga Translation》（链接）\n他们针对漫画设计了考虑上下文与多模态的机器翻译，训练了能识别振假名的OCR、漫画分镜和文字目标检测器，采用EdgeConnect图像修复法去除文字，根据文字区域面积自动调整排版译文，并制作了可用于评价检测和翻译的数据集以及一个在线翻译系统。\n他们成立的公司叫做mantra，但目前还没有公开可用的系统。\n不过实际使用的话，除了机器翻译考虑上下文与漫画中的图像信息，各方面和ImageTrans没有太大差距。因为ImageTrans目前整合的功能已经有较好的效果了，要再提升的话主要是并发处理和提高翻译质量以及软件的可用性这些方面。", "filename": "2020-12-30-design-a-good-raw-Japanese-manga-reader.md"}, {"id": 370, "text": "\ndate: 2021-04-10 13:15:50+08:00\nlayout: post\ntitle: 我遇到的销售套路\ncategories: 随笔\ntags: \n\n来杭州后我遇到了不少销售人员，发现他们用了不少套路，这里记录一下。\n\n您中奖了。珠宝店店员邀请我参与刮奖，假装惊讶地说我刮到了特等奖，可以免费领取一款珠宝。我还真以为有便宜可以赚，一看说明，要出25%的工本费。这一套路带有欺骗性质，店员演得也比较明显，我能直接看出来。\n首次购买优惠与限期优惠。注册会员后，往往在一定期限内或者首次购买，可以得到优惠。让我有一种过了这个村就没这个店的感觉。但可能市场价本来就是优惠后的价格。\n量大优惠。数量大后，所需支付的绝对值也上去了，虽然有优惠，但还是得花不少钱。\n特定产品买一送一。比如健身卡，办一个月价格很贵，而办一年，平均到每月会低很多，并且还送一年。\n\n销售虽然有很多套路，不过他们也会用心地去发现我们的需求，推荐合适的产品。我还是希望少点套路，多关注产品和服务本身。", "filename": "2021-04-10-sales-tricks.md"}, {"id": 371, "text": "\ndate: 2021-07-31 21:37:50+08:00\nlayout: post\ntitle: 旅行\ncategories: 随笔\ntags: \n\n这周跟公司去了湖南旅行。这种公司团体旅游我还是第一次体验。\n上一句话里我用了旅行和旅游两个词。前者强调位移，而后者强调游玩。旅游都需要旅行，但旅行并不一定包含游。本文里我主要还是用旅行一词吧。\n出行前，我看了下维基百科里旅行的词条，我觉得这段维基百科让我了解了旅行的一些意义：\n\n旅行指人徒步或通过交通工具进行的“长距离”位移，也指包含此位移的活动。其可能以商务，通勤或者消遣（见旅游）为目的。一些旅行需要在旅行社的协助下进行。\n旅行亦指為觀賞不同景色，以及了解異與自身文化的差別，而到不同城市、國度或到遙遠陌生地區遊覽的文化概念。\n你和當地人之間的關係是建立在情感而非利益上，你和當地人一起生活、吃飯、聊天、工作、照顧小孩及玩樂，與他們一起體會〝在地的生活〞，從中學習到知識、智慧、看事情的面向及人生道理。\n\n我希望能在有限的几天里了解下湖南和当地的文化，体验下本地人的生活。\n首先来到了长沙。来到一个城市，最直观的印象便是市容和交通。长沙街边都是香樟树和紫薇树，马路宽广，高楼林立整洁，市容这方面给我的感觉还是不错的，而且骑行在路上，它还给我一种在老家海宁的感觉。可能也是我潜意识里想从长沙本地人的视角看这座城市。但第一天在橘子洲大桥附近的堵车让我觉得长沙的交通规划存在不足。\n然后讲当地的文化。文化是一个抽象的概念，可以有物质和非物质的分类。物质的比如当地的饮食。我体验了下湘菜，有辣椒炒肉、剁椒鱼块、酸萝卜炒肚丝等。看了百科说辣椒能祛湿，但奇怪的是浙江夏天湿气重，饮食却并不以辣为主。除了传统的湘菜，也有新流行起来的食品，像茶颜悦色，在长沙开了很多的店面。非物质的则比如当地的方言、名人。湖南方言主要是湘语、西南官话，不过现在普通话普及，我一个外地人不太有机会和当地人用方言交流。湖南近现代名人比较多，听导游说，从国家主席到十大元帅、十大将军，很多都是湖南人。长沙马路上的能看到很多墙上都是介绍革命烈士的内容。适逢建党100周年，路灯上也都挂着红色的牌子，能感受到城市的红色底蕴。\n除了长沙，我们还去了韶山。在路上可以就看到大片的农田，田里种着水稻。以前学历史，记得关于中国粮食供应中心变迁的几句话：“苏湖熟，天下足”、“湖广熟、天下足”。袁隆平做杂交水稻试验就是在湖南搞的。毛主席故居前也都是一片片的水稻田，应该也是特意保留的。\n我这里只写我实际看到的，其实还有很多值得了解的地方。像城市的产业也是城市的重要组成。长沙的传媒行业比较发达。小时候看蓝猫淘气，知道三辰卡通的基地就是在长沙。\n来湖南的两天多，行程主要围绕景点展开，去了橘子洲、太平老街、五一广场、毛主席故居、岳麓书院等地，时间短暂，走的时候我感到有点不舍。除了对离开旅行地点的不舍，还有对这次团队出行的不舍。", "filename": "2021-07-31-traveling.md"}, {"id": 372, "text": "\ndate: 2022-08-28 18:33:50+08:00\nlayout: post\ntitle: 对未知和不可控的忧虑\ncategories: 随笔\ntags: \n\n从2020起，我就在FastSpring上售卖软件。FastSpring是一个针对软件的电商平台，集成了全球各种支付方式。然而，上个月，平台收到了大量的使用虚假邮箱完成的订单。这些订单使用信用卡支付后又全部refund，会导致额外的损失。\n我当即联系了FastSpring的客服。他们暂时把我的店关闭了。过了一个星期，他们又重新把我的店开了起来。但refund造成的几百美元损失还是由我承担，而且我问这样的信用卡攻击还会发生吗，他们说还是有可能的。\n好在我已经启用了针对国内用户的面包多平台，FastSpring不能用不影响国内用户。但目前国内外用户对半分，FastSpring还是会很大地影响收入，看来还是得找一个备用的国外支付平台。\n我们生活在这个世界上，会受到各种因素的制约，很多事情都是不受我们控制的。其实就连我们自己，我们也控制不了，它充满了未知。\n其它的例子，比如没谈过恋爱，对建立亲密关系感到忧虑甚至恐惧；比如论文答辩，通不通过由导师决定，也会感到忧虑。\n我们还是得多经历经历，提升自己，才能以更成熟的心态去面对未知和不可控。", "filename": "2022-08-28-anxiety-of-the-unknown-and-uncontrollable.md"}, {"id": 373, "text": "\ndate: 2022-10-23 21:04:50+08:00\nlayout: post\ntitle: 西湖梦寻\ncategories: 随笔\ntags: 旅游\n\n吃饭的时候问同事，杭州有什么好玩的？\n年轻的杭州同事说没啥好玩的，有个小河直街还可以。年长的同事说杭州好玩的地方可多了，我推荐你看看《西湖梦寻》。\n于是我搜了《西湖梦寻》这本书。这是明末清初的散文家张岱写的《散文作品集》，以西湖边的各种景点为主题。\n张岱是“浙东四大史家”之一，另外几位是海宁的谈迁、查继佐还有宁波的万斯同。\n我打算也以《西湖梦寻》为题，记录下我在杭州的一点游历经过。\n2022-10-23\n往市三医院皮肤科复诊。出来后看地图，发现南边便是五柳巷，摸索到一条桥下的河边小路往南而行。五柳巷保留了老底子的一些一层或两层的房子，里面都有住户，比较有生活气息。这种房子在海宁也能找到很多，但这毕竟是杭州的市中心，显得比较稀有。\n到中午11点25了，发现路边有一家面店，叫酒鬼面馆。我想来碗腰花面，有腰花拌川、腰花面两个选项。老板娘说拌川就是干的炒面。我还是吃汤面吧。28元，料作还挺足的。\n吃好后往西南就是河坊街、南宋御街。河坊街往西行便到了西湖。河坊街自古就是杭州的商业中心，里面有各种店面。我看到一家药店门口有个小伙子穿着白大褂，留着和毛不易一样的发型，我就想，如果护理专业的毛不易不当歌手，可能也会这样在药店或者医院工作。\n沿西湖北上，再往东，到了延安路。延安路是杭州规模最大的商业街，北起武林广场，南到吴山广场。由于有点累了，我骑车到凤起路地铁站，就乘地铁回家了。", "filename": "2022-10-23-travels-around-west-lake.md"}, {"id": 374, "text": "\ndate: 2022-10-23 10:40:50+08:00\nlayout: post\ntitle: 从工作了解到的些许东西\ncategories: 随笔\ntags: 工作\n\n我正式参加工作也一年半多了，在这里写一些我的感受。\n认识社会分工下的工作\n我常常会思考，人为什么要加入一个公司去工作，人一个人能解决自己的生存问题，其它时间想干啥就干啥不也挺好吗？比如一个小国寡民的农村，大家自己种菜养殖吃饭，自己砍树做家具。\n但这样并不符合大一统社会下社会大分工的需要。在这样的背景下，人被要求掌握一项专一的技能，三百六十行，行行出状元。\n职业可以分为多个类型^baidu：\n\n技能型，比如理发师\n事务型，比如会计\n研究型，比如程序员\n艺术型，比如演员\n经营型，比如销售\n社交型，比如教师\n\n我们可以凭借着自己的能力自己单干。但大多数时候，我们需要在一个集体里工作，这样能最大化我们的工作效率。\n随着远程工作的兴起，以个人为单位寻找工作的机会也越来越多。但目前来看，在国内的一个公司或者组织工作会更有保障一点。\n不局限于自己公司\n工作一段时间后可能发现技术遇到发展瓶颈，同事的水平也有限。这时候一个是得发现身边人的优点，发现工作中值得改进和提升的地方，另一点就是不要只局限于自己公司，可以向外看一看。比如我们写软件，其实是站在世界的舞台上，可以多参与一些开源项目或者技术组织。\n当然换公司是最直接的办法。\n工作的认同感、责任感与效能感\n在公司内部，可能也存在较明显的分工。有时很难从全局去了解自己工作的意义。这时可以自己去多想一想，为什么要做手头的工作，怎么做得更好。\n如果发现是上层的决策错误，导致做了不必要的或者不对的工作，我觉得可以提出建议。如果与领导意见不合，暂时相信领导是对的。如果真的觉得这样做不好，我可能就打算换工作了。\n工作与个人发展\n我们除了希望从工作中获得报酬，还希望提高自己的技能，实现个人的发展。我们可以有意识地将工作和个人发展关联起来，知道目前的工作是符合自己的长期规划的，那么工作的动力会更高。\n关心他人，学会合作\n人往往只关心自己的事情，在工作中只做好自己的工作。但人又希望自己的工作受到他人的关注。Harvard Business Review便提到，可以多问下同事在做什么，做得怎么样了[^hbr]。\n如果同事存在合作关系，可能会存在很多交流，但也会造成冲突。所谓文人相轻，在其它行业也是存在这样的现象的。这时我们还是要求同存异，努力把工作做好。\n业余生活\n有人说工作就是拿时间换钱，对于大多数工作，的确是这样。比如理发，理多少头就有多少钱。人生来就是要不断地吃来维持生命，这是无止境的。\n但我们毕竟不是全部的时间都用于工作，可以在业余生活丰富自己，提升生命的价值。\n希望以后一周能只工作四天。\n参考资料\n[^hbr]: The Surprising Power of Simply Asking Coworkers How They’re Doing", "filename": "2022-10-23-what-I-have-learnt-at-work.md"}, {"id": 375, "text": "\ndate: 2022-11-23 23:00:50+08:00\nlayout: post\ntitle: 日常生活中的经验教训\ncategories: 随笔\ntags: \n\n总结下日常生活中的经验教训，想到一条写一条，如果多了就做个分类。\n\n天气冷的时候，如果因为运动或者其它情况觉得热了，不要一下子把衣服都脱了。像我上班时因为公司里比较热，我就只穿一件短袖，结果气温逐渐降低了，等我觉得冷的时候已经有点着凉了。小时候洗热水澡洗好，长辈让我赶紧穿衣服，也是这个道理。\n抽血的时候不要直视采血过程，容易晕血。晕血时，眼前发黑，出虚汗，需要平躺。如果怕晕血，体检时可以跟护士讲下躺着抽血。\n注意生活中的棱角。经过桌角、墙角、门这样边缘尖锐的东西时，要注意不要摔倒，以免磕到上面。我小时候吃饭，不小心下巴磕到桌角，直接就磕穿了皮肤。\n", "filename": "2022-11-23-everyday-life-lessons.md"}, {"id": 376, "text": "\ndate: 2022-11-01 19:24:50+08:00\nlayout: post\ntitle: 唱歌\ncategories: 随笔\ntags: \n\n三年多前刷创造101和杨超越视频时写过一篇《跳舞》，今天打算写一下唱歌。\n歌曲是一种歌词与曲谱结合的艺术形式，由人来进行演唱。唱一首歌曲，和用乐器演奏一首乐曲一样，能获得演绎音乐的快乐，另外也能像阅读诗文一样，感受到文字的魅力。\n几周前，我跟着同事去KTV唱歌。我其实从来不去KTV，上次去还是大学毕业的时候。\n一个人唱歌，和一群人去唱歌有什么不同？其实差别不大，大家都是点自己想唱的歌。但我总想做点不一样的事情，比如唱一些大家没听过，但听了会觉得很好听的歌，比如用方言唱歌。不过后来我发现，还是唱大家熟悉的歌曲最能触动人。\n同事点的歌有些我没听过或者没完整了解过，这时我会认真地看歌词。发现有很多歌，虽然旋律很熟悉了，但歌词传达的意思我之前并没有去深入了解。可能也是很多歌曲都是恋爱题材的，以前没有这种经历，体会不深。\n最近看周淑怡看不同年代的歌曲排行榜的视频，发现我原来听过这么多歌。周姐的观众的确多，有些视频的播放量甚至比原作还要多。在《山路十八弯》出现的时候，有很多条弹幕刷蔡明的售楼处小姐的小品。以前大家的共同记忆真的比现在多很多。\n下面是我的几段录音。\n《宁夏》，这首歌比较悠闲，可以用吴语方言翻唱。\n\n\n\n《亲爱的那不是爱情》，这首歌的旋律高低起伏，很有感觉。歌词也用了很多耳目一新的比喻，比如日子像旋转木马。\n\n\n\nTimo Tolkki的《The Letter》，歌曲悠扬简单，有古典音乐的基础。大二时听雨BBS的音乐版里蓝叶分享的。似乎是母亲写给孩子的信。\n\n\n", "filename": "2022-11-01-singing.md"}, {"id": 377, "text": "\ndate: 2022-01-15 19:15:50+08:00\nlayout: post\ntitle: 古墓丽影与人生选题\ncategories: 随笔\ntags: \n\n古墓丽影9的开头，劳拉以旁白的形式说了下面这段话。\n\nA famous explorer once said, that the extraordinary is in what we do, not who we are. I’d finally set out to make my mark; to find adventure. But instead, adventure found me.\n译： 一个著名的探险家说过，人之所以能非比寻常，是因为他做的事情，而不在于他是什么人。我终于出发去留下我的痕迹，去探险，但危险却先找到了我。\n\n劳拉和团队前往龙三角寻找邪马台，遇上暴风雨，漂泊到了一个岛上，之后经历了各种事件，为了果腹而射杀野鹿，为了自卫而杀人。最终劳拉打败了卑弥呼，解救了自己的姐妹。\n在游戏中，劳拉的选择很多都是形势所迫，是被动地前进，但最终完成了一次非常精彩的冒险。\n普通人的人生似乎很难像游戏中的故事一样出彩。没有外界因素的推动，自己也想不出什么好的事情可做。\n平时双休日的时候，会想该找点什么事情做，不然就是一张白纸，不留下半点墨水。\n古墓丽影10的开头，劳拉的父亲说了下面这段话：\n\nAs children, we question the world around us. We learn. We accept. And gradually, we lose our capacity for wonder. But some do not, like the explorers, the seekers of truth. It is these pioneers, who define the future of mankind.\n年幼时，我们对世界充满疑问。我们学习，接受，渐渐地失去了疑问的能力。但有的人并没有，比如探险家、真理的追寻者。正是这样有开创精神的人，铺就了人类的未来。\n\n或许，我们需要重拾疑问的能力，找到问题，并将其作为人生的选题，在世上留下一段新的篇章。", "filename": "2022-01-15-tomb-raider-and-topic-selection-of-life.md"}, {"id": 378, "text": "\ndate: 2018-11-26 17:29:50+08:00\nlayout: post\ntitle: Sphinx文档的本地化\ncategories: 技术随笔\ntags: 技术写作\n\n如何本地化Sphinx的步骤我参考官网写在此处：\nhttps://sphinx-apidoc.readthedocs.io/zh_CN/latest/more/i18n.html\nSphinx会对要翻译的内容进行提取，然后存储为po文件。其中代码、图片等directives的内容会被忽略。这点比okapi转换markdown文件为po文件要做得好。\n在本地的Sphinx项目运行以下命令可以生成对应的语言版本：\nmake -e SPHINXOPTS=\"-D language='en'\" html\n但是要翻译的内容往往不只是文字，还有图片等内容。这样修改源文件中图片的链接对象是件挺难维护的事情。\n而readthedocs的做法是，不同的语言版本享有一个独立的仓库。这样，不同仓库可以存放同样文件名，但显示的语言不一样的文件。\n2022/06/04更新：\n在使用中遇到一个模糊匹配（fuzzy）翻译没有被替换的问题，需要启用使用模糊匹配的翻译。具体见这个issue：Support for fuzzy translations", "filename": "2018-11-26-localizing-sphinx-projects.md"}, {"id": 379, "text": "\ndate: 2022-11-01 19:05:50+08:00\nlayout: post\ntitle: 工作日请假\ncategories: 随笔\ntags: \n\n工作日请假，往往是因为需要去处理事情，像照顾亲人、预约专家医生看病等等，需要暂时放下手头的工作。\n疫情期间，意外的情况也更多，像健康码无端变黄，进不了办公楼便只能先请假或者远程办公。\n平时健康码都是绿的，出行不受限制所以也不觉得怎样。但有一天我健康码变黄的时候，才感受到处处受限是多么让人心急的事情。同事们能正常上班，只有自己在打电话给社区进行申述。但一回生二回熟，再遇到这样的情况便也知道该怎么应对了。\n其实工作日放假给了我们生活一点变化。我们可以暂时把注意力从工作中移开，思考和尝试一些其它事情。", "filename": "2022-11-01-workday-leave.md"}, {"id": 380, "text": "\ndate: 2022-12-03 21:14:50+08:00\nlayout: post\ntitle: 平凡之美\ncategories: 随笔\ntags: \n\n周末的时候去商场剪头发，顺便逛了一下。浏览了超市货架上的各种食物、日用品，服装店的各种衣服。突然有种小时候放学，跟着爸妈一起逛菜场逛商场的感觉。\n生活是平凡的，柴米油盐买汰烧，但正是这样普通的日常给人踏实和亲切的感觉。我们留心观察，就能感受到平凡的美。\n商场快剪的阿姨，一天要剪上百的头，但我能感受她通过自己的技能谋生的热情，这是一种平凡的美。\n女生，虽然身材相貌一般，但有的热情开朗、有的拘谨可爱，透着平凡而又独特的美。\n男生，虽然送着外卖，但遵守规矩，待人礼貌，平凡但有尊严。\n平凡都是细节，体现在生活的点点滴滴，这里就不多叙述了。", "filename": "2022-12-03-the-beauty-of-the-ordinary.md"}, {"id": 381, "text": "\ndate: 2022-12-22 19:46:50+08:00\nlayout: post\ntitle: 新冠患病记\ncategories: 随笔\ntags: \n\n疫情管控放开后，在杭州的我也不幸中招了，12月20日的单管核酸检测结果呈阳性。\n18号，周六的时候，我去边上的商场理发，顺便吃饭，可能就是在那里感染的。周六下午我还在户外跑步，当天最低温度有零下，我跑了3KM，但没有及时回家，在外面停留了段时间，还给公园的猫拍照，有点着凉，可能也给了病毒以可乘之机。\n周日一切正常，但晚上睡觉的时候觉得气管有点疼，我在背后垫了张毛毯，把身体抬高后就不觉得不适了，也就没怎么在意。\n19号周一去上班，发现很多同事阳性了，我也有点担心，吃饭时叫同事不要跟我坐太近。到下午感觉有点发烧了，怕冷。这种感觉其实和普通的风寒感冒类似，正好这两天降温，我以为是着凉导致的感冒。根据经验，感冒就要躺平休息，怕冷就多穿衣服，下班后我就直接躺床上了。\n第二天请假继续躺着休息，到下午感觉就没有那么怕冷了，最难受的时候应该已经过去了。正好小区有做核酸，我也去做了下检测。我想这感冒症状这么轻，要是新冠也这样就好了，结果晚上结果出来还真是新冠。\n21号和22号继续休息，虽然没什么症状，但还是比较虚弱。早上起来流的鼻涕会比较浓，应该是晚上免疫系统和病毒的战斗比较厉害。\n之后两天咳黄痰，我看网上说是细菌感染，吃了两天头孢后痰就少多了。\n生病了也不能光躺着，我看天气好就会去小区和公园转一圈。引体向上不敢多拉，就拉个五个。然后打下太极拳。\n26号是工作日，我恢复得还行，先开始了远程上班。\n就这样上班到元旦假期，3号测了下抗原是阴性，这个时候流鼻涕和咳嗽的症状基本都没有了，人也精神多了，元旦上来就去公司上班了。\n一开始上班会比较累，估计是身体还不适应，第二天觉得状态好了一点。花了两周时间差不多恢复到了之前的状态。", "filename": "2022-12-22-experience-of-covid-19-infection.md"}, {"id": 382, "text": "\ndate: 2018-07-20 21:07:50+08:00\nlayout: post\ntitle: 健康坐班\ncategories: 随笔\ntags: 健康\n\n最近过起了朝9晚5的上班族生活，早上7点半起在学校吃饭，然后乘848到丰台上班。公交在早高峰走京开高速有公交车道，速度挺快的，40分钟就到了。不过没座的时候站立时间比较久，膝盖容易酸，一般站立时膝盖微微弯曲10度会比较舒服。\n办公室的环境还是不错的，1.5米高隔板分开一个一个工位，空调很凉快。配的椅子不错，比较符合人体工程学，腰部有突出的支撑，靠背很高，有给头和脖子靠的地方，也有肘关节的支撑。标配的显示器是联想l2021wa，20寸的雾面CCFL背光液晶显示器。因为顶上的日光灯很多，也没有搞成面光源，容易反光。我之前带x62去上班，反射屏的反光严重，看着很累。\n我还买了瑕疵版的富士通反射屏，带原版保护玻璃，但这保护玻璃不是完全磨砂，而且瑕疵严重，不能开前光使用。另外还有用x62连接显示比例不正确的问题，我给乐华v56驱动板刷新固件，然后用遥控板输入1147进工程模式都没有解决。所以还是工位上这种大屏的雾面显示器护眼。\n坐姿的话，网上有很多指导，比如这张图：\n\n我们上午下午会放广播体操和眼保健操，但没人做。平时做久了也要多活动活动，眼睛望向远方。", "filename": "2018-07-20-healthy-sitting-in-the-office.md"}, {"id": 383, "text": "\ndate: 2022-01-14 21:21:50+08:00\nlayout: post\ntitle: 当工作就是写博客\ncategories: 随笔\ntags: \n\n2021年我只写了两篇博客，一个原因或许是我现在的工作就是给公司写博客。\n我在Dynamsoft当技术写作已经快一年了，写了30多篇博客。Dynamsoft最初成立便旨在为开发者提供SDK，目前有文档扫描、条码扫描这两个主要的产品。新开发的产品有文字识别和文档结构分析SDK。之前还有版本控制、移动端文档扫描SDK，已经停止开发。\n我给公司写博客，主要目的是让用户快速发现和了解产品，并最终选择我们的产品。\n下面我讲下我们公司的主要产品和我就这些产品写的文章。\n文档扫描\n我之前在出版公司实习时，经常帮助编辑将手稿用手机拍下来，交给美术编辑调整排版。做翻译时，也需要把纸质文件拍下来OCR后再用计算机辅助翻译软件进行操作。我当时觉得一张张拍照太麻烦了，建议公司买台扫描仪。所以我对做扫描软件的Dynamsoft还是挺感兴趣的。\nDynamsoft有两个扫描SDK，一个是.NET TWAIN，一个是Web TWAIN。TWAIN是扫描仪用的一个通讯协议，Windows有提供TWAIN相关的接口。.NET TWAIN是对这一接口的.NET封装，而Web TWAIN提供了通过网页调用扫描仪的接口。Web TWAIN早期使用ActiveX，现在是通过WebSocket和在客户机本地跑的服务通讯来进行扫描。它主要由本地服务和JS库组成。文档的获取、缓存、保存、后处理都通过本地服务操作，交互界面呈现在浏览器里。后来又基于WebAssembly将功能移植到手机上，不用扫描仪，改用摄像头，不需要本地服务，但会受到Web端的制约，比如存储、摄像头分辨率等问题。\nWeb TWAIN基于Sane和ICA等项目实现了在Linux和macOS上运行。但不同操作系统上的Web API都是相同的。\n针对Web TWAIN，我写过下面这些内容。\n\n基于摄像头功能开发Web文档扫描应用\n将扫描的文档保存到剪贴板、网盘或者发送电子邮件\n用流行的Web框架开发文档扫描应用\n网络扫描仪的发现与扫描（Sane Network, eSCL、Zeroconf、DWT）\n在嵌入式Linux设备上部署远程扫描服务\n\n条码扫描\n大一时写过一个叫听雨书房的图书漂流安卓应用，可以用ZXing扫描图书的条码，通过豆瓣API查询图书的信息。所以我对条码SDK也有使用经历。\nDynamsoft的条码扫描SDK（Dynamsoft Barcode Reader，简称DBR）是基于传统图像处理实现的，毕竟条码是一种人为制定出来的内容，符合规则，不需要用深度学习来处理。它基于C++开发，并提供了各种语言和平台的封装。\n条码识别是难度较大的一个图像处理应用。DBR会运用各种图像处理方法进行识别，并能让用户调整参数。它将参数保存成一个JSON文件，用户可以通过传入JSON文件来修改参数。参数内容涉及二值化、码区预检测、定位方法、图像预处理（平滑、缩放）等等。\n条码扫描可写的内容较多。我写了这些内容。\n\nDBR与某个语言的结合使用，就有DBR+Java、DBR+JavaScript等。\n对某个码的识别效果的评测或者优化方式，就有高版本二维码的识别、二维码识别基准测试等文章。\nDBR与跨平台开发的结合，有DBR+B4X、DBR+JavaFX、DBR+React Native、DBR+Capacitor、DBR+Cordova。\n条码扫描和通过摄像头获取图像紧密结合，于是又有了安卓CameraX、公司的DCE摄像头模块、远距离扫码、安卓USB摄像头等文章。\n为了了解条码扫描原理，知道为什么会误解条码，从头实现了EAN13的定位和解码\n其它还有动态二维码传文件、SVG画识别的码区、分布式解码、动态检测等文章\n\nOCR\n在深度学习规模应用之前，OCR软件几乎都是一家独大，深度学习出来后，基于开源项目做特定领域的OCR对小公司来说似乎也是能做到了。我自己做漫画OCR软件，在这方便也有体会，个人训练的DB文字检测和CRNN文字识别模型在处理日语漫画时已经有了不输商业软件的效果，一个缺点就是优化不足，模型大，推理速度慢。OCR的研发对于一家小公司来说其实存在资源不足的问题，一般基于开源项目起步更容易。\nDynamsoft的OCR产品定位是提供灵活的参数设置，能满足不同场景下文字识别要求的SDK。因为公司还有其它优势产品，公司希望这些产品能互相结合，比如利用条码定位信息确定要识别的文字区域。\n这一产品我只写了OCR图像预处理一篇文章。\n感受\n写了一年博客，能感受到我对内容的组织能力有提升，涉猎的技术领域也宽广了很多。也会有选题困难的时候，但确立一个可行的选题后，有一个写代码、试验和写作的阶段，工作就相对稳定。\n和单纯的写文档和翻译相比，似乎更有创造性，也不用花大精力配合开发人员工作。", "filename": "2022-01-14-job-as-a-blogger.md"}, {"id": 384, "text": "\ndate: 2022-08-14 16:41:50+08:00\nlayout: post\ntitle: 最终幻想7重制版中的爱丽丝\ncategories: 随笔\ntags: \n\n\n升Fa，升Do，爱丽丝的主题曲似乎能带人进入一个神秘而美好的梦境。\n最近在B站上看最终幻想7重制版游戏的视频，里面最吸引我的角色是爱丽丝。她明媚活泼又主动，给人一种心动的感觉。\n游戏的第八章重逢之花和第九章欲望之地主要是主角克劳德和爱丽丝两人一起完成任务。\n第八章，克劳德坠入教堂，落在爱丽丝种的花上面。醒来后，发现爱丽丝正看着他，两人互相做自我介绍，爱丽丝是之前的卖花女。突然神罗公司的人来抓爱丽丝，爱丽丝请克劳德做她的保镖，报酬是一次约会。摆脱神罗公司的人后，克劳德护送爱丽丝回家。他们沿着屋顶边走边说，一直走到爱丽丝的家。克劳德要回第七区贫民窟，爱丽丝说要一起去，爱丽丝妈妈说已经晚了，可以第二天再出发。爱丽丝不在时，爱丽丝妈妈对克劳德说希望他独自离开。\n第九章，克劳德晚上偷偷溜走了，但路上却碰到早早等着的爱丽丝。爱丽丝说想多跟克劳德在一起。前往第七区贫民窟会经过第六贫民窟。第六区贫民窟有一个围墙商店街，里面有各种灰色产业。爱丽丝带克劳德走捷径直接前往第七区，之后在一个公园碰到蒂法。知道蒂法要去第六区调查古留根尾后，两个人便决定去帮助蒂法。爱丽丝和克劳德完成重重任务，和蒂法一起成为了古留根尾的新娘候选，并问出了他受谁的委托，要做什么。\n最终幻想7重制版的细节非常丰富，克劳德和爱丽丝有很多有意思的互动。但两人在8、9章在一起的时间其实也就两天而已，两个人的糖还是太少了。\n游戏的情节很多都是理想化的，很多在现实是进行不了的。就比如克劳德偷偷溜走，爱丽丝要追上他并等着他，放现实里，茫茫人海，晚了一分钟可能就再也追不上了。另外对克劳德这一个陌生人，一般人很难像爱丽丝这么主动，或者说很少像克劳德这么有魅力，也没有处在游戏设定的环境。\n但这或许也是游戏的魅力吧，在现实中不可能的事情，只有在游戏中去实现了。", "filename": "2022-08-14-aerith-in-final-fantasy-7-re.md"}, {"id": 385, "text": "\ndate: 2023-02-04 19:51:50+08:00\nlayout: post\ntitle: 客观事物与人为事物\ncategories: 随笔\ntags: \n\n作为程序员，通常需要使用编程语言调用各种API接口来完成任务。为了熟悉这些人为制定的东西，需要花费大量的时间。而一旦技术更新，之前的努力可能都是白费功夫。我时常有这样的担心，觉得学习和掌握人为事物不如多了解一些客观事物。客观事物的规律往往是不变的，知道就是知道，不用担心会过期。\n但其实，人为事物也是在遵循客观事物的规律的情况下被制作出来的。它反映了人对客观事物的认识和运用。我们在学习运用人为事物的时候，其实也对客观事物有了一定的了解。只是计算机的体系过于庞大，我们很难有直接的对客观事物的认知。\n使用人为事物，我们才能更好地利用和了解客观事物。随着对客观事物的了解，我们也能更好地制作出人为事物。\n像之前一篇文章讨论过的，人在社会上的分工不同，有人专注科学，有人专注技术和工程。\n了解我们自身的定位后，才能更踏实地去学习和运用人为事物和客观事物。", "filename": "2023-02-04-natural-objects-and-man-made-objects.md"}, {"id": 386, "text": "\ndate: 2022-08-14 16:04:50+08:00\nlayout: post\ntitle: 乱马1/2\ncategories: 随笔\ntags: \n\n最近发现B站上有人在上传乱马1/2的视频，我便重新回顾了下我中学时因为林原惠美看过的这部动漫。\n大致剧情是这样的：乱马和父亲会到各地练习格斗，结果在中国咒泉乡坠入了泉水，此后乱马淋冷水会变成女人，淋热水会恢复成男人。父亲和天道家早先约定了乱马和天道家的女儿的婚约，在第一集带着变成女人的乱马拜访天道家，并借住在天道家中。天道家的三个女儿中，小女儿天道茜喜欢格斗，年龄也和乱马相仿，按照父亲的约定，成为了乱马的未婚妻。为了推进乱马和小茜的感情，父亲们让他们一起上学（高一）。之后，乱马的100多集内容就在这样的背景下展开。\n乱马的热斗篇比较冗长，不如前面18集那样在较短篇幅内介绍了漫画的主要人物，并完成了主角关系的升温。乱马和小茜的日常交互让我想起了我高中时的经历。\n比如在第九集，良牙和乱马的搏斗不小心剪断了小茜的长发。这促使小茜决心留短发，并和过去说再见。而乱马对此感到内疚。于是小茜趁乱马不注意，让他失去平衡落入水中，减轻他的犯罪感。\n\n我便想起我高中时候不小心把自行车锁锁在了别人的自行车上，隔了一天才发现，正好车主也来了，是个女生。她大声地说了我一顿，我却觉得很痛快，不会有很强的做错事的感觉。我们反而因这件事而结识。\n正是这样的联系，让我觉得乱马1/2特别有吸引力。\n除此以外，乱马1/2对角色的表情刻画、配乐、配音也都很出彩。我看到一个评论说：“阿婆主，你已经是我下班唯一的盼头了”。看一集乱马也成了我下班后的一个盼头了。", "filename": "2022-08-14-ranma-one-half.md"}, {"id": 387, "text": "\ndate: 2018-02-14 22:41:50+08:00\nlayout: post\ntitle: 回到高中看动画时\ncategories: 随笔\ntags: \n\n作为一个90后，我是幸运的，童年时电视上不仅有国产的《舒克和贝塔》、《葫芦娃》等经典动画，还有《名侦探柯南》、《新世纪福音战士》等引进的日本动画。动画占了我生活的很大一部分，也给当时的我进行了启蒙教育。\n而长大后，我开始自己在网上寻找动画。高一的寒假，我成了一个柯哀的CP党，看了不少相关集数和同人文、分析文。因为灰原哀，了解了她的声优——声优女王林原惠。当时在优酷上可以找到一个介绍林原惠的视频，里面收录了很多她的代表作品。我当时对绫波丽有似曾相识的感觉（小时候看的已经没什么印象），便去看了eva，于是又进了一个坑。以后的一整个暑假，每晚听eva的动画和古典乐睡觉。巴赫的G弦上的咏叹调、cantana bwm 147、帕卡贝尔的D大调卡农还有贝多芬的第九章以及鷺巣詩郎为eva编的各种音乐。鷺巣詩郎还是《死神》的作曲家。\n再到暑假时，我又开始看《乱马1/2》，高桥留美子的搞笑恋爱作品，还有《三只眼》等。\n高中时星空卫视上放《火影忍者》、《龙珠Z》还有《圣斗士星矢》，我也在网上都给它看了个齐全。\n最近又在重温柯南了。柯南的篇幅很长，连载已经22年了，里面的角色都很丰满，但对于喜欢灰原哀的我来说似乎还是看不够。这点在《火影忍者》上也是一样，鸣人好不容易这么厉害了，结果一场大战后就完结了。\n这次看时，有感柯南体现出来的无所不知和与侦探团一起时鼓舞孩子们的积极心态，觉得自己成为柯南还真不容易。而灰原哀还是我的梦中情人啊。", "filename": "2018-02-14-my-anime-experience-back-to-early-2010s.md"}, {"id": 388, "text": "\ndate: 2023-02-04 20:09:50+08:00\nlayout: post\ntitle: 认识自己\ncategories: 随笔\ntags: \n\n认识自己并不是一件容易的事情。\n我们加入一个新的集体，认识一个新的人，可能都会需要做自我介绍。一般介绍自己的过往、兴趣爱好、客观条件、星座等等。这些是相对客观的事情。\n我们难以认识的往往是平时不易表露，只有遇到事情才会出现的自己。此外，人对人体自身的认识其实也非常有限。\n认识自己，一个是对客观的人这类存在的通用的认识，一个是对具体的自我的认识。\n通用的认识，比如发现右下腹疼痛，怀疑是阑尾炎，比如知道人对金钱的欲望。\n对自己的具体的认识，比如知道自己喜欢某个人，比如喜欢做什么工作。\n而像喜欢某个人会有什么表现这样的事情，可能存在人的共性（通用认识），也有自己的特性（对自己的具体的认识）。\n认识自己不仅需要了解自身，还需要有一定的对世界的认识。\n认识自己是需要实践的。我们可以抽一段时间问自己一些问题，比如什么是你想做的事情。但单纯的想象往往过于理想，还是要付诸行动，撞到南墙才知道之前的想法是否适合自己。\n很多事情，是需要多个人共同完成的，比如谈恋爱。谈恋爱是彼此了解的过程，也是认识自己的过程。\n另外，人是会发展的，我们对自己的认识也需要不断更新。", "filename": "2023-02-04-know-yourself.md"}, {"id": 389, "text": "\ndate: 2023-02-12 11:46:50+08:00\nlayout: post\ntitle: BBCode解析\ncategories: 技术随笔\ntags: \n\n一行文本，可以包含多种文字样式，比如粗体、斜体和颜色，这个叫富文本。\n富文本的表示和编辑不是件容易的事情。一种比较简单的方法是使用BBCode。\nBBCode是Bulletin Board Code的缩写，被用于论坛等程序中用于表示富文本。\n它使用方括号表示标签。标签如果有属性，通常跟随在标签名后面，用等号连接。标签可以嵌套。\n比如下面这个BBCode的示例：\n[b]Hello [i][color=#ff0000]world[/color][/i][/b]!\n可以得到下面这样的效果：\nHello world!\n本文会使用B4J编写一个简单的BBCode解析器，可以处理粗体、斜体和颜色标签。\n\n定义一个TextRun类型，包含所包含文本、粗体、斜体和颜色等属性。\n\nvb\n   Type TextRun(text As String,bold As Boolean,italic As Boolean,color As String)\n\n建立一个BBCodeParser类，并添加一个解析文本的公开方法和一个解析TextRun的内部方法。解析的结果是TextRun列表。如果文本的bbcode有误，则不解析。这里的验证方法比较简单，只比较标签对数量和名字对不对。\n\n```vb\n   Sub Class_Globals\n       Private supportedBBCodes As List = Array As String(\"b\",\"color\",\"i\")\n   End Sub\n   Public Sub Parse(str As String) As List\n       Dim run As TextRun\n       run.Initialize\n       run.text = str\n       If validBBCode(str) Then\n           Return ParseRun(run)\n       Else\n           Return Array(run)\n       End If\n   End Sub\nPrivate Sub ParseRun(run As TextRun) As List\nEnd Sub\nprivate Sub validBBCode(str As String) As Boolean\n       Dim count As Int = 0\n       Dim matcher As Matcher = Regex.Matcher(\"[/?(.*?)]\",str)\n       Do While matcher.Find\n           Dim match As String = matcher.Group(1)\n           If match.Contains(\"=\") Then\n               match = match.SubString2(0,match.IndexOf(\"=\"))\n           End If\n           If match.Contains(\"[\") Or match.Contains(\"]\") Then\n               Return False\n           End If\n           If supportedBBCodes.IndexOf(match) <> -1 Then\n               count = count + 1\n           End If\n       Loop\n       If count > 0 Then\n           If count Mod 2 = 0 Then\n               Return True\n           End If\n       End If  \n       Return False\n   End Sub\n   ```\n\n实现ParseRun方法。\n\n具体步骤如下：\n\n从左开始遍历单个字符，如果检测到[，截取[到下一个]的标签内容。如果没检测到，则将文本存入一个StringBuilder。\n如果截取到的标签是支持的BBCode，截取完整的标签对包含的内容，新建一个TextRun，设置其对应的格式属性，将字符index移到该标签对结束位置。TextRun的文本为该标签对文本，但不包含标签本身。如果StringBuilder有内容，在新建一个富文本TextRun之前，先建一个纯文本的TextRun。\n一个TextRun里面可能还包含标签，使用递归进行解析，直到不包含标签为止。\n遍历结束后，如果StringBuilder不为空，添加一个纯文本TextRun。\n\n代码：\n```vb\n   Private Sub ParseRun(run As TextRun) As List\n       Dim runs As List\n       runs.Initialize\n       If run.text = \"\" Then\n           Return runs\n       End If\n       Dim str As String = run.text\n       Dim plainText As StringBuilder\n       plainText.Initialize\n       For index=0 To str.Length-1\n           If CurrentChar(str,index)=\"[\" Then\n               Dim tagContent As String = TextUntil(\"]\",str,index)\n               Dim codeName As String = GetBBCodeName(tagContent)\n               If codeName <> \"\" And tagContent.Contains(\"/\") = False Then\n                   Dim text As String = plainText.ToString\n                   If text <> \"\" Then\n                       runs.Add(CreateRun(text,run,\"\",\"\"))\n                   End If\n                   plainText.Initialize\n                   Dim endTag As String = \"[/\"&codeName&\"]\"\n                   Dim runText As String = TextUntil(endTag,str,index)\n                   If runText<>\"\" Then\n                       index = index + runText.Length - 1\n                       runText = CodePairStripped(runText,tagContent,endTag)              \n                       Dim richRun As TextRun = CreateRun(runText,run,codeName,tagContent)\n                       Dim innerRuns As List\n                       innerRuns.Initialize\n                       parseInnerRuns(richRun,innerRuns)\n                       runs.AddAll(innerRuns)\n                   End If\n               End If\n           Else\n               plainText.Append(CurrentChar(str,index))\n           End If\n       Next\n       Dim text As String = plainText.ToString\n       If text <> \"\" Then\n           runs.Add(CreateRun(text,run,\"\",\"\"))\n       End If\n       Return runs\n   End Sub\nPrivate Sub parseInnerRuns(run As TextRun,runs As List)\n       Dim parsedRuns As List  = ParseRun(run)\n       If parsedRuns.Size = 1 Then ' no tags\n           runs.Add(parsedRuns.Get(0))\n       Else\n           For Each innerRun As TextRun In parsedRuns\n               parseInnerRuns(innerRun,runs)\n           Next\n       End If\n   End Sub\n'[b]Hello [i]world[/i][/b] -> Hello [i]world[/i]\n   Private Sub CodePairStripped(runText As String,tagContent As String,endTag As String) As String\n       runText = runText.Replace(tagContent,\"\")\n       runText= runText.Replace(endTag,\"\")\n       Return runText\n   End Sub\n'text:[color=#ff00ff]Red[/color],codeName:color,tagContent:[color=#ff00ff]\n   private Sub CreateRun(text As String,parentRun As TextRun,codeName As String,tagContent As String) As TextRun\n       Dim run As TextRun\n       run.Initialize\n       run.text = text\n   If parentRun.IsInitialized Then\n       run.bold = parentRun.bold\n       run.color = parentRun.color\n       run.italic = parentRun.italic\n   End If\n\n   If codeName = \"b\" Then\n       run.bold = True\n   else if codeName = \"i\" Then\n       run.italic = True\n   else if codeName = \"color\" Then\n       run.color = ParseColor(tagContent)\n   End If\n   Return run\n\nEnd Sub\n'parse [color=#ff0000] and return the rgb value 255,0,0\n   private Sub ParseColor(tagContent As String) As String\n       Try\n           Dim hex As String\n           hex = tagContent.SubString2(tagContent.IndexOf(\"=\")+1,tagContent.Length-1)\n           Dim r As Int = Bit.ParseInt(hex.SubString2(1,3), 16)\n           Dim g As Int = Bit.ParseInt(hex.SubString2(3,5), 16)\n           Dim b As Int = Bit.ParseInt(hex.SubString2(5,7), 16)\n           Return r&\",\"&g&\",\"&b\n       Catch\n           Log(LastException)\n       End Try\n       Return \"\"\n   End Sub\nprivate Sub GetBBCodeName(str As String) As String\n       Dim matcher As Matcher = Regex.Matcher(\"[/?(.*?)]\",str)\n       If matcher.Find Then\n           Dim match As String = matcher.Group(1)\n           If match.Contains(\"=\") Then\n               match = match.SubString2(0,match.IndexOf(\"=\"))\n           End If\n           If supportedBBCodes.IndexOf(match) <> -1 Then\n               Return match\n           End If\n       End If\n       Return \"\"\n   End Sub\nprivate Sub TextUntil(EndStr As String,str As String,index As Int) As String\n       Dim sb As StringBuilder\n       sb.Initialize\n       Dim textLeft As String=str.SubString2(index,str.Length)\n       If textLeft.Contains(EndStr) Then\n           For i=index To str.Length - EndStr.Length\n               Dim s As String=str.CharAt(i)\n               If str.SubString2(i,i + EndStr.Length) = EndStr Then\n                   sb.Append(EndStr)\n                   Exit\n               Else\n                   sb.Append(s)\n               End If\n           Next\n       End If\n       Return sb.ToString\n   End Sub\nprivate Sub CurrentChar(str As String,index As Int) As String\n       Return str.CharAt(index)\n   End Sub\n   ```\n测试项目代码：\nhttps://github.com/xulihang/BBCodeRichText", "filename": "2023-02-12-bbcode-parser.md"}, {"id": 390, "text": "\ndate: 2023-01-23 16:23:50+08:00\nlayout: post\ntitle: 认识白癜风\ncategories: 随笔\ntags: \n\n白癜风(vitiligo)是一种色素性的皮肤疾病，表现为部分皮肤的黑色素脱失，变成白色。这个病不痛不痒，表面也没有鳞屑，不影响正常生活，但会影响外表，给人的心理和社会关系带来影响。世界上约1%的人群会患上这一疾病。白癜风的发病原因不明，存在多种可能因素，通常认为和自身免疫系统有关。它目前没有明确的根治方法，但有多种控制白斑进展和复色的方法。^wiki\n病期\n分为进展期和稳定期。稳定期的白斑不再扩大，且边界清晰。可以通过伍德灯和皮肤CT等手段确定。^guide\n分类\n主要分为节段型(segmental vitiligo)和非节段（寻常）型(non-segmental vitiligo)白癜风。节段型在单侧沿皮神经节段分布（也有沿Blaschko线[^blaschko]），不会过人体的中线。非节段型则可以发生在双侧，且往往对称分布。^guide\n如果面积小，且只有一块，不能确定是否为节段型，则分类为未定类型。如果同时存在节段型和非节段型，则分类为混合型，但这种类型的概率很低。\n节段型的白癜风通常发展趋势可以预测，但治疗的周期更长。节段型白癜风还通常累及毛发，造成白发病。节段型白癜风发展一两年后通常稳定，适合用黑色素细胞移植等手术方法治疗。[^hcp]\n治疗\n可以根据病期和分类综合运用以下方法进行治疗，以控制白斑发展和实现白斑复色：\n外用或内服：光敏剂、激素（卤米松）、钙调神经磷酸（他克莫司）、酶抑制剂、维生素D3衍生物、中医中药（白灵片）、JAK抑制剂（托法替布、鲁索替尼）等\n手术：自体表皮移植及黑素细胞移植\n光疗：使用紫外线进行光疗\n如果白斑面积过大，也可以选择脱色治疗，即让所有皮肤的黑色素都脱失（比如冯小刚），但这样平时需要做好防晒工作。\n病因与遗传概率\n白癜风的病因不明，目前存在多种设想，例如病毒感染[^viral]、情绪影响、化学物质影响、神经系统影响等等。但基本可以确定和免疫系统有关，例如甲亢的病人免疫系统混乱，会患上白癜风。\n白癜风在正常人中有大约1%的发病率。如果父母有白癜风，孩子得这个病的机率会提高，大约为4-5%。[^family]但其实其它疾病也会有遗传的影响，比如家族有癌症史的人有更高的患癌风险。后天的诱发因素对患上白癜风常常有更大的影响。\n节段型和非节段型白癜风的成因并不一致，遗传因素更低[^sv]。\n新冠病毒与白癜风\n患新冠会影响免疫功能，有人在感染新冠后患上了白癜风[^covid19]。\n白癜风患者的免疫功能通常被认为存在问题，但它一般跟皮肤有关，并不影响免疫系统战胜新冠病毒。[^covid19blog]\n白癜风的心理问题\n其实相比于癌症等其它疾病，白癜风是相当轻微的问题，仅仅是影响美观，虽然大面积的皮损亦会影响健康。\n患者患此病不必有太大的心理压力，心态的调节对白癜风的康复十分重要。\n相关资料\n\nImmediate treatment is necessary for Segmental Vitiligo\n健康密码白癜风系列节目：20140701，张书元谈白癜风、20150622，科学治疗白癜风、20150608，走出白癜风治疗的误区\n求问在北京看白癜风的医院，谢谢各位了\n关于白癜风遗传问题\n浅谈“白癜风病”其实不是“病”，是“现象”！\n\n参考文献\n[^blaschko]: A Case of Segmental Vitiligo Along Blaschko's Lines\n[^hcp]: Segmental vs Non-Segmental Vitiligo Treatment\n[^viral]: Viral causes of Vitiligo: A New Perspective for Vitiligo Pathogenesis\n[^family]: Will my children/family get vitiligo?\n[^sv]: 节段型白癜风的研究进展. 中国皮肤性病学杂志\n[^covid19]: Vitiligo following COVID-19: A case report and review of pathophysiology\n[^covid19blog]: Coronavirus and vitiligo", "filename": "2023-01-23-learn-about-vitiligo.md"}, {"id": 391, "text": "\ndate: 2023-02-15 21:12:50+08:00\nlayout: post\ntitle: 恋爱需要学习吗\ncategories: 随笔\ntags: \n\n恋爱需要学习吗？有人说不需要，喜欢一个人，自然而然地去接近，展现自己真实的一面最好。特别是不用学什么套路，会影响自己的行动。也有人说需要，爱情是复杂的，要避免卷入爱情的漩涡。\n我觉得恋爱它也是一种人与人的交往，但会更加亲密一点，有人际交往的共性，也有很多特性。我们是需要在实践中学习和积累经验的。在这里我记录下我关于恋爱的一些阶段性理解。\n一个人与两个人\n我们习惯了一个人生活，在和另一个人相处时往往会存在考虑不周的问题。比如要注意：\n\n喜欢吃的饭菜不一定相同\n两个人一起走路，不要走太快把对方甩在后面\n一起做什么事情一般需要提前计划与约定\n\n两个人相处，需要彼此靠近，但不是丢掉自己，一心在对方身上。在做好自己的同时，两个人朝着共同的方向进步是较为理想的状态。\n点变成线\n我们从小到大自主学习和被社会和家庭塑造的东西，都会影响我们在恋爱中的表现。\n这些东西用经历串联起来，可能就会得到最终的爱情成果。\n为什么爱上一个人\n不喜欢一个人，往往是可以明确说出原因的，而喜欢一个人似乎并不容易说出原因。\n我们在找对象时可能会设置很多标准和条件，但真的喜欢一个人时，这些标准可能都不考虑了。\n知道自己为什么会爱上一个人，也是一个认识自己的过程。\n可能是爱上了这个人的家乡，可能是爱上了谈恋爱的感觉，可能是因为这个人经常出现在自己面前。然后有那么一瞬间，突然就发现自己爱上这个人了。\n理论与实践\n谈恋爱的人会有非常复杂的心理和生理表现。有不少关于人的心理和爱情的理论和书籍。\n比如弗洛伊德的人格理论中，说人格由本我（id）、自我（ego）和超我（superego）构成。本我是满足人的基本生理需求的存在，自我则是自己意识的存在和觉醒，而超我是由社会规范、伦理道德、价值观念内化而来的存在。两个人相处，往往想展现自己完美的一面，展示的是比真实的自己更好的超我的一面，这是一种正常现象。\n比如爱情三角理论，认为爱情由三个基本成分组成：激情、亲密和承诺。激情是爱情中的性欲成分，是情绪上的着迷；亲密是指在爱情关系中能够引起的温暖体验；承诺指维持关系的决定期许或担保。\n比如三种依恋人格：焦虑型、回避型、安全型。\n但这些理论对真实的关系的建立帮助并不是很大，它们分析了爱情，但并不是在教我们具体该怎么做。\n真实的场景中，我们往往需要面对很多具体的问题，而且换一个人，我们还需要调整相处的模式。这里我们需要有一定的预先设想，但不要想太多，以避免陷入和自己想象中的人谈恋爱的问题，需要和对方多沟通和相处。\n其实不止是爱情，其它领域也存在理论与实践的问题。\n比如学翻译。在我的本科毕业论文里，我设计了一个翻译教学平台，提供翻译技巧案例、平行文本、教师评阅翻译作业等多种功能。我看了建构主义心理学、翻译理论、教育技术等各种相关的书籍，觉得把这些理论整合进一个系统非常有用。而在公开答辩的时候，一个做翻译的教授问我你觉得应该怎么提高翻译能力，我给出的回答是不断练习，却没有说学习什么理论。因为我的翻译实践太少了，这个时候很难对理论有深入的理解，实践多了，才能知道什么时候用什么样的翻译策略和理论。\n待更新……", "filename": "2023-02-15-do-we-have-to-learn-to-love.md"}, {"id": 392, "text": "\ndate: 2023-03-11 15:46:50+08:00\nlayout: post\ntitle: 仿粗体与仿斜体\ncategories: 技术随笔\ntags: B4J\n\n打开Word，在字体设置功能区里，我们可以轻松地设置文字字体为粗体、斜体，并执行添加下划线、设置颜色等操作。\n\n但实际上，很多字体并不支持设置斜体和粗体，比如绝大多数的汉字字体是没有斜体的。这里能设置斜体，是Word自身的富文本功能可以通过软件算法去模拟斜体效果。\n这样的功能在Photoshop中叫做仿斜体(faux bold)和仿粗体(faux italic)。用于字体不支持粗体斜体时模仿粗体斜体的效果。\n那什么时候需要用到粗体斜体呢？比如用于漫画翻译嵌字。虽然汉字没有斜体，但我们在翻译美漫的时候，为了实现异化的目的，可以沿用美漫中的用于表示突出和强调的粗斜体。\n我们可以基于JavaFX的Text组件去实现仿斜体和仿粗体，这里用B4J代码示例。\n仿粗体通过设置描边来实现：\nvb\nDim text as string = \"文本\"\nDim item As JavaObject\nitem.InitializeNewInstance(\"javafx.scene.text.Text\", Array(text))\nitem.RunMethod(\"setStroke\",Array(fx.Colors.Black))\nitem.RunMethod(\"setStrokeWidth\",Array(0.5))\n仿斜体通过设置透视变换来实现，它需要定义变换后四个坐标点的x、y的位置，数值是与原来坐标的差值：\nvb\nDim text as string = \"文本\"\nDim item As JavaObject\nitem.InitializeNewInstance(\"javafx.scene.text.Text\", Array(text))\nDim TR As JavaObject\nTR.InitializeNewInstance(\"javafx.scene.effect.PerspectiveTransform\",Null)\nTR.Runmethod(\"setUlx\",Array(2.0))\nTR.Runmethod(\"setUly\",Array(0.0))\nTR.Runmethod(\"setUrx\",Array(width + 2))\nTR.Runmethod(\"setUry\",Array(0.0))\nTR.Runmethod(\"setLrx\",Array(width))\nTR.Runmethod(\"setLry\",Array(height))\nTR.Runmethod(\"setLlx\",Array(0.0))\nTR.Runmethod(\"setLly\",Array(height))\nitem.RunMethod(\"setEffect\", Array(TR))\n最后的效果如下：\n", "filename": "2023-03-11-faux-bold-faux-italic.md"}, {"id": 393, "text": "\ndate: 2023-03-18 20:41:50+08:00\nlayout: post\ntitle: 词语的本义\ncategories: 随笔\ntags: 英语\n\n初中的时候上英语课，老师让我解释一下give me a hand的意思，我就照字面意思说：给我一只手，然后坐我边上的小姑娘笑了。老师说应该解释为帮助的意思。但我觉得我们从字面意思就能联想到它有帮助的意思，比如汉语中的帮把手，更加生动形象，解释为帮助只表达了give me a hand的语用含义，没有反应它的本义。\n这其实也是一个翻译问题，是选择直译还是意译。从传达含义的角度说，帮助的意思是传递了，不算翻译错误，只是一个选择的问题。\n但这样的翻译在我们学习语言的时候会带来一定的障碍。比如company这个词，我只学了它的中文意思是公司。结果后来碰到一个短语：for company，让我百思不得其含义。\n打开牛津词典，可以看到company的另一个含义是陪伴。company的语源是法语词compainie，与法语词compaignon相关。compaignon基于两个拉丁语词根而来： com和panis。com有使在一起的意思，而panis的意思是面包。所以它最初的意思是能一起共享面包的人，在后来它的含义被抽象为朋友。而公司也是据此引申出来的一个含义。\n知道了一个词的本义，我们可以更好地了解它在不同语境下的含义。但像公司这样的专有名词，我们还是需要通过词典来了解这个含义，不然单从本义推导出它的这个用法是有困难的。这也是词典里会显示一个词的多种含义的一个原因。\n很多英文单词，我们知道其含义，但不知道其词根、不知道其本来的含义。其实这个现象也存在于汉语。比如司机，它是一个动宾结构的短语，表示操作机械的人，但现在我们一般理解为汽车驾驶员。", "filename": "2023-03-18-know-about-words-from-its-roots.md"}, {"id": 394, "text": "\ndate: 2023-03-20 20:40:50+08:00\nlayout: post\ntitle: 被拒绝不一定是件坏事\ncategories: 随笔\ntags: \n\n我们在生活中经常会遇到被拒绝的情况。文章被拒、找工作被拒、表白被拒、邀约被拒等等。被拒绝的时候往往都是比较难过的，似乎之前的期望和努力都落空了。但回过头来想想，被拒绝不一定是件坏事。\n文章被拒，但编辑或者评审指出了我们的不足，让我们能改进文章后再次投稿。\n找工作被拒或者表白被拒，说明这份工作或者这个人目前不适合自己。\n邀约被拒，可能是这次邀约不合时宜，需要改日再约。\n被拒绝后坦然接受，及时止损，并从中学到点东西就是好事。\n我这里我再举一些自己找工作的例子。\n校招时哪些工作拒绝了我：成都一家翻译公司的翻译岗位、成都一家出版公司的编辑岗位、海康威视的技术写作岗位、新华社的外文内参岗位。这些岗位，我在找的时候都会脑补一番我的能力在他们公司有哪些用武之地，是多么的匹配。但在实际面试中，我感觉我的想法过于理想，地域、性格、能力等多方面都存在不合适的地方。虽然最后他们都拒绝了我，但我觉得他们都是很负责任的公司。如果他们给我发了offer，我可能要纠结很久去不去，而去工作后也可能因为不合适而主动离职。\n哪些工作录用了我但最后我自己主动放弃的：小米的本地化工程师岗位、商飞的软件开发岗位、银行的管培生岗位、南京一家出版公司的编辑岗位。这就是上面讲的给我发了offer的情况。这些工作在面试时就存在了解不够深入的问题，我的能力可能是匹配的，但我内心想做些更能提升自己和感兴趣的事情。这个时候，因为公司接受了你，需要自己对自己和公司这个岗位有清楚的认识，往往会耗费更多的精力。\n上面讲了被拒绝和被接受的情况，那还有一种是不拒绝不接受的情况。找工作的话，可能对应被放在offer池里的情况。表白的话，情况可能更复杂，这里就不具体讲了。\n相关文章：\n想了就去做", "filename": "2023-03-20-rejection-is-not-always-bad.md"}, {"id": 395, "text": "\ndate: 2023-04-23 21:27:50+08:00\nlayout: post\ntitle: 买房\ncategories: 随笔\ntags: \n\n在杭州租房两年多，在翠苑买了一套二手房。60多平，总价200多万。\n为什么不继续租房，因为之前租的城中村的房间虽然月租金只要1200元，但面积小，想换套大的，家庭手头现金也足够，干脆买房了。贷款30年，月供5800，其实和整租一套好点的房子价格差不多，但房子是自己的了，有产权、想怎么处理房子就怎么处理、房产还可能升值、加强归属感。\n看房子不是一件容易的事情，我们可以先列出一些条件来做筛选：\n\n价格\n面积\n户型\n设计\n楼层\n交通\n房龄\n周边环境\n……\n\n最终通过我爱我家中介，选了一套98年一梯两户南北通透的房子，原房东是浙大教授，房子装修得不错，空了一年，没有出租就是因为装修好，想直接转手给有缘人。\n确定后就是走流程：\n\n签合同\n办理贷款，选择30年等额本息的商业贷款\n等卖家还清贷款\n过户\n银行放款\n交房\n\n买房之后，还要考虑装修和买家具。和租房不一样，以前遇到事情找房东，现在都要自己操办了。\n在这个过程中可能会遇到不少问题，但方法总比问题多。既然选择了这套房子，就要好好地使用它。", "filename": "2023-04-23-bought-an-apartment-in-China.md"}, {"id": 396, "text": "\ndate: 2020-02-08 14:56:50+08:00\nlayout: post\ntitle: 使用JavaScript编写Photoshop脚本\ncategories: 技术随笔\ntags: CAT\n\n之前的文章Photoshop文档本地化脚本已经介绍过如何编写Photoshop的脚本。我这里再针对JavaScript做点补充。\n使用JavaScript的好处是跨平台，弊端是不如VBScript和AppleScript那样可以和系统更好地结合起来。\n另外，我电脑上装的Photoshop CS3的精简版，没有办法用COM进行调用，装完整版PS的话磁盘空间不够，用JS来写的话，因为是打开PS后选择脚本进行调用，不用考虑COM是否能调用的问题。\n首先来一波文档和工具链接：\n\nAdobe ExtendScript API documentation。用在Adobe中的JavaScript叫做ExtendScript，补充了很多API接口，比如本地文件读写的接口。\nLearn How to Script Adobe Photoshop CS2，较为全面的教程。\nJSON在线工具，查看导出的json时可以使用。\nScript Arsenal for Photoshop Photoshop脚本兵器库，提供一系列脚本示例\n\n下面是我觉得可以写一下的注意事项：\n\n默认不支持将JS对象转换为JSON字符串，可以把json2.js下下来include：#include json2.js。\n用上述方法调用JSON.stringify不能处理中文，需要将中文做encodeURI处理。\n要注意单位问题，PS中可以以点(point)或者像素(pixel)为单位。\n\n我编写了三个本地化PSD用的脚本(github)：\npsd2jpg.jsx，遍历某个目录及子目录下的所有PSD文档，另存为JPG\nreadTextLayers.jsx，遍历某个目录及子目录下的所有PSD文档，将所有文字图层的图层名、文字和坐标信息导出为一个json文件\naddLayers.jsx，根据ImageTrans导出的数据文件，给图片添加文字层或者用译文替换PSD里文字图层的原文\nJavaScript不是我的主力语言，所以折腾起来还是比较费劲。有一款漫画翻译标号工具叫LabelPlus，对PS脚本的利用比较充分。脚本项目地址：PS-Script\n2023-04-29 更新\nPhotoshop文档里介绍的功能比较有限，很多功能，比如选中某段文字设置行内样式是没有讲怎么操作的。这个时候需要使用ActionDescriptor处理。\n比如下面这段代码，设置当前文本图层前5个字符为仿斜体仿粗体，颜色为红色，文字大小为36：\n```js\nvar idtextLayer = stringIDToTypeID(\"textLayer\");\nvar idordinal = stringIDToTypeID(\"ordinal\");\nvar idtargetEnum = stringIDToTypeID(\"targetEnum\");\nvar idnull = charIDToTypeID( \"null\" );\nvar idfrom = charIDToTypeID(\"From\");\nvar idto = stringIDToTypeID(\"to\");\nvar idtextStyle = stringIDToTypeID(\"textStyle\");\nvar idtextStyleRange = stringIDToTypeID(\"textStyleRange\");\nvar idset = stringIDToTypeID(\"set\");\nvar idsize = stringIDToTypeID(\"size\");\nvar idpixelsUnit = stringIDToTypeID(\"pixelsUnit\");\nvar idcolor = stringIDToTypeID(\"color\");\nvar idRd = stringIDToTypeID(\"red\");\nvar idGrn = stringIDToTypeID(\"grain\");\nvar idBl = stringIDToTypeID(\"blue\");\nvar idRGBColor = stringIDToTypeID(\"RGBColor\");\nvar activeLayer = activeDocument.activeLayer;\nvar start = 0;\nvar end = 5;\nvar fontSize = 36;\nif (activeLayer.kind === LayerKind.TEXT) {\n    if ((activeLayer.textItem.contents !== \"\") && (start >= 0) && (end <= activeLayer.textItem.contents.length)) {\n    var reference = new ActionReference();\n    reference.putEnumerated(idtextLayer, idordinal, idtargetEnum);\n\n    var action = new ActionDescriptor();\n    action.putReference(idnull, reference);\n\n    var textAction = new ActionDescriptor();\n\n    var actionList = new ActionList();\n    var textRange = new ActionDescriptor();\n    textRange.putInteger(idfrom, start);\n    textRange.putInteger(idto, end);\n\n    var formatting = new ActionDescriptor();\n\n    formatting.putUnitDouble(idsize, idpixelsUnit, fontSize);\n    var idsyntheticItalic = stringIDToTypeID( \"syntheticItalic\" );\n    formatting.putBoolean(idsyntheticItalic, true);\n    var idsyntheticBold = stringIDToTypeID( \"syntheticBold\" );\n    formatting.putBoolean(idsyntheticBold, true);\n\n    var colorAction = new ActionDescriptor();\n    colorAction.putDouble(idRd, 255);\n    colorAction.putDouble(idGrn, 0);\n    colorAction.putDouble(idBl, 0);\n    formatting.putObject(idcolor, idRGBColor, colorAction);\n\n    textRange.putObject(idtextStyle, idtextStyle, formatting);\n    actionList.putObject(idtextStyleRange, textRange);\n    textAction.putList(idtextStyleRange, actionList);\n    action.putObject(idto, idtextLayer, textAction);\n    executeAction(idset, action, DialogModes.NO);\n}\n\n}\n```\n但我们要怎么知道如何写这些操作？Adobe官方有提供一个叫ScriptingListener的插件，安装后可以在桌面输出在Photoshop中操作对应的动作脚本供开发参考。\n有一个系列博客专门讲Photoshop脚本的开发，其中有介绍ActionDescriptor的部分：【CEP教程-8】Action Manager从好奇到劝退 - 上篇。", "filename": "2020-02-08-Photoshop-scripting-javascript.md"}, {"id": 397, "text": "\ndate: 2023-05-16 21:33:50+08:00\nlayout: post\ntitle: 相信\ncategories: 随笔\ntags: \n\n相信在现代汉语词典里的意思有认为某事正确、信赖某人。而在吴语方言中，它也有喜欢的意思，比如相信十字绣，是说有十字绣这个爱好，不过这一含义可以视为相信这个词的基本含义的引申义。因为相信具有多重含义，本文的英文标题采用的相信的拼音，而不是belief、hobby等词。\n相信这件事情为我们不同的人生阶段提供了动力，比如相信高考考上好的大学，能出人头地，比如相信学好本专业的知识，一定能找到好的工作。因为我们相信，所以能比较纯粹地去做一件事情。\n但现实却常常让我们发现，之前相信的事情并不完全是正确的。历史的车轮不断向前，一切都在发生着变化。各种条件在变，人自身的认识也在变。\n其实很多事情，不必放在一个很宏大的背景里面。只要有一点意义，就可以去相信，去做一些事情。\n我维护计算机辅助翻译软件快5年了，我知道它们是能切实提高工作效率的，我对此十分相信，所以我能一直坚持做下去。\n但很多事情并不像软件那样容易掌控，比如相信爱情、相信医生、相信健身教练这样依赖他人的事情。这时候还是需要自己学习一定的知识，做出正确的判断。", "filename": "2023-05-16-xiang-xin.md"}, {"id": 398, "text": "\ndate: 2023-05-20 14:45:50+08:00\nlayout: post\ntitle: 如何做好软件的市场工作\ncategories: 随笔\ntags: 个人开发\n\n我在一家2B的软件公司的市场部做了两年多的工作，自己也运营着一款同时面向个人用户和企业的软件3年多，这里想把过往的经验做个总结。\n市场工作，对应的英文是marketing，在台湾译为行销，而在日语则不做翻译，直接用片假名。工作内容主要是明确目标用户并做营销和推广，让用户发现并选择自己的产品。\n定义目标用户\n针对什么样的用户，做什么产品，好的开始是成功的一半。\n比如我要做辅助漫画翻译软件，目标用户就是有能力和意愿自己翻译出高质量漫画的人群或者公司，而不是希望点几下就能自动翻译漫画的用户。后者对软件的精细度要求低，竞争对手也会很多。辅助翻译软件对效率有很大的提升，付费需求也会更高。\n对于个人开发者来说，很多时候，可以先做一款自己会使用的软件。即使没有别人用，能帮助到自己也是有用的。\n用户转化的流程\n这里用一些专业术语，来说明用户转化的流程：\n\n访客（visitor）：访问了软件的相关内容\n线索（lead）：访问后主动联系了，提供了邮箱等联系方式\n客户（customer）：完成购买，成为了客户\n推广者（promoter）：用户完成购买后，还接着帮忙推广软件\n\n推广方式\n主要有建设网站、社交媒体营销、发贴等方式。\n网站\n网站可以包含各种内容，有产品描述页面、博客、视频、电子书、信息图表等等，帮助用户发现和了解产品。\n做内容时要适当考虑搜索引擎优化（SEO），方便搜索引擎检索到自己的内容。要思考下用户会用什么关键词去搜索到自己的产品。如果有钱，也可以买一些广告，做付费推广。\n社交媒体营销\n经营自己的媒体账号，积累粉丝。也可以联系网红KOL，让他们帮助营销。\n发贴\n前往潜在用户聚集的论坛等网络平台发贴。\n内容创作的一点思路\n\n结合某个应用案例\n结合某个热门技术\n结合热点事件\n\n需要一直做市场推广吗\n我个人而言，前期投入精力把需要的网站、文档、博客、视频建设好后，可以暂时不做内容更新。目标客户能发现自己的产品就行。后面随着软件更新和市场的变化再看看是不是要更新已有内容或者做一些新的市场工作。", "filename": "2023-05-20-software-marketing.md"}], "generated_timestamp": 1685775615693}